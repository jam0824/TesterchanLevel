var question_db = [
    {'id':1,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト見積り方法の一つ。見積り対象案件の「楽観値」、「悲観値」、および「最頻値」の見積りを使用して、結果となる見積りの確実度合を定義する。','correct':'3点見積り（three point estimation）','wrong':'ライフサイクルモデル（lifecycle model）,使用性テストタスク（usability test task）,クラシフィケーションツリー（classification tree）','explain':'3点見積り（three point estimation） : テスト見積り方法の一つ。見積り対象案件の「楽観値」、「悲観値」、および「最頻値」の見積りを使用して、結果となる見積りの確実度合を定義する。'},
{'id':2,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントまたはシステムに含まれる、定義された形式の構造で情報を交換するインターフェースの1つ。Application Programming Interface の頭字語。','correct':'API（API）','wrong':'確認テスト（confirmation testing）,ソフトウェアライフサイクル（software lifecycle）,故障率（failure rate）','explain':'API（API） : コンポーネントまたはシステムに含まれる、定義された形式の構造で情報を交換するインターフェースの1つ。Application Programming Interface の頭字語。'},
{'id':3,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アプリケーションのプログラミングインターフェースを直接使用し、テスト対象のソフトウェアにコマンドを発行して行うテスト。','correct':'APIテスト（API testing）','wrong':'判定（decision）,GUI（GUI）,サービス拒否（denial of service）','explain':'APIテスト（API testing） : アプリケーションのプログラミングインターフェースを直接使用し、テスト対象のソフトウェアにコマンドを発行して行うテスト。'},
{'id':4,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠Computer Aided Software Engineering（コンピュータ支援ソフトウェア開発）の頭字語。','correct':'CASE（CASE）','wrong':'モデリングツール（modeling tool）,ゴールクエスチョンメトリック（Goal Question Metric）,IDEAL（IDEAL）','explain':'CASE（CASE） : Computer Aided Software Engineering（コンピュータ支援ソフトウェア開発）の頭字語。'},
{'id':5,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠Computer Aided Software Testing（コンピュータ支援ソフトウェアテスト）の頭字語。test automationも参照のこと。','correct':'CAST（CAST）','wrong':'ロードプロファイル（load profile）,ネットワークゾーン（network zone）,資源効率性テスト（resource utilization testing）','explain':'CAST（CAST） : Computer Aided Software Testing（コンピュータ支援ソフトウェアテスト）の頭字語。test automationも参照のこと。'},
{'id':6,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠Command-Line Interface（コマンドラインインターフェース）の頭字語。','correct':'CLI（CLI）','wrong':'直交表テスト（orthogonal array testing）,アンチマルウェア（anti-malware）,障害許容性（fault tolerance）','explain':'CLI（CLI） : Command-Line Interface（コマンドラインインターフェース）の頭字語。'},
{'id':7,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠専用のコマンドラインインターフェースを使用してテスト対象のソフトウェアにコマンドを発行して行うテスト。','correct':'CLIテスト（CLI testing）','wrong':'テスト使命（test mission）,交流分析（transactional analysis）,品質マネジメント（quality management）','explain':'CLIテスト（CLI testing） : 専用のコマンドラインインターフェースを使用してテスト対象のソフトウェアにコマンドを発行して行うテスト。'},
{'id':8,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織の品質マネジメントシステムのための規範に縛られない（non-perspective）フレームワークであり、EFQM(ヨーロッパ品質マネジメント財団: European Foundation for Quality Management)によって定義され、所有している。優れた品質マネジメントシステム実現に向けた、五つの実現可能にするための基準（組織がすべきことを網羅）と四つの結果に関する基準（組織が達成すべきことを網羅）がある。JSTQB訳注）http://www.efqm.org/ 参照。','correct':'EFQMエクセレンスモデル（European Foundation for Quality Management excellence model）','wrong':'3点見積り（three point estimation）,偽陰性結果（false-negative result）,構成（configuration）','explain':'EFQMエクセレンスモデル（European Foundation for Quality Management excellence model） : 組織の品質マネジメントシステムのための規範に縛られない（non-perspective）フレームワークであり、EFQM(ヨーロッパ品質マネジメント財団: European Foundation for Quality Management)によって定義され、所有している。優れた品質マネジメントシステム実現に向けた、五つの実現可能にするための基準（組織がすべきことを網羅）と四つの結果に関する基準（組織が達成すべきことを網羅）がある。JSTQB訳注）http://www.efqm.org/ 参照。'},
{'id':9,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠グラフィカルユーザインターフェース（Graphical User Interface）の頭字語。','correct':'GUI（GUI）','wrong':'シーケンシャル開発モデル（sequential development model）,キャプチャ/プレイバック（capture/playback）,マルウェア（malware）','explain':'GUI（GUI） : グラフィカルユーザインターフェース（Graphical User Interface）の頭字語。'},
{'id':10,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠GUIを使用してテスト対象のソフトウェアを操作するテスト。','correct':'GUIテスト（GUI testing）','wrong':'テスト分析（test analysis）,ボットネット（botnet）,コールグラフ（call graph）','explain':'GUIテスト（GUI testing） : GUIを使用してテスト対象のソフトウェアを操作するテスト。'},
{'id':11,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠開始、計画、および改善のアクションを実装するためのロードマップとして機能する組織的な改善モデル。IDEALモデルは、開始、診断、確立、行動、および学習の五つのフェーズにちなんで名付けられた。JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。','correct':'IDEAL（IDEAL）','wrong':'プロジェクトの振り返り（project retrospective）,システム（system）,スモークテスト（smoke test）','explain':'IDEAL（IDEAL） : 開始、計画、および改善のアクションを実装するためのロードマップとして機能する組織的な改善モデル。IDEALモデルは、開始、診断、確立、行動、および学習の五つのフェーズにちなんで名付けられた。JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。'},
{'id':12,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠モデルベースドテストで使用するあらゆるモデル。','correct':'MBTモデル（MBT model）','wrong':'アクター（actor）,メモリリーク（memory leak）,ペアテスト（pair testing）','explain':'MBTモデル（MBT model） : モデルベースドテストで使用するあらゆるモデル。'},
{'id':13,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスイートが遂行したN+1遷移のシーケンスのパーセンテージ。','correct':'N スイッチカバレッジ（N-switch coverage）','wrong':'使用性テストの参加者（usability test participant）,テスト環境（test environment）,テストプロセス改善マニフェスト（test process improvement manifesto）','explain':'N スイッチカバレッジ（N-switch coverage） : テストスイートが遂行したN+1遷移のシーケンスのパーセンテージ。'},
{'id':14,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠リスクベースドテストの体系的なアプローチ。プロダクトリスクの識別と分析を行ない、発生可能性および影響に基づくプロダクトリスクマトリクスを作成する。この用語はProduct RISk MAnagement（プロダクトリスクマネジメント）の略語である。','correct':'PRISMA（PRISMA）','wrong':'レビューア（reviewer）,運用環境（operational environment）,フィッシング（phishing）','explain':'PRISMA（PRISMA） : リスクベースドテストの体系的なアプローチ。プロダクトリスクの識別と分析を行ない、発生可能性および影響に基づくプロダクトリスクマトリクスを作成する。この用語はProduct RISk MAnagement（プロダクトリスクマネジメント）の略語である。'},
{'id':15,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠目標を、汎用的ではなく、非常に具体的に定義する方法論。SMARTは、定義される目標の属性を表すSpecific（具体的な）、Measurable（測定可能な）、Attainable（達成可能な）、Relevant（妥当な）、およびTimely （タイムリーな）からの頭字語である。','correct':'S.M.A.R.T. ゴール方法論（S.M.A.R.T. goal methodology）','wrong':'合目的性（suitability）,開始 （IDEAL)（initiating (IDEAL)）,CLIテスト（CLI testing）','explain':'S.M.A.R.T. ゴール方法論（S.M.A.R.T. goal methodology） : 目標を、汎用的ではなく、非常に具体的に定義する方法論。SMARTは、定義される目標の属性を表すSpecific（具体的な）、Measurable（測定可能な）、Attainable（達成可能な）、Relevant（妥当な）、およびTimely （タイムリーな）からの頭字語である。'},
{'id':16,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティ攻撃方法の一つ。悪意のあるSQLステートメントを入力フィールドに挿入して実行する。','correct':'SQLインジェクション（SQL injection）','wrong':'影響度分析（impact analysis）,モデレーター（moderator）,メンテナンステスト（maintenance testing）','explain':'SQLインジェクション（SQL injection） : セキュリティ攻撃方法の一つ。悪意のあるSQLステートメントを入力フィールドに挿入して実行する。'},
{'id':17,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストプロセスを改善するための、継続するビジネス駆動のフレームワーク。効果的で効率的なテストプロセスの主要な要素を定義する。','correct':'TPI Next（TPI Next）','wrong':'テストサマリーレポート（test summary report）,リスクの影響（risk impact）,体系的テストと評価プロセス（STEP）','explain':'TPI Next（TPI Next） : テストプロセスを改善するための、継続するビジネス駆動のフレームワーク。効果的で効率的なテストプロセスの主要な要素を定義する。'},
{'id':18,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ビジネス要件仕様からデリバリーまでのソフトウェア開発の主要なフェーズと対応する受け入れテストからコンポーネントテストまでのテストレベルとの間の1対1の関係を示したシーケンシャル開発ライフサイクルモデル。','correct':'V字モデル（V-model）','wrong':'テストリーダー（test leader）,経験ベースのテスト技法（experience-based test technique）,コールグラフ（call graph）','explain':'V字モデル（V-model） : ビジネス要件仕様からデリバリーまでのソフトウェア開発の主要なフェーズと対応する受け入れテストからコンポーネントテストまでのテストレベルとの間の1対1の関係を示したシーケンシャル開発ライフサイクルモデル。'},
{'id':19,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠エンドユーザの視点から Web サイトのソフトウェア品質を測定するために、アンケートを用いる使用性テストの技法。','correct':'Webサイト解析と測定一覧表（Website Analysis and Measurement Inventory）','wrong':'テストタイプ（test type）,プロジェクト（project）,マインドマップ（mind map）','explain':'Webサイト解析と測定一覧表（Website Analysis and Measurement Inventory） : エンドユーザの視点から Web サイトのソフトウェア品質を測定するために、アンケートを用いる使用性テストの技法。'},
{'id':20,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロジェクトとは異なる場所で、従業員ではない人々により実行されるテスト。','correct':'アウトソーステスト（outsourced testing）','wrong':'テストフェーズ（test phase）,成熟度モデル（maturity model）,テスト目的（test objective）','explain':'アウトソーステスト（outsourced testing） : プロジェクトとは異なる場所で、従業員ではない人々により実行されるテスト。'},
{'id':21,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティ攻撃に使用することを目的として、ユーザアカウント情報をトライ＆エラーで繰り返し試みて取得するプロセス。','correct':'アカウントハーベスティング（account harvesting）','wrong':'シナリオベースドレビュー（scenario-based reviewing）,測定（measurement）,水平トレーサビリティ（horizontal traceability）','explain':'アカウントハーベスティング（account harvesting） : セキュリティ攻撃に使用することを目的として、ユーザアカウント情報をトライ＆エラーで繰り返し試みて取得するプロセス。'},
{'id':22,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠異なる特性と能力を持つさまざまな人が、特定の使用状況で特定の目標を達成するためにコンポーネントやシステムを使用できる度合。','correct':'アクセシビリティ（accessibility）','wrong':'有効性（effectiveness）,デシジョンテスト（decision testing）,テスト生成レイヤー（test generation layer）','explain':'アクセシビリティ（accessibility） : 異なる特性と能力を持つさまざまな人が、特定の使用状況で特定の目標を達成するためにコンポーネントやシステムを使用できる度合。'},
{'id':23,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠身体的な制約を持つ人を含むユーザが、どの程度容易にコンポーネントやシステムを利用できるか判定するテスト。 JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。','correct':'アクセシビリティテスト（accessibility testing）','wrong':'テストリーダー（test leader）,改良条件判定カバレッジ（MC／DC）（modified condition / decision coverage）,拡張性（scalability）','explain':'アクセシビリティテスト（accessibility testing） : 身体的な制約を持つ人を含むユーザが、どの程度容易にコンポーネントやシステムを利用できるか判定するテスト。 JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。'},
{'id':24,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定の方法でテスト対象とやりとりするユーザーまたは他の人、あるいはシステム。','correct':'アクター（actor）','wrong':'インシデントマネジメント（incident management）,資源効率性（resource utilization）,テスト実装（test implementation）','explain':'アクター（actor） : 特定の方法でテスト対象とやりとりするユーザーまたは他の人、あるいはシステム。'},
{'id':25,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠イテレーティブ-インクリメンタル開発に基づくソフトウェア開発。自己組織化された機能横断的役割を担うチーム間での共同作業によって要件と解決策を発展させていく。','correct':'アジャイルソフトウェア開発（agile software development）','wrong':'反復開発モデル（iterative development model）,魅力性（attractiveness）,セキュリティの脆弱性（security vulnerability）','explain':'アジャイルソフトウェア開発（agile software development） : イテレーティブ-インクリメンタル開発に基づくソフトウェア開発。自己組織化された機能横断的役割を担うチーム間での共同作業によって要件と解決策を発展させていく。'},
{'id':26,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠エクストリームプログラミング（XP）のような技法や手法が取り込まれているアジャイルソフトウェア開発方法論を用いたり、開発をテストの一部とみなしたり、テストファースト設計パラダイムを重視するプロジェクトで実施するテスト。','correct':'アジャイルテスト（agile testing）','wrong':'トレーサビリティマトリクス（traceability matrix）,負荷テスト（load testing）,同値分割法（equivalence partitioning）','explain':'アジャイルテスト（agile testing） : エクストリームプログラミング（XP）のような技法や手法が取り込まれているアジャイルソフトウェア開発方法論を用いたり、開発をテストの一部とみなしたり、テストファースト設計パラダイムを重視するプロジェクトで実施するテスト。'},
{'id':27,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アジャイルソフトウェア開発を支援する価値に関する宣言。ここでいう価値とは、以下のようなものである。・プロセスやツールよりも個人との対話を重視する・網羅的なドキュメントよりも動作するソフトウェアを重視する・契約交渉よりも顧客との協調を重視する・計画に従うことよりも変化に対応することを重視する','correct':'アジャイルマニフェスト（agile manifesto）','wrong':'測定（measurement）,使用性テストセッション（usability test session）,構成アイテム（configuration item）','explain':'アジャイルマニフェスト（agile manifesto） : アジャイルソフトウェア開発を支援する価値に関する宣言。ここでいう価値とは、以下のようなものである。・プロセスやツールよりも個人との対話を重視する・網羅的なドキュメントよりも動作するソフトウェアを重視する・契約交渉よりも顧客との協調を重視する・計画に従うことよりも変化に対応することを重視する'},
{'id':28,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アセスメント結果、たとえば結論、提案、所見などをまとめたドキュメント。','correct':'アセスメントレポート（assessment report）','wrong':'成熟性（maturity）,ユーザエクスペリエンス（user experience）,テストモニタリング（test monitoring）','explain':'アセスメントレポート（assessment report） : アセスメント結果、たとえば結論、提案、所見などをまとめたドキュメント。'},
{'id':29,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アセスメントを実行する人。アセスメントチームのメンバー。','correct':'アセッサー（assessor）','wrong':'ソーシャルエンジニアリング（social engineering）,テストサマリーレポート（test summary report）,テスト自動化アーキテクチャ（test automation architecture）','explain':'アセッサー（assessor） : アセスメントを実行する人。アセスメントチームのメンバー。'},
{'id':30,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠任意のレビューアが非公式に、体系的なプロセスを使用することなく行うレビュー技法。','correct':'アドホックレビュー（ad hoc review）','wrong':'セキュリティの脆弱性（security vulnerability）,テストタイプ（test type）,テスト技法（test technique）','explain':'アドホックレビュー（ad hoc review） : 任意のレビューアが非公式に、体系的なプロセスを使用することなく行うレビュー技法。'},
{'id':31,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠開発担当者のテスト環境で実行されるシミュレーションまたは実際の運用テスト。開発組織外の担当者が実行する。','correct':'アルファテスト（alpha testing）','wrong':'セキュリティポリシー（security policy）,置換性（replaceability）,非機能要件（non-functional requirement）','explain':'アルファテスト（alpha testing） : 開発担当者のテスト環境で実行されるシミュレーションまたは実際の運用テスト。開発組織外の担当者が実行する。'},
{'id':32,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠最初は有益で一般的に使用できるように思われるが、実際には効果がない、または逆効果である反復的な活動、プロセス、構造、または再利用可能なソリューション。','correct':'アンチパターン（anti-pattern）','wrong':'使用性（usability）,テスト設計ツール（test design tool）,テストディレクタ（test director）','explain':'アンチパターン（anti-pattern） : 最初は有益で一般的に使用できるように思われるが、実際には効果がない、または逆効果である反復的な活動、プロセス、構造、または再利用可能なソリューション。'},
{'id':33,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠マルウェアを検出し阻止するソフトウェア。malwareも参照のこと。','correct':'アンチマルウェア（anti-malware）','wrong':'テスト手順（test procedure）,回帰回避テスト（regression-averse testing）,ユーザストーリー（user story）','explain':'アンチマルウェア（anti-malware） : マルウェアを検出し阻止するソフトウェア。malwareも参照のこと。'},
{'id':34,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠開発ライフサイクルの一つ。プロジェクトの範囲は一般的にプロジェクトライフサイクルの早期に決定するが、時間と費用の見積もりは、プロジェクトチームのプロダクトに対する理解度の増加に応じて変更する。プロダクトは一連の反復サイクルを繰り返して開発する。各反復サイクルでは、プロダクトの機能を継続的に追加する。','correct':'インクリメンタル開発モデル（incremental development model）','wrong':'キャプチャ/プレイバック（capture/playback）,ファシリテーター（facilitator）,使用性要件（usability requirement）','explain':'インクリメンタル開発モデル（incremental development model） : 開発ライフサイクルの一つ。プロジェクトの範囲は一般的にプロジェクトライフサイクルの早期に決定するが、時間と費用の見積もりは、プロジェクトチームのプロダクトに対する理解度の増加に応じて変更する。プロダクトは一連の反復サイクルを繰り返して開発する。各反復サイクルでは、プロダクトの機能を継続的に追加する。'},
{'id':35,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティ脅威の一つ。多くの場合、組織内の認可されているシステムユーザが実行する。','correct':'インサイダー脅威（insider threat）','wrong':'テストラン（test run）,品質機能展開（quality function deployment）,トレーサビリティマトリクス（traceability matrix）','explain':'インサイダー脅威（insider threat） : セキュリティ脅威の一つ。多くの場合、組織内の認可されているシステムユーザが実行する。'},
{'id':36,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠インシデントを認識、調査、対策、解明するプロセス。インシデントの記録、分類、影響度の識別が必要。','correct':'インシデントマネジメント（incident management）','wrong':'リスクレベル（risk level）,非形式的レビュー（informal review）,テスト成熟度モデル統合（Test Maturity Model integration）','explain':'インシデントマネジメント（incident management） : インシデントを認識、調査、対策、解明するプロセス。インシデントの記録、分類、影響度の識別が必要。'},
{'id':37,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠インシデントの発生、特性、およびステータスを報告するドキュメント。','correct':'インシデントレポート（incident report）','wrong':'侵入テスト（penetration testing）,システムハードニング（system hardening）,テストフェーズ（test phase）','explain':'インシデントレポート（incident report） : インシデントの発生、特性、およびステータスを報告するドキュメント。'},
{'id':38,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠インストールプロセス中、インストールを誘導するソフトウェア。いろいろな形態の媒体で提供される。インストールを実行し、インストール実施結果情報を出力し、オプション機能のガイダンスを表示するものが多い。','correct':'インストールウィザード（installation wizard）','wrong':'妥当性確認（validation）,メンテナンステスト（maintenance testing）,レビュー（review）','explain':'インストールウィザード（installation wizard） : インストールプロセス中、インストールを誘導するソフトウェア。いろいろな形態の媒体で提供される。インストールを実行し、インストール実施結果情報を出力し、オプション機能のガイダンスを表示するものが多い。'},
{'id':39,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠インストールプロセス中、インストールをガイドする説明書で最適の媒体で提供される。マニュアルガイド、段階的な処理手順、インストールウィザード、その他類似の手順記述などの形式をとる。','correct':'インストールガイド（installation guide）','wrong':'ハッシュ化（hashing）,認証（authentication）,欠陥レポート（defect report）','explain':'インストールガイド（installation guide） : インストールプロセス中、インストールをガイドする説明書で最適の媒体で提供される。マニュアルガイド、段階的な処理手順、インストールウィザード、その他類似の手順記述などの形式をとる。'},
{'id':40,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠公式レビューの一種であり、成果物の懸念事項を識別する。識別した懸念事項は、レビュープロセスとソフトウェア開発プロセスの改善に役立つ測定値として提供される。','correct':'インスペクション（inspection）','wrong':'カバレッジツール（coverage tool）,テスト終了作業（test closure）,ドライバ（driver）','explain':'インスペクション（inspection） : 公式レビューの一種であり、成果物の懸念事項を識別する。識別した懸念事項は、レビュープロセスとソフトウェア開発プロセスの改善に役立つ測定値として提供される。'},
{'id':41,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠同じ組織ではない人が、プロジェクトチームと同じ場所で行なうテスト。','correct':'インソーステスト（insourced testing）','wrong':'平均修復時間（MTTR）（mean time to repair）,ソフトウェアプロセス改善（software process improvement）,出力（output）','explain':'インソーステスト（insourced testing） : 同じ組織ではない人が、プロジェクトチームと同じ場所で行なうテスト。'},
{'id':42,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠統合テストの一種。コンポーネントやシステムのインターフェーステストを実施する。','correct':'インターフェーステスト（interface testing）','wrong':'静的アナライザ（static analyzer）,テスト適合レイヤー（test adaptation layer）,プロセスモデル（process model）','explain':'インターフェーステスト（interface testing） : 統合テストの一種。コンポーネントやシステムのインターフェーステストを実施する。'},
{'id':43,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが拒否する入力値を使うテスト。','correct':'インバリッドテスト（invalid testing）','wrong':'資格認定（qualification）,系統的テスト戦略（methodical test strategy）,インストールウィザード（installation wizard）','explain':'インバリッドテスト（invalid testing） : コンポーネントやシステムが拒否する入力値を使うテスト。'},
{'id':44,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠一連のウェブアクセシビリティガイドラインの一部分。インターネットに関する主要な標準組織であるWorld Wide Web Consortium（W3C）のWeb Accessibility Initiative（WAI）が発行している。特に身体的な制約を持つ人がコンテンツを利用できるようにするための一連のガイドラインを含む。','correct':'ウェブコンテンツアクセシビリティガイドライン（Web Content Accessibility Guidelines）','wrong':'責任分担（RACI）マトリクス（RACI matrix）,回復性テスト（recoverability testing）,セキュリティポリシー（security policy）','explain':'ウェブコンテンツアクセシビリティガイドライン（Web Content Accessibility Guidelines） : 一連のウェブアクセシビリティガイドラインの一部分。インターネットに関する主要な標準組織であるWorld Wide Web Consortium（W3C）のWeb Accessibility Initiative（WAI）が発行している。特に身体的な制約を持つ人がコンテンツを利用できるようにするための一連のガイドラインを含む。'},
{'id':45,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠レビューの種類の1つ。ドキュメントの著者が中間成果物を使用してレビューのメンバーを主導する。レビューメンバーは懸念事項について、質問やコメントを行う。','correct':'ウォークスルー（walkthrough）','wrong':'品質保証（quality assurance）,ユーザアンケート（user survey）,GUI（GUI）','explain':'ウォークスルー（walkthrough） : レビューの種類の1つ。ドキュメントの著者が中間成果物を使用してレビューのメンバーを主導する。レビューメンバーは懸念事項について、質問やコメントを行う。'},
{'id':46,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アジャイルソフトウェア開発の中で使用されるソフトウェアエンジニアリング方法論。中心となるプラクティスは、ペアプログラミング、徹底したコードレビュー、全てのコードの単体テスト、単純明快なコードなどである。','correct':'エクストリームプログラミング（Extreme Programming）','wrong':'スクラム（scrum）,アウトソーステスト（outsourced testing）,テスト手順（test procedure）','explain':'エクストリームプログラミング（Extreme Programming） : アジャイルソフトウェア開発の中で使用されるソフトウェアエンジニアリング方法論。中心となるプラクティスは、ペアプログラミング、徹底したコードレビュー、全てのコードの単体テスト、単純明快なコードなどである。'},
{'id':47,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ある特定のシステムと同じ入力を受け入れ、同じ出力を作り出す装置、コンピュータプログラム、またはシステム。','correct':'エミュレータ（emulator）','wrong':'監査（audit）,レベルテスト計画書（level test plan）,特性要因図（cause-effect diagram）','explain':'エミュレータ（emulator） : ある特定のシステムと同じ入力を受け入れ、同じ出力を作り出す装置、コンピュータプログラム、またはシステム。'},
{'id':48,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠間違った結果を生み出す人間の行為。','correct':'エラー（error）','wrong':'運用受け入れテスト（operational acceptance testing）,インバリッドテスト（invalid testing）,ストレステストツール（stress testing tool）','explain':'エラー（error） : 間違った結果を生み出す人間の行為。'},
{'id':49,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト技法の1つ。テスト担当者の経験を駆使し、過去の故障の知識や故障モードの全般的な知識を使用して、テストを導出する。','correct':'エラー推測（error guessing）','wrong':'ハザード分析（hazard analysis）,トレーサビリティ（traceability）,情動知能（emotional intelligence）','explain':'エラー推測（error guessing） : テスト技法の1つ。テスト担当者の経験を駆使し、過去の故障の知識や故障モードの全般的な知識を使用して、テストを導出する。'},
{'id':50,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠誤ったデータを入力しても、通常運用を続けられるコンポーネントやシステムの能力。','correct':'エラー耐性（error tolerance）','wrong':'マイルストン（milestone）,改良条件判定カバレッジ（MC／DC）（modified condition / decision coverage）,成熟性（maturity）','explain':'エラー耐性（error tolerance） : 誤ったデータを入力しても、通常運用を続けられるコンポーネントやシステムの能力。'},
{'id':51,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアツールの一つの種類。全ての潜在的なユーザに、通常はインターネットを介して、ソースコードの形式で提供される。一般的に、ユーザはライセンスの下で許可が与えられ、調査、変更、機能強化、場合によってはソフトウェア配布を行なうために使用する。','correct':'オープンソースツール（open source tool）','wrong':'経験ベースのテスト（experience-based testing）,トレーサビリティマトリクス（traceability matrix）,GUIテスト（GUI testing）','explain':'オープンソースツール（open source tool） : ソフトウェアツールの一つの種類。全ての潜在的なユーザに、通常はインターネットを介して、ソースコードの形式で提供される。一般的に、ユーザはライセンスの下で許可が与えられ、調査、変更、機能強化、場合によってはソフトウェア配布を行なうために使用する。'},
{'id':52,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠モデルベースドテストアプローチの一つ。作成するテストケースを将来の実行用にリポジトリに格納する。','correct':'オフラインMBT（offline MBT）','wrong':'使用性（usability）,テストタイプ（test type）,シミュレーション（simulation）','explain':'オフラインMBT（offline MBT） : モデルベースドテストアプローチの一つ。作成するテストケースを将来の実行用にリポジトリに格納する。'},
{'id':53,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠モデルベースドテストアプローチの一つ。テストケースの作成と実行は同時に行われる。','correct':'オンラインMBT（online MBT）','wrong':'パス〔合格〕（pass）,市販ソフトウェア（COTS）,ウェブコンテンツアクセシビリティガイドライン（Web Content Accessibility Guidelines）','explain':'オンラインMBT（online MBT） : モデルベースドテストアプローチの一つ。テストケースの作成と実行は同時に行われる。'},
{'id':54,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定ユーザや特定顧客専用に開発したソフトウェア。反対語はoff-the-shelf software（既製ソフトウェア）。','correct':'カスタムソフトウェア（custom software）','wrong':'品質マネジメント（quality management）,ハッカー（hacker）,ラショナル統一プロセス（Rational Unified Process）','explain':'カスタムソフトウェア（custom software） : 特定ユーザや特定顧客専用に開発したソフトウェア。反対語はoff-the-shelf software（既製ソフトウェア）。'},
{'id':55,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定のユーザまたは顧客へ特別に開発されたソフトウェアツール。','correct':'カスタムツール（custom tool）','wrong':'テストハーネス（test harness）,3点見積り（three point estimation）,ドライバ（driver）','explain':'カスタムツール（custom tool） : 特定のユーザまたは顧客へ特別に開発されたソフトウェアツール。'},
{'id':56,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスイートを使用して特定のカバレッジアイテムを判定または実行した度合い。パーセンテージで表す。','correct':'カバレッジ（coverage）','wrong':'トレーサビリティマトリクス（traceability matrix）,セキュリティ手順（security procedure）,制御フロー（control flow）','explain':'カバレッジ（coverage） : テストスイートを使用して特定のカバレッジアイテムを判定または実行した度合い。パーセンテージで表す。'},
{'id':57,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト技法を使用して、一つ以上のテスト条件から導出される属性または属性の組み合わせ。テスト実行の完全性を測定するために使用する。','correct':'カバレッジアイテム（coverage item）','wrong':'条件カバレッジ（condition coverage）,不可分条件（atomic condition）,成熟度モデル（maturity model）','explain':'カバレッジアイテム（coverage item） : テスト技法を使用して、一つ以上のテスト条件から導出される属性または属性の組み合わせ。テスト実行の完全性を測定するために使用する。'},
{'id':58,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスイートが遂行したステートメントや分岐等の構成要素の客観的な測定結果を提供するツール。','correct':'カバレッジツール（coverage tool）','wrong':'テスト環境（test environment）,インシデントマネジメント（incident management）,発見事項（finding）','explain':'カバレッジツール（coverage tool） : テストスイートが遂行したステートメントや分岐等の構成要素の客観的な測定結果を提供するツール。'},
{'id':59,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスクリプト記述技術の1つ。テストデータと期待結果だけでなく、テスト対象アプリケーションに関係するキーワードを含んだデータファイルを使う。キーワードは、テストの制御スクリプトが呼び出す特別な補助スクリプトが解釈する。','correct':'キーワード駆動テスト（keyword-driven testing）','wrong':'段階表現（staged representation）,障害許容性（fault tolerance）,シミュレータ（simulator）','explain':'キーワード駆動テスト（keyword-driven testing） : テストスクリプト記述技術の1つ。テストデータと期待結果だけでなく、テスト対象アプリケーションに関係するキーワードを含んだデータファイルを使う。キーワードは、テストの制御スクリプトが呼び出す特別な補助スクリプトが解釈する。'},
{'id':60,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト自動化手法の一つ。手動テスト中の入力を記録させ、自動テストのスクリプトを作成して、後に実行（再現）させるもの。','correct':'キャプチャ/プレイバック（capture/playback）','wrong':'テスト対象（test object）,アドホックレビュー（ad hoc review）,互換性（compatibility）','explain':'キャプチャ/プレイバック（capture/playback） : テスト自動化手法の一つ。手動テスト中の入力を記録させ、自動テストのスクリプトを作成して、後に実行（再現）させるもの。'},
{'id':61,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト実行ツールの一つ。手動テスト中の入力を記録させ、自動テストのスクリプトを作成して、後に実行（再現）させるもの。自動回帰テストで利用することが多い。','correct':'キャプチャ/プレイバックツール（capture/playback tool）','wrong':'システムテスト（system testing）,終了点（exit point）,効率性（efficiency）','explain':'キャプチャ/プレイバックツール（capture/playback tool） : テスト実行ツールの一つ。手動テスト中の入力を記録させ、自動テストのスクリプトを作成して、後に実行（再現）させるもの。自動回帰テストで利用することが多い。'},
{'id':62,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠階層的な順番で同値分割を示したツリーであり、クラシフィケーションツリー法でテストケースを作成するときに使う。','correct':'クラシフィケーションツリー（classification tree）','wrong':'静的解析（static analysis）,同等の手動テスト工数（equivalent manual test effort）,ロードプロファイル（load profile）','explain':'クラシフィケーションツリー（classification tree） : 階層的な順番で同値分割を示したツリーであり、クラシフィケーションツリー法でテストケースを作成するときに使う。'},
{'id':63,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト設計技法の一つ。クラシフィケーションツリーを使って入力ドメインや出力ドメインの代表値の組み合わせを設計し、テストケースを記述する。','correct':'クラシフィケーションツリー法（classification tree method）','wrong':'ベストプラクティス（best practice）,フォールトシーディングツール（fault seeding tool）,オフラインMBT（offline MBT）','explain':'クラシフィケーションツリー法（classification tree method） : ブラックボックステスト設計技法の一つ。クラシフィケーションツリーを使って入力ドメインや出力ドメインの代表値の組み合わせを設計し、テストケースを記述する。'},
{'id':64,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠12の重要なプロセスから構成されるテストプロセス改善のためのコンテンツベースドモデル。企業の利益や評価に影響を与えるようなミッションクリティカルなプロセスやコンピタンスの状況を同僚や経営陣が判断できるよう高度に可視化したプロセスを含む。','correct':'クリティカルテストプロセス（Critical Testing Processes）','wrong':'テスト戦略（test strategy）,ステートメントカバレッジ（statement coverage）,セキュリティ攻撃（security attack）','explain':'クリティカルテストプロセス（Critical Testing Processes） : 12の重要なプロセスから構成されるテストプロセス改善のためのコンテンツベースドモデル。企業の利益や評価に影響を与えるようなミッションクリティカルなプロセスやコンピタンスの状況を同僚や経営陣が判断できるよう高度に可視化したプロセスを含む。'},
{'id':65,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠脆弱性の一つ。悪意のあるコードを安全なWebサイトへ感染させるために攻撃者が悪用することを可能にする。','correct':'クロスサイトスクリプティング（cross-site scripting）','wrong':'フォールトインジェクション（fault injection）,アクター（actor）,フォールト攻撃（fault attack）','explain':'クロスサイトスクリプティング（cross-site scripting） : 脆弱性の一つ。悪意のあるコードを安全なWebサイトへ感染させるために攻撃者が悪用することを可能にする。'},
{'id':66,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠データもしくはプログラムコンポーネントの設計の特性を示す、もしくは設計の説明をした標準の1つ。','correct':'コーディング標準（coding standard）','wrong':'行動 (IDEAL)（acting (IDEAL)）,テストツール（test tool）,障害許容性（fault tolerance）','explain':'コーディング標準（coding standard） : データもしくはプログラムコンポーネントの設計の特性を示す、もしくは設計の説明をした標準の1つ。'},
{'id':67,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスイートが、ソフトウェアのどの部分を実行（網羅）し、どの部分が未実行かを判定する分析手法。たとえば、ステートメントカバレッジ、デシジョンカバレッジ、条件カバレッジ。','correct':'コードカバレッジ（code coverage）','wrong':'非機能要件（non-functional requirement）,セキュリティテスト（security testing）,テスト環境（test environment）','explain':'コードカバレッジ（code coverage） : テストスイートが、ソフトウェアのどの部分を実行（網羅）し、どの部分が未実行かを判定する分析手法。たとえば、ステートメントカバレッジ、デシジョンカバレッジ、条件カバレッジ。'},
{'id':68,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠企業業績の状況に関するダッシュボードスタイルの表現。','correct':'コーポレートダッシュボード（corporate dashboard）','wrong':'インシデントレポート（incident report）,アカウントハーベスティング（account harvesting）,機能適合性（functional suitability）','explain':'コーポレートダッシュボード（corporate dashboard） : 企業業績の状況に関するダッシュボードスタイルの表現。'},
{'id':69,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠三つのレベル、すなわち、概念的なレベル（ゴール）、運用上のレベル（クエスチョン）、定量的なレベル（メトリック）のモデルを用いたソフトウェア測定のアプローチ。','correct':'ゴールクエスチョンメトリック（Goal Question Metric）','wrong':'クリティカルテストプロセス（Critical Testing Processes）,V字モデル（V-model）,構造カバレッジ（structural coverage）','explain':'ゴールクエスチョンメトリック（Goal Question Metric） : 三つのレベル、すなわち、概念的なレベル（ゴール）、運用上のレベル（クエスチョン）、定量的なレベル（メトリック）のモデルを用いたソフトウェア測定のアプローチ。'},
{'id':70,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プログラムにおけるサブルーチン間の呼び出し関係の抽象的表現。','correct':'コールグラフ（call graph）','wrong':'使用性（usability）,状態遷移テスト（state transition testing）,カバレッジツール（coverage tool）','explain':'コールグラフ（call graph） : プログラムにおけるサブルーチン間の呼び出し関係の抽象的表現。'},
{'id':71,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト戦略の一つ。テストチームは一人以上の主要なステークホルダからの意見を戦略の詳細に反映する。','correct':'コンサルテーションテスト戦略（consultative test strategy）','wrong':'動的解析（dynamic analysis）,テスト自動化戦略（test automation strategy）,カスタムツール（custom tool）','explain':'コンサルテーションテスト戦略（consultative test strategy） : テスト戦略の一つ。テストチームは一人以上の主要なステークホルダからの意見を戦略の詳細に反映する。'},
{'id':72,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠優れたエンジニアリングプラクティス(たとえば、テストプラクティス)に関する詳細な説明を提供するプロセスモデル。','correct':'コンテンツベースドモデル（content-based model）','wrong':'平均修復時間（MTTR）（mean time to repair）,テストケース（test case）,構成（configuration）','explain':'コンテンツベースドモデル（content-based model） : 優れたエンジニアリングプラクティス(たとえば、テストプラクティス)に関する詳細な説明を提供するプロセスモデル。'},
{'id':73,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティ攻撃の成功度合を判定し、発生した被害を評価する作業。','correct':'コンピュータフォレンジクス（computer forensics）','wrong':'思考発話法使用性テスト（think aloud usability testing）,対処的テスト戦略（reactive test strategy）,レベルテスト計画書（level test plan）','explain':'コンピュータフォレンジクス（computer forensics） : セキュリティ攻撃の成功度合を判定し、発生した被害を評価する作業。'},
{'id':74,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠独立してテストできる、システムの最小構成単位。','correct':'コンポーネント（component）','wrong':'システムオブシステムズ（system of systems）,偵察（reconnaissance）,アンチパターン（anti-pattern）','explain':'コンポーネント（component） : 独立してテストできる、システムの最小構成単位。'},
{'id':75,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠個々のハードウェアコンポーネントまたはソフトウェアコンポーネントのテスト。','correct':'コンポーネントテスト（component testing）','wrong':'パスワードクラック（password cracking）,同値分割カバレッジ（equivalence partition coverage）,モデレーター（moderator）','explain':'コンポーネントテスト（component testing） : 個々のハードウェアコンポーネントまたはソフトウェアコンポーネントのテスト。'},
{'id':76,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠統合したコンポーネント間のインターフェースや相互作用の欠陥を検出するためのテスト。','correct':'コンポーネント統合テスト（component integration testing）','wrong':'コールグラフ（call graph）,テスト定義レイヤー（test definition layer）,品質特性（quality characteristic）','explain':'コンポーネント統合テスト（component integration testing） : 統合したコンポーネント間のインターフェースや相互作用の欠陥を検出するためのテスト。'},
{'id':77,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠物理的な接続がなく、デプロイやアクセス、マネジメントされるサービスの仮想的なデリバリーを可能にする技術。','correct':'サービス仮想化（service virtualization）','wrong':'サービス拒否（denial of service）,形成的評価（formative evaluation）,状態遷移図（state diagram）','explain':'サービス仮想化（service virtualization） : 物理的な接続がなく、デプロイやアクセス、マネジメントされるサービスの仮想的なデリバリーを可能にする技術。'},
{'id':78,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティ攻撃方法の一つ。サービスできない正当なリクエストなどを大量に送りつけてシステムを過負荷状態にする。','correct':'サービス拒否（denial of service）','wrong':'テスト生成レイヤー（test generation layer）,同値パーティション（equivalence partition）,ステートメントカバレッジ（statement coverage）','explain':'サービス拒否（denial of service） : セキュリティ攻撃方法の一つ。サービスできない正当なリクエストなどを大量に送りつけてシステムを過負荷状態にする。'},
{'id':79,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠開発ライフサイクルモデルの種類の1つ。いくつかの独立および連続するフェーズを順番に実行してシステムを完成させる。各フェーズ間に重複は存在しない。','correct':'シーケンシャル開発モデル（sequential development model）','wrong':'使用性テストスクリプト（usability test script）,終了点（exit point）,モデリングツール（modeling tool）','explain':'シーケンシャル開発モデル（sequential development model） : 開発ライフサイクルモデルの種類の1つ。いくつかの独立および連続するフェーズを順番に実行してシステムを完成させる。各フェーズ間に重複は存在しない。'},
{'id':80,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定の機能や、機能のセットを実現するために構成された、相互作用する要素の集合。','correct':'システム（system）','wrong':'確立（IDEAL）（establishing (IDEAL)）,ウェブコンテンツアクセシビリティガイドライン（Web Content Accessibility Guidelines）,セキュリティの脆弱性（security vulnerability）','explain':'システム（system） : 特定の機能や、機能のセットを実現するために構成された、相互作用する要素の集合。'},
{'id':81,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠相互接続したドメインと複数レベルのネットワークに組み込まれた複数の分散システムや異機種環境のこと。通常、共通的な管理構造を持たずに、広範囲に専門領域間をまたがる共通の問題や目的に対処する。','correct':'システムオブシステムズ（system of systems）','wrong':'標準（standard）,テストマネージャー（test manager）,モデレーター（moderator）','explain':'システムオブシステムズ（system of systems） : 相互接続したドメインと複数レベルのネットワークに組み込まれた複数の分散システムや異機種環境のこと。通常、共通的な管理構造を持たずに、広範囲に専門領域間をまたがる共通の問題や目的に対処する。'},
{'id':82,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠統合されたシステムが、特定の要件を満たすことを実証するためのテスト。','correct':'システムテスト（system testing）','wrong':'カスタムソフトウェア（custom software）,侵入のレベル（level of intrusion）,使用コンテキスト（context of use）','explain':'システムテスト（system testing） : 統合されたシステムが、特定の要件を満たすことを実証するためのテスト。'},
{'id':83,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティポリシーおよび異なる複数のレイヤーを適用して、システムのセキュリティの脆弱性を削減する段階的なプロセス。','correct':'システムハードニング（system hardening）','wrong':'セキュリティツール（security tool）,全数テスト（exhaustive testing）,アクター（actor）','explain':'システムハードニング（system hardening） : セキュリティポリシーおよび異なる複数のレイヤーを適用して、システムのセキュリティの脆弱性を削減する段階的なプロセス。'},
{'id':84,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠単純な10項目の質問から得られる態度尺度。使用性に関わる主観的な評価をまとめた全体的な意見を提供する。','correct':'システム使用性尺度（System Usability Scale）','wrong':'テスト自動化マネージャ（test automation manager）,テストコントロール（test control）,CLI（CLI）','explain':'システム使用性尺度（System Usability Scale） : 単純な10項目の質問から得られる態度尺度。使用性に関わる主観的な評価をまとめた全体的な意見を提供する。'},
{'id':85,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムの組み合わせおよび相互作用をテストすること。','correct':'システム統合テスト（system integration testing）','wrong':'プロセス準拠性テスト戦略（process-compliant test strategy）,変更管理（change management）,ダッシュボード（dashboard）','explain':'システム統合テスト（system integration testing） : システムの組み合わせおよび相互作用をテストすること。'},
{'id':86,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠レビュー技法の1つ。レビューでは、作業成果物がシナリオに対処できるかどうかを判定する。','correct':'シナリオベースドレビュー（scenario-based reviewing）','wrong':'負荷テスト（load testing）,成熟性（maturity）,使用性テスト（usability testing）','explain':'シナリオベースドレビュー（scenario-based reviewing） : レビュー技法の1つ。レビューでは、作業成果物がシナリオに対処できるかどうかを判定する。'},
{'id':87,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠物理的なシステム、あるいは、抽象的なシステムの代表的な動作特性を他のシステムで模倣すること。','correct':'シミュレーション（simulation）','wrong':'契約による受け入れテスト（contractual acceptance testing）,テスト選択基準（test selection criteria）,アンチマルウェア（anti-malware）','explain':'シミュレーション（simulation） : 物理的なシステム、あるいは、抽象的なシステムの代表的な動作特性を他のシステムで模倣すること。'},
{'id':88,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストで使われる装置、コンピュータプログラム、システムで、ある入力のセットに対し、特定のシステムのような振る舞いや動作をするもの。','correct':'シミュレータ（simulator）','wrong':'ゴールクエスチョンメトリック（Goal Question Metric）,レビューア（reviewer）,テスト自動化ソリューション（test automation solution）','explain':'シミュレータ（simulator） : テストで使われる装置、コンピュータプログラム、システムで、ある入力のセットに対し、特定のシステムのような振る舞いや動作をするもの。'},
{'id':89,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アジャイルソフトウェア開発におけるプロジェクト管理のための反復型でインクリメンタル型のフレームワーク。','correct':'スクラム（scrum）','wrong':'系統的テスト戦略（methodical test strategy）,マスターテスト計画書（master test plan）,ソフトウェアプロセス改善（software process improvement）','explain':'スクラム（scrum） : アジャイルソフトウェア開発におけるプロジェクト管理のための反復型でインクリメンタル型のフレームワーク。'},
{'id':90,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠自身ではなく他のハッカーが作成したセキュリティ攻撃を実行する人。','correct':'スクリプトキディ（script kiddie）','wrong':'ドメイン分析（domain analysis）,同等の手動テスト工数（equivalent manual test effort）,エラー（error）','explain':'スクリプトキディ（script kiddie） : 自身ではなく他のハッカーが作成したセキュリティ攻撃を実行する人。'},
{'id':91,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠すでに記述されているテスト順序通りに実行するテスト方法。','correct':'スクリプトテスト（scripted testing）','wrong':'アンチパターン（anti-pattern）,安全性（safety）,トレーサビリティマトリクス（traceability matrix）','explain':'スクリプトテスト（scripted testing） : すでに記述されているテスト順序通りに実行するテスト方法。'},
{'id':92,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定のコンポーネント（仮にAと呼ぶ）をテストするため、Aに呼び出される（特定目的のための最小限度の）コンポーネント。スタブがないと、実物ができるまで、開発やテストを待たねばならない。スタブは、最終的には、呼び出されるコンポーネントで置き換える。','correct':'スタブ（stub）','wrong':'条件（condition）,テストプロセスグループ（test process group）,効率性（efficiency）','explain':'スタブ（stub） : 特定のコンポーネント（仮にAと呼ぶ）をテストするため、Aに呼び出される（特定目的のための最小限度の）コンポーネント。スタブがないと、実物ができるまで、開発やテストを待たねばならない。スタブは、最終的には、呼び出されるコンポーネントで置き換える。'},
{'id':93,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プログラミング言語の実体。実行の最小単位。','correct':'ステートメント（statement）','wrong':'段階表現（staged representation）,コードカバレッジ（code coverage）,オープンソースツール（open source tool）','explain':'ステートメント（statement） : プログラミング言語の実体。実行の最小単位。'},
{'id':94,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスイートによって遂行されたステートメントのパーセンテージ。','correct':'ステートメントカバレッジ（statement coverage）','wrong':'要件ベースドテスト（requirements-based testing）,回復性テスト（recoverability testing）,コンピュータフォレンジクス（computer forensics）','explain':'ステートメントカバレッジ（statement coverage） : テストスイートによって遂行されたステートメントのパーセンテージ。'},
{'id':95,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ステートメントを実行するテストケースを設計する、ホワイトボックステスト技法の一つ。','correct':'ステートメントテスト（statement testing）','wrong':'成熟性（maturity）,レビュー計画（review plan）,テスト選択基準（test selection criteria）','explain':'ステートメントテスト（statement testing） : ステートメントを実行するテストケースを設計する、ホワイトボックステスト技法の一つ。'},
{'id':96,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠予測または特定した負荷、若しくはメモリやサーバなどのリソースの可用性が低減したときの限界、または、それを超えた条件でシステムやコンポーネントを評価するために行なわれる性能テストの一種。','correct':'ストレステスト（stress testing）','wrong':'テスト実行ツール（test execution tool）,フィーチャー（feature）,CLI（CLI）','explain':'ストレステスト（stress testing） : 予測または特定した負荷、若しくはメモリやサーバなどのリソースの可用性が低減したときの限界、または、それを超えた条件でシステムやコンポーネントを評価するために行なわれる性能テストの一種。'},
{'id':97,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ストレステストを支援するツール。','correct':'ストレステストツール（stress testing tool）','wrong':'能力成熟度モデル統合 (CMMI)（Capability Maturity Model Integration (CMMI)）,テスト対象システム（SUT）,オープンソースツール（open source tool）','explain':'ストレステストツール（stress testing tool） : ストレステストを支援するツール。'},
{'id':98,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠定義・計画した全テストケースのサブセット。プログラムの必須機能が正常に動作することを確認するのが目的で、コンポーネントやシステムの主要機能を網羅し、細かな点は無視する。','correct':'スモークテスト（smoke test）','wrong':'確認テスト（confirmation testing）,テストケース仕様書（test case specification）,チェックリストベースドレビュー（checklist-based reviewing）','explain':'スモークテスト（smoke test） : 定義・計画した全テストケースのサブセット。プログラムの必須機能が正常に動作することを確認するのが目的で、コンポーネントやシステムの主要機能を網羅し、細かな点は無視する。'},
{'id':99,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠故障や誤動作が人命や人々への深刻な損害、若しくは機器へのダメージや環境被害となる可能性のあるシステム。','correct':'セーフティクリティカルシステム（safety critical system）','wrong':'レビュー計画（review plan）,ペアテスト（pair testing）,欠陥（defect）','explain':'セーフティクリティカルシステム（safety critical system） : 故障や誤動作が人命や人々への深刻な損害、若しくは機器へのダメージや環境被害となる可能性のあるシステム。'},
{'id':100,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠人間又は他のコンポーネントやシステムが、認められた権限の種類及び水準に応じたデータアクセスの度合いを持てるように、コンポーネント又はシステムが情報及びデータを保護する度合。','correct':'セキュリティ（security）','wrong':'習得性（learnability）,測定（measurement）,テスト実行自動化（test execution automation）','explain':'セキュリティ（security） : 人間又は他のコンポーネントやシステムが、認められた権限の種類及び水準に応じたデータアクセスの度合いを持てるように、コンポーネント又はシステムが情報及びデータを保護する度合。'},
{'id':101,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティの運用を支援するツール。','correct':'セキュリティツール（security tool）','wrong':'出力（output）,境界値分析（boundary value analysis）,テストリーダー（test leader）','explain':'セキュリティツール（security tool） : セキュリティの運用を支援するツール。'},
{'id':102,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品のセキュリティを判定するテストのプロセス。','correct':'セキュリティテスト（security testing）','wrong':'スモークテスト（smoke test）,キーワード駆動テスト（keyword-driven testing）,コールグラフ（call graph）','explain':'セキュリティテスト（security testing） : ソフトウェア製品のセキュリティを判定するテストのプロセス。'},
{'id':103,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティ攻撃を成功させる可能性があるシステムの弱点。','correct':'セキュリティの脆弱性（security vulnerability）','wrong':'不正（anomaly）,テストポイント分析（Test Point Analysis）,直交表テスト（orthogonal array testing）','explain':'セキュリティの脆弱性（security vulnerability） : セキュリティ攻撃を成功させる可能性があるシステムの弱点。'},
{'id':104,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織にとってのセキュリティに関わる原理原則、アプローチ、主要な目的を記述する高位レベルのドキュメント。','correct':'セキュリティポリシー（security policy）','wrong':'影響度分析（impact analysis）,ファズテスト（fuzz testing）,テストサイクル（test cycle）','explain':'セキュリティポリシー（security policy） : 組織にとってのセキュリティに関わる原理原則、アプローチ、主要な目的を記述する高位レベルのドキュメント。'},
{'id':105,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティポリシーを実装するために必要な手順と、セキュリティインシデントに対処する際に実行する手順のセット。','correct':'セキュリティ手順（security procedure）','wrong':'到達不能コード（unreachable code）,アセスメントレポート（assessment report）,確認テスト（confirmation testing）','explain':'セキュリティ手順（security procedure） : セキュリティポリシーを実装するために必要な手順と、セキュリティインシデントに対処する際に実行する手順のセット。'},
{'id':106,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムまたはコンポーネント、リソース、情報への不正なアクセスを成功させようとする試み。またはシステムの完全性を侵害しようとする試み。','correct':'セキュリティ攻撃（security attack）','wrong':'APIテスト（API testing）,ステートメントカバレッジ（statement coverage）,フォールトシーディングツール（fault seeding tool）','explain':'セキュリティ攻撃（security attack） : システムまたはコンポーネント、リソース、情報への不正なアクセスを成功させようとする試み。またはシステムの完全性を侵害しようとする試み。'},
{'id':107,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織にとってのセキュリティに関わるプロセスとインフラストラクチャを評価する監査。','correct':'セキュリティ監査（security audit）','wrong':'原因結果グラフ法（cause-effect graphing）,リスク軽減（risk mitigation）,テストコントロール（test control）','explain':'セキュリティ監査（security audit） : 組織にとってのセキュリティに関わるプロセスとインフラストラクチャを評価する監査。'},
{'id':108,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト活動をテストセッションとして計画するアプローチ','correct':'セッションベースドテスト（session-based testing）','wrong':'低位レベルテストケース（low-level test case）,CLIテスト（CLI testing）,欠陥マネジメント（defect management）','explain':'セッションベースドテスト（session-based testing） : テスト活動をテストセッションとして計画するアプローチ'},
{'id':109,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セッションベースドテストの測定と管理の手法。たとえば、探索的テスト。','correct':'セッションベースのテストマネジメント（session-based test management）','wrong':'交流分析（transactional analysis）,静的解析（static analysis）,特性要因図（cause-effect diagram）','explain':'セッションベースのテストマネジメント（session-based test management） : セッションベースドテストの測定と管理の手法。たとえば、探索的テスト。'},
{'id':110,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムまたはネットワークを攻撃するために使用できる情報（パスワードなど）を詐取する試み。','correct':'ソーシャルエンジニアリング（social engineering）','wrong':'ドメイン分析（domain analysis）,改良条件判定カバレッジ（MC／DC）（modified condition / decision coverage）,同等の手動テスト工数（equivalent manual test effort）','explain':'ソーシャルエンジニアリング（social engineering） : システムまたはネットワークを攻撃するために使用できる情報（パスワードなど）を詐取する試み。'},
{'id':111,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンピュータのプログラムやプロシージャのこと。コンピュータシステムの運用に関連したドキュメントやデータも含む場合もある。','correct':'ソフトウェア（software）','wrong':'ロバストネステスト（robustness testing）,テスト結果記録（test log）,移植性テスト（portability testing）','explain':'ソフトウェア（software） : コンピュータのプログラムやプロシージャのこと。コンピュータシステムの運用に関連したドキュメントやデータも含む場合もある。'},
{'id':112,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織のソフトウェアプロセスとその結果のパフォーマンスおよび成熟度を改善する活動プログラム。','correct':'ソフトウェアプロセス改善（software process improvement）','wrong':'測定（measurement）,テスト設計ツール（test design tool）,インサイダー脅威（insider threat）','explain':'ソフトウェアプロセス改善（software process improvement） : 組織のソフトウェアプロセスとその結果のパフォーマンスおよび成熟度を改善する活動プログラム。'},
{'id':113,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアプロダクトの最初から最後、つまり企画段階から利用終了までの期間。ソフトウェアライフサイクルは通常、コンセプトフェーズ、要件フェーズ、設計フェーズ、実装フェーズ、テストフェーズ、インストールとチェックアウトフェーズ、運用と保守フェーズを含み、ときに廃棄フェーズを含むこともある。注）これらのフェーズは重複することもあるし、反復することもある。','correct':'ソフトウェアライフサイクル（software lifecycle）','wrong':'実行不可能パス（infeasible path）,頑健性〔堅牢性〕（robustness）,分析的テスト（analytical testing）','explain':'ソフトウェアライフサイクル（software lifecycle） : ソフトウェアプロダクトの最初から最後、つまり企画段階から利用終了までの期間。ソフトウェアライフサイクルは通常、コンセプトフェーズ、要件フェーズ、設計フェーズ、実装フェーズ、テストフェーズ、インストールとチェックアウトフェーズ、運用と保守フェーズを含み、ときに廃棄フェーズを含むこともある。注）これらのフェーズは重複することもあるし、反復することもある。'},
{'id':114,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠エンドユーザの視点からソフトウェア品質を測定するための、アンケートに基づいた使用性テストの技法。','correct':'ソフトウェア使用性測定一覧表（Software Usability Measurement Inventory）','wrong':'プロセスアセスメント（process assessment）,ファンクションポイント法（Function Point Analysis）,分析的テスト戦略（analytical test strategy）','explain':'ソフトウェア使用性測定一覧表（Software Usability Measurement Inventory） : エンドユーザの視点からソフトウェア品質を測定するための、アンケートに基づいた使用性テストの技法。'},
{'id':115,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ステークホルダが選択したソフトウェアやソフトウェアベースのシステム特性にソフトウェアが準拠する、または準拠する必要のある度合。一連のシステム特性は、たとえば、ソフトウェアの複雑性、リスクアセスメント、安全レベル、セキュリティレベル、期待される性能、信頼性、またはコストで構成され、ステークホルダにとってのソフトウェアの重要度を反映するように定義される。','correct':'ソフトウェア完全性レベル（software integrity level）','wrong':'セーフティクリティカルシステム（safety critical system）,テスト見積り（test estimation）,要件ベースドテスト（requirements-based testing）','explain':'ソフトウェア完全性レベル（software integrity level） : ステークホルダが選択したソフトウェアやソフトウェアベースのシステム特性にソフトウェアが準拠する、または準拠する必要のある度合。一連のシステム特性は、たとえば、ソフトウェアの複雑性、リスクアセスメント、安全レベル、セキュリティレベル、期待される性能、信頼性、またはコストで構成され、ステークホルダにとってのソフトウェアの重要度を反映するように定義される。'},
{'id':116,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア開発の各段階で実行する活動と、それらの活動が論理的および時系列的にどのように関連しているかを表現したもの。','correct':'ソフトウェア開発ライフサイクル（software development lifecycle）','wrong':'ハイパーリンクテストツール（hyperlink test tool）,故障（failure）,開始基準（entry criteria）','explain':'ソフトウェア開発ライフサイクル（software development lifecycle） : ソフトウェア開発の各段階で実行する活動と、それらの活動が論理的および時系列的にどのように関連しているかを表現したもの。'},
{'id':117,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠暗号化技法の一つ。ユーザデータに任意のデータ（ソルト）を追加してから、ハッシュ処理を行う。','correct':'ソルト付与（salting）','wrong':'性能テスト（performance testing）,情報保証（information assurance）,開始 （IDEAL)（initiating (IDEAL)）','explain':'ソルト付与（salting） : 暗号化技法の一つ。ユーザデータに任意のデータ（ソルト）を追加してから、ハッシュ処理を行う。'},
{'id':118,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織や活動の業務成績の動的な測定結果を、メタファによって表されたメトリクスを用いて表現したもの。ここでいうメタファとは、自動車のダッシュボードに似せた、目にみえるダイヤルやカウンターなどである。これによって、出来事や活動の結果が容易に把握でき、業務上の目標と関連付けることができる。','correct':'ダッシュボード（dashboard）','wrong':'フィーチャー（feature）,テスト戦略（test strategy）,対処テスト（reactive testing）','explain':'ダッシュボード（dashboard） : 組織や活動の業務成績の動的な測定結果を、メタファによって表されたメトリクスを用いて表現したもの。ここでいうメタファとは、自動車のダッシュボードに似せた、目にみえるダイヤルやカウンターなどである。これによって、出来事や活動の結果が容易に把握でき、業務上の目標と関連付けることができる。'},
{'id':119,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠経験ベースのテスト技法であり、経験を積んだテスト担当者が、気づき、チェックし、あるいは記憶すべき項目の高位レベルのリストやルール集、検証すべき基準を使用して実施する。','correct':'チェックリストベースドテスト（checklist-based testing）','wrong':'プロセス参照モデル（process reference model）,TPI Next（TPI Next）,検証（verification）','explain':'チェックリストベースドテスト（checklist-based testing） : 経験ベースのテスト技法であり、経験を積んだテスト担当者が、気づき、チェックし、あるいは記憶すべき項目の高位レベルのリストやルール集、検証すべき基準を使用して実施する。'},
{'id':120,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠質問または確認項目のリストを使用して行うレビュー技法。','correct':'チェックリストベースドレビュー（checklist-based reviewing）','wrong':'経験ベースのテスト技法（experience-based test technique）,モデレーター（moderator）,レビュー計画（review plan）','explain':'チェックリストベースドレビュー（checklist-based reviewing） : 質問または確認項目のリストを使用して行うレビュー技法。'},
{'id':121,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠個人を特定できる情報または機密情報を保護して、意図せず漏洩しないようにすること。','correct':'データプライバシ（data privacy）','wrong':'故障（failure）,入力値（input value）,コーポレートダッシュボード（corporate dashboard）','explain':'データプライバシ（data privacy） : 個人を特定できる情報または機密情報を保護して、意図せず漏洩しないようにすること。'},
{'id':122,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠データオブジェクトの順序と、起こり得る状態の変化を抽象的に表現したもの。オブジェクトの状態は、発生、使用、消滅のいずれかになる。','correct':'データフロー（data flow）','wrong':'テストプロセス（test process）,テスト対象（test object）,開始 （IDEAL)（initiating (IDEAL)）','explain':'データフロー（data flow） : データオブジェクトの順序と、起こり得る状態の変化を抽象的に表現したもの。オブジェクトの状態は、発生、使用、消滅のいずれかになる。'},
{'id':123,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ホワイトボックステスト設計技法の一つ。変数の「定義と使用」の組を実行するようにテストケースを設計する。','correct':'データフローテスト（data flow testing）','wrong':'侵入テスト（penetration testing）,テスト実行レイヤー（test execution layer）,振る舞い（behavior）','explain':'データフローテスト（data flow testing） : ホワイトボックステスト設計技法の一つ。変数の「定義と使用」の組を実行するようにテストケースを設計する。'},
{'id':124,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠変数の「定義と使用」に基づく静的解析の一つ。','correct':'データフロー解析（data flow analysis）','wrong':'テスト選択基準（test selection criteria）,反復開発モデル（iterative development model）,シーケンシャル開発モデル（sequential development model）','explain':'データフロー解析（data flow analysis） : 変数の「定義と使用」に基づく静的解析の一つ。'},
{'id':125,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠変数に値を割り当てる実行ステートメント。','correct':'データ定義（data definition）','wrong':'カバレッジアイテム（coverage item）,成熟度レベル（maturity level）,状態遷移テスト（state transition testing）','explain':'データ定義（data definition） : 変数に値を割り当てる実行ステートメント。'},
{'id':126,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠データ変換法の一つ。元のデータを判読できないようにする。','correct':'データ難読化（data obfuscation）','wrong':'信頼性（reliability）,セキュリティテスト（security testing）,プロセス準拠性テスト戦略（process-compliant test strategy）','explain':'データ難読化（data obfuscation） : データ変換法の一つ。元のデータを判読できないようにする。'},
{'id':127,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠スクリプト作成技法の1つ。テスト入力と期待結果をテーブルやスプレッドシートに格納し、1つの制御スクリプトでテーブル中の全テストを実行するもの。キャプチャ/プレイバックツールのような、テスト実行ツールのアプリケーションで使うことが多い。','correct':'データ駆動テスト（data-driven testing）','wrong':'インサイダー脅威（insider threat）,テスト手順（test procedure）,探索的テスト（exploratory testing）','explain':'データ駆動テスト（data-driven testing） : スクリプト作成技法の1つ。テスト入力と期待結果をテーブルやスプレッドシートに格納し、1つの制御スクリプトでテーブル中の全テストを実行するもの。キャプチャ/プレイバックツールのような、テスト実行ツールのアプリケーションで使うことが多い。'},
{'id':128,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システム全体を毎日（多くの場合、夜間）、コンパイル、リンクして作成する開発の活動。これにより、最新の変更を反映した一貫性のあるシステム、アプリケーションにいつでもアクセスできるようになる。','correct':'デイリービルド（daily build）','wrong':'TPI Next（TPI Next）,API（API）,パスワードクラック（password cracking）','explain':'デイリービルド（daily build） : システム全体を毎日（多くの場合、夜間）、コンパイル、リンクして作成する開発の活動。これにより、最新の変更を反映した一貫性のあるシステム、アプリケーションにいつでもアクセスできるようになる。'},
{'id':129,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠形式的なレビューの一種。技術的に認められたチームによって作業成果物が意図した使い方と適合していることを検証し、仕様や標準からの逸脱を識別する。','correct':'テクニカルレビュー（technical review）','wrong':'バリューベースド品質（value-based quality）,出力（output）,発見事項（finding）','explain':'テクニカルレビュー（technical review） : 形式的なレビューの一種。技術的に認められたチームによって作業成果物が意図した使い方と適合していることを検証し、仕様や標準からの逸脱を識別する。'},
{'id':130,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠判定結果のカバレッジ。','correct':'デシジョンカバレッジ（decision coverage）','wrong':'エクストリームプログラミング（Extreme Programming）,安全性（safety）,テスト実装（test implementation）','explain':'デシジョンカバレッジ（decision coverage） : 判定結果のカバレッジ。'},
{'id':131,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠条件と、それらの結果として実行するアクションの組み合わせを示すテーブル。','correct':'デシジョンテーブル（decision table）','wrong':'監査（audit）,先験ベースド品質（transcendent-based quality）,レビュー（review）','explain':'デシジョンテーブル（decision table） : 条件と、それらの結果として実行するアクションの組み合わせを示すテーブル。'},
{'id':132,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト技法の1つ。デシジョンテーブルにある入力と刺激（原因）の組み合わせを実行するテストケースを設計する。','correct':'デシジョンテーブルテスト（decision table testing）','wrong':'リスク（risk）,人間中心設計（human-centered design）,ハッシュ化（hashing）','explain':'デシジョンテーブルテスト（decision table testing） : ブラックボックステスト技法の1つ。デシジョンテーブルにある入力と刺激（原因）の組み合わせを実行するテストケースを設計する。'},
{'id':133,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ホワイトボックステスト技法の一つ。判定を実行するテストケースを設計する。','correct':'デシジョンテスト（decision testing）','wrong':'欠陥マネジメント（defect management）,トレーサビリティ（traceability）,妥当性確認（validation）','explain':'デシジョンテスト（decision testing） : ホワイトボックステスト技法の一つ。判定を実行するテストケースを設計する。'},
{'id':134,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠1つ以上のテストケースのセット。','correct':'テスト（test）','wrong':'直交表（orthogonal array）,振り返りミーティング（retrospective meeting）,欠陥レポート（defect report）','explain':'テスト（test） : 1つ以上のテストケースのセット。'},
{'id':135,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠全てのライフサイクルを通じて実施する静的、動的なプロセスにおいて、成果物が特定の要件を満足するかを判定し、目的に合致することを実証し、欠陥を見つけるため、ソフトウェアプロダクトや関連成果物に対し、計画、準備、評価をすること。','correct':'テスト（testing）','wrong':'ソルト付与（salting）,インターフェーステスト（interface testing）,連続表現（continuous representation）','explain':'テスト（testing） : 全てのライフサイクルを通じて実施する静的、動的なプロセスにおいて、成果物が特定の要件を満足するかを判定し、目的に合致することを実証し、欠陥を見つけるため、ソフトウェアプロダクトや関連成果物に対し、計画、準備、評価をすること。'},
{'id':136,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠（1）テスト組織に対して、テスト組織と他の分野との関連について、ガイダンスと戦略的指針を提供する人。（2）特定のシステム用にテストを構造化する方法を定義する人。テストツールやテストデータのマネジメントなどのトピックも定義する。','correct':'テストアーキテクト（test architect）','wrong':'ユースケース（use case）,ロードプロファイル（load profile）,制御フロー（control flow）','explain':'テストアーキテクト（test architect） : （1）テスト組織に対して、テスト組織と他の分野との関連について、ガイダンスと戦略的指針を提供する人。（2）特定のシステム用にテストを構造化する方法を定義する人。テストツールやテストデータのマネジメントなどのトピックも定義する。'},
{'id':137,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストプロセスで使用するテスト対象の一部分。','correct':'テストアイテム（test item）','wrong':'使用性テストセッション（usability test session）,テストディレクタ（test director）,ドライバ（driver）','explain':'テストアイテム（test item） : テストプロセスで使用するテスト対象の一部分。'},
{'id':138,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定のプロジェクトのためのテスト戦略を実現化したもの。','correct':'テストアプローチ（test approach）','wrong':'ユースケーステスト（use case testing）,直交表テスト（orthogonal array testing）,プロジェクト（project）','explain':'テストアプローチ（test approach） : 特定のプロジェクトのためのテスト戦略を実現化したもの。'},
{'id':139,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト環境、テストツール、オフィス環境、処理手続きからなるテストの実施に必要な構造的なもの。','correct':'テストインフラ（test infrastructure）','wrong':'統合（integration）,開始基準（entry criteria）,ソフトウェアライフサイクル（software lifecycle）','explain':'テストインフラ（test infrastructure） : テスト環境、テストツール、オフィス環境、処理手続きからなるテストの実施に必要な構造的なもの。'},
{'id':140,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストプロセスで生成される中間成果物。テストの計画、設計、実行、評価、報告を行うために使用する。','correct':'テストウェア（testware）','wrong':'ウォークスルー（walkthrough）,テストセッション（test session）,水平トレーサビリティ（horizontal traceability）','explain':'テストウェア（testware） : テストプロセスで生成される中間成果物。テストの計画、設計、実行、評価、報告を行うために使用する。'},
{'id':141,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象のシステムの実行結果と比較する期待結果のソース。','correct':'テストオラクル（test oracle）','wrong':'合目的性（suitability）,回復性（recoverability）,テストスクリプト（test script）','explain':'テストオラクル（test oracle） : テスト対象のシステムの実行結果と比較する期待結果のソース。'},
{'id':142,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠実行事前条件、入力値、アクション（適用可能な場合）、期待結果、および実行事後条件のセットであり、テスト条件に基づいて開発されたもの。','correct':'テストケース（test case）','wrong':'頑健性〔堅牢性〕（robustness）,欠陥レポート（defect report）,診断 （IDEAL)（diagnosing (IDEAL)）','explain':'テストケース（test case） : 実行事前条件、入力値、アクション（適用可能な場合）、期待結果、および実行事後条件のセットであり、テスト条件に基づいて開発されたもの。'},
{'id':143,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定のテスト設計技法を使用している際に、テストベースのサイズが大きくなるにつれて、テストケースの数が過度に増加すること。テストケースの爆発的増加は、テスト設計技法を初めて体系的に適用した際に発生することもある。','correct':'テストケースの爆発的増加（test case explosion）','wrong':'テスト定義レイヤー（test definition layer）,反復開発モデル（iterative development model）,故障モード（failure mode）','explain':'テストケースの爆発的増加（test case explosion） : 特定のテスト設計技法を使用している際に、テストベースのサイズが大きくなるにつれて、テストケースの数が過度に増加すること。テストケースの爆発的増加は、テスト設計技法を初めて体系的に適用した際に発生することもある。'},
{'id':144,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠一つ以上のテストケースをセットにしたドキュメント。','correct':'テストケース仕様書（test case specification）','wrong':'マスターテスト計画書（master test plan）,承認（authorization）,互換性（compatibility）','explain':'テストケース仕様書（test case specification） : 一つ以上のテストケースをセットにしたドキュメント。'},
{'id':145,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠監視中に計画から逸脱していることを検出した場合に、テストプロジェクトを軌道修正するための対策を考えたり適用したりするテストマネジメントタスクの1つ。','correct':'テストコントロール（test control）','wrong':'アルファテスト（alpha testing）,偽陽性結果（false-positive result）,ファズテスト（fuzz testing）','explain':'テストコントロール（test control） : 監視中に計画から逸脱していることを検出した場合に、テストプロジェクトを軌道修正するための対策を考えたり適用したりするテストマネジメントタスクの1つ。'},
{'id':146,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠識別可能な単一のテスト対象のリリースに対し、テストプロセスを実行すること。','correct':'テストサイクル（test cycle）','wrong':'ソフトウェア（software）,ステートメント（statement）,中間者攻撃（man-in-the-middle attack）','explain':'テストサイクル（test cycle） : 識別可能な単一のテスト対象のリリースに対し、テストプロセスを実行すること。'},
{'id':147,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストアイテムの終了基準に対応する評価を提供するテストレポート。','correct':'テストサマリーレポート（test summary report）','wrong':'故障モード影響解析（Failure Mode and Effect Analysis）,リスクマネジメント（risk management）,障害許容性（fault tolerance）','explain':'テストサマリーレポート（test summary report） : テストアイテムの終了基準に対応する評価を提供するテストレポート。'},
{'id':148,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定のテストサイクルで実行されるテストケースやテスト手順のセット。','correct':'テストスイート（test suite）','wrong':'動的テスト（dynamic testing）,レベルテスト計画書（level test plan）,セキュリティツール（security tool）','explain':'テストスイート（test suite） : 特定のテストサイクルで実行されるテストケースやテスト手順のセット。'},
{'id':149,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストを実行するための順序付けられた一連の操作指示。','correct':'テストスクリプト（test script）','wrong':'効率性（efficiency）,ブランチテスト（branch testing）,API（API）','explain':'テストスクリプト（test script） : テストを実行するための順序付けられた一連の操作指示。'},
{'id':150,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠活動、タスク、またはテストプロセスのイベントに関して、開始/終了日、時間、依存関係を識別できるリスト。','correct':'テストスケジュール（test schedule）','wrong':'分析的テスト戦略（analytical test strategy）,バーンダウンチャート（burndown chart）,非機能テスト（non-functional testing）','explain':'テストスケジュール（test schedule） : 活動、タスク、またはテストプロセスのイベントに関して、開始/終了日、時間、依存関係を識別できるリスト。'},
{'id':151,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト実行中の連続した一区切りの時間。探索的テストでは、各テストセッションは一つのチャータに焦点を当ててテストを行なう。しかし、セッション中にテスト担当者は新しい気づきや問題に対してもまた探索することもある。テスト担当者はその場で作成して実行し、進捗を記録する。','correct':'テストセッション（test session）','wrong':'テスト設計仕様書（test design specification）,スタブ（stub）,改良条件判定カバレッジ（MC／DC）（modified condition / decision coverage）','explain':'テストセッション（test session） : テスト実行中の連続した一区切りの時間。探索的テストでは、各テストセッションは一つのチャータに焦点を当ててテストを行なう。しかし、セッション中にテスト担当者は新しい気づきや問題に対してもまた探索することもある。テスト担当者はその場で作成して実行し、進捗を記録する。'},
{'id':152,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムのある特性に対応したテストの目的を基にテスト活動をまとめたもの。','correct':'テストタイプ（test type）','wrong':'契約による受け入れテスト（contractual acceptance testing）,機能要件（functional requirement）,パス（path）','explain':'テストタイプ（test type） : コンポーネントやシステムのある特性に対応したテストの目的を基にテスト活動をまとめたもの。'},
{'id':153,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セッションベースの探索的テストにおけるテスト活動のドキュメント。','correct':'テストチャーター（test charter）','wrong':'テストセッション（test session）,負荷テスト（load testing）,テスト設計仕様書（test design specification）','explain':'テストチャーター（test charter） : セッションベースの探索的テストにおけるテスト活動のドキュメント。'},
{'id':154,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠一つ以上のテスト活動を支援するソフトウェア製品。たとえば、計画とコントロール、仕様化、初期ファイルやデータの構築、テスト実行とテスト分析を支援する。','correct':'テストツール（test tool）','wrong':'カスタムツール（custom tool）,近隣統合テスト（neighborhood integration testing）,変更性（changeability）','explain':'テストツール（test tool） : 一つ以上のテスト活動を支援するソフトウェア製品。たとえば、計画とコントロール、仕様化、初期ファイルやデータの構築、テスト実行とテスト分析を支援する。'},
{'id':155,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠1つ以上のテストケースを実行するために、実行事前条件と入力値を満足するように作成または選択したデータ。','correct':'テストデータ（test data）','wrong':'テスト計画（test planning）,テストポイント分析（Test Point Analysis）,テスト（testing）','explain':'テストデータ（test data） : 1つ以上のテストケースを実行するために、実行事前条件と入力値を満足するように作成または選択したデータ。'},
{'id':156,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストに使うデータを選択（データベース内の実データなど）、または、作成、生成、操作、編集をするためのツール。','correct':'テストデータ準備ツール（test data preparation tool）','wrong':'リスク軽減（risk mitigation）,セキュリティテスト（security testing）,確立（IDEAL）（establishing (IDEAL)）','explain':'テストデータ準備ツール（test data preparation tool） : テストに使うデータを選択（データベース内の実データなど）、または、作成、生成、操作、編集をするためのツール。'},
{'id':157,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストマネージャをマネジメントする上級マネージャ。','correct':'テストディレクタ（test director）','wrong':'セキュリティ手順（security procedure）,コーディング標準（coding standard）,モデレーター（moderator）','explain':'テストディレクタ（test director） : テストマネージャをマネジメントする上級マネージャ。'},
{'id':158,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠責任を分離すること。これにより、客観的なテストを促進できる。','correct':'テストの独立性（independence of testing）','wrong':'使用性テストセッション（usability test session）,パフォーマンスインジケータ（performance indicator）,直交表（orthogonal array）','explain':'テストの独立性（independence of testing） : 責任を分離すること。これにより、客観的なテストを促進できる。'},
{'id':159,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト実行に必要なスタブやドライバからなるテスト環境。','correct':'テストハーネス（test harness）','wrong':'負荷テスト（load testing）,プロダクトリスク（product risk）,事後条件（postcondition）','explain':'テストハーネス（test harness） : テスト実行に必要なスタブやドライバからなるテスト環境。'},
{'id':160,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト活動をプロジェクト中で管理（マネジメント）しやすいフェーズにまとめたセット。たとえば、あるテストレベルの実行活動。','correct':'テストフェーズ（test phase）','wrong':'ユーザベースド品質（user-based quality）,テストマネージャー（test manager）,データ駆動テスト（data-driven testing）','explain':'テストフェーズ（test phase） : テスト活動をプロジェクト中で管理（マネジメント）しやすいフェーズにまとめたセット。たとえば、あるテストレベルの実行活動。'},
{'id':161,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠カスタマイズしたソフトウェアインターフェース。テスト対象のテスト自動化を可能にする。','correct':'テストフック（test hook）','wrong':'非機能要件（non-functional requirement）,アドホックレビュー（ad hoc review）,有効性（effectiveness）','explain':'テストフック（test hook） : カスタマイズしたソフトウェアインターフェース。テスト対象のテスト自動化を可能にする。'},
{'id':162,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠相互に関連する活動のセット。テスト計画作業、テストモニタリングとコントロール、テスト分析、テスト設計、テスト実装、テスト実行、テスト完了といった活動から構成される。','correct':'テストプロセス（test process）','wrong':'ユーザインターフェースガイドライン（user interface guideline）,フィーチャー（feature）,変更管理（change management）','explain':'テストプロセス（test process） : 相互に関連する活動のセット。テスト計画作業、テストモニタリングとコントロール、テスト分析、テスト設計、テスト実装、テスト実行、テスト完了といった活動から構成される。'},
{'id':163,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠（テスト）専門家の集団。組織が使用するテストプロセスの定義、改善や保守を促進する。','correct':'テストプロセスグループ（test process group）','wrong':'スクラム（scrum）,成熟性（maturity）,リスクベースドテスト（risk-based testing）','explain':'テストプロセスグループ（test process group） : （テスト）専門家の集団。組織が使用するテストプロセスの定義、改善や保守を促進する。'},
{'id':164,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織のテストプロセスとその結果のパフォーマンスおよび成熟度を改善する活動プログラム。','correct':'テストプロセス改善（test process improvement）','wrong':'段階表現（staged representation）,プロジェクト（project）,保守性テスト（maintainability testing）','explain':'テストプロセス改善（test process improvement） : 組織のテストプロセスとその結果のパフォーマンスおよび成熟度を改善する活動プログラム。'},
{'id':165,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アジャイルマニフェストにより表明された声明で、テストプロセスを改善するための価値を定義している。ここでいう価値とは以下のようなものである。・プロセスの詳細化よりも柔軟性、・テンプレート(ひな形)よりもベストプラクティス、・プロセス志向よりも展開志向、・品質保証(部門)よりもピアレビュー、・モデル駆動よりもビジネス駆動。','correct':'テストプロセス改善マニフェスト（test process improvement manifesto）','wrong':'要件（requirement）,習得性（learnability）,探索的テスト（exploratory testing）','explain':'テストプロセス改善マニフェスト（test process improvement manifesto） : アジャイルマニフェストにより表明された声明で、テストプロセスを改善するための価値を定義している。ここでいう価値とは以下のようなものである。・プロセスの詳細化よりも柔軟性、・テンプレート(ひな形)よりもベストプラクティス、・プロセス志向よりも展開志向、・品質保証(部門)よりもピアレビュー、・モデル駆動よりもビジネス駆動。'},
{'id':166,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト改善計画に基づきテストプロセス改善を実行する人。','correct':'テストプロセス改善担当（test process improver）','wrong':'インストールガイド（installation guide）,テスト対象システム（SUT）,信頼性テスト（reliability testing）','explain':'テストプロセス改善担当（test process improver） : テスト改善計画に基づきテストプロセス改善を実行する人。'},
{'id':167,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト分析と設計のベースとして使用するあらゆる情報。','correct':'テストベース（test basis）','wrong':'ストレステスト（stress testing）,アジャイルテスト（agile testing）,品質機能展開（quality function deployment）','explain':'テストベース（test basis） : テスト分析と設計のベースとして使用するあらゆる情報。'},
{'id':168,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ファンクションポイント分析に基づき、数式でテストの必要リソースを見積る手法。','correct':'テストポイント分析（Test Point Analysis）','wrong':'終了基準（exit criteria）,プロセスアセスメント（process assessment）,システムオブシステムズ（system of systems）','explain':'テストポイント分析（Test Point Analysis） : ファンクションポイント分析に基づき、数式でテストの必要リソースを見積る手法。'},
{'id':169,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織にとってのテストに関わる原理原則、アプローチ、主要な目的を記述する高位レベルのドキュメント。','correct':'テストポリシー（test policy）','wrong':'成熟度レベル（maturity level）,偽陽性結果（false-positive result）,侵入のレベル（level of intrusion）','explain':'テストポリシー（test policy） : 組織にとってのテストに関わる原理原則、アプローチ、主要な目的を記述する高位レベルのドキュメント。'},
{'id':170,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストの活動とリソースのマネジメント、テスト対象の評価に責任を持つ個人。テストプロジェクトを指揮、コントロール、運営し、テスト対象の評価を計画し統制する。','correct':'テストマネージャー（test manager）','wrong':'テストコントロール（test control）,行動 (IDEAL)（acting (IDEAL)）,使用性テストスクリプト（usability test script）','explain':'テストマネージャー（test manager） : テストの活動とリソースのマネジメント、テスト対象の評価に責任を持つ個人。テストプロジェクトを指揮、コントロール、運営し、テスト対象の評価を計画し統制する。'},
{'id':171,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト活動の計画、見積り、監視、コントロール。主としてテストマネージャによって実施される。','correct':'テストマネジメント（test management）','wrong':'テスト実行ツール（test execution tool）,APIテスト（API testing）,短絡評価（short-circuiting）','explain':'テストマネジメント（test management） : テスト活動の計画、見積り、監視、コントロール。主としてテストマネージャによって実施される。'},
{'id':172,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストプロセスのマネジメントとコントロールを支援するツール。テストウェアマネジメント、テストスケジューリング、結果の記録、進捗管理、インシデントマネジメント、テスト報告等の能力を持つことが多い。','correct':'テストマネジメントツール（test management tool）','wrong':'不可分条件（atomic condition）,プロジェクトの振り返り（project retrospective）,形式的レビュー（formal review）','explain':'テストマネジメントツール（test management tool） : テストプロセスのマネジメントとコントロールを支援するツール。テストウェアマネジメント、テストスケジューリング、結果の記録、進捗管理、インシデントマネジメント、テスト報告等の能力を持つことが多い。'},
{'id':173,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象のコンポーネントまたはシステムをテストするために使用するテストウェアを規定するモデル。','correct':'テストモデル（test model）','wrong':'故障率（failure rate）,欠陥ベースのテスト設計技法（defect-based test design technique）,重要度（severity）','explain':'テストモデル（test model） : テスト対象のコンポーネントまたはシステムをテストするために使用するテストウェアを規定するモデル。'},
{'id':174,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストマネジメント活動の1つ。テスト活動のステータスのチェック、計画済みまたは予測されるステータスからの逸脱の識別、関係者へのステータスの報告を行う。','correct':'テストモニタリング（test monitoring）','wrong':'トレーサビリティ（traceability）,インクリメンタル開発モデル（incremental development model）,複合条件（compound condition）','explain':'テストモニタリング（test monitoring） : テストマネジメント活動の1つ。テスト活動のステータスのチェック、計画済みまたは予測されるステータスからの逸脱の識別、関係者へのステータスの報告を行う。'},
{'id':175,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象の特定のバージョンでテストを実行すること。','correct':'テストラン（test run）','wrong':'システム（system）,ロバストネステスト（robustness testing）,プロセス駆動スクリプティング（process-driven scripting）','explain':'テストラン（test run） : テスト対象の特定のバージョンでテストを実行すること。'},
{'id':176,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠大規模なプロジェクトで、テストマネージャに報告を行い、特定のテストレベルやテスト活動に責任を持つ個人。','correct':'テストリーダー（test leader）','wrong':'検証（verification）,侵入検知システム（intrusion detection system）,改良条件判定カバレッジ（MC／DC）（modified condition / decision coverage）','explain':'テストリーダー（test leader） : 大規模なプロジェクトで、テストマネージャに報告を行い、特定のテストレベルやテスト活動に責任を持つ個人。'},
{'id':177,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠具体的にインスタンス化したテストプロセス。','correct':'テストレベル（test level）','wrong':'アウトソーステスト（outsourced testing）,アンチマルウェア（anti-malware）,コンポーネント（component）','explain':'テストレベル（test level） : 具体的にインスタンス化したテストプロセス。'},
{'id':178,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト活動と結果を要約したドキュメント。','correct':'テストレポート（test report）','wrong':'直交表テスト（orthogonal array testing）,テストの独立性（independence of testing）,マスターテスト計画書（master test plan）','explain':'テストレポート（test report） : テスト活動と結果を要約したドキュメント。'},
{'id':179,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト活動からデータを収集して分析し、その後、データをレポートにまとめてステークホルダに情報を提供する作業。','correct':'テストレポート作業（test reporting）','wrong':'テスト計画（test planning）,水平トレーサビリティ（horizontal traceability）,トレーサビリティマトリクス（traceability matrix）','explain':'テストレポート作業（test reporting） : テスト活動からデータを収集して分析し、その後、データをレポートにまとめてステークホルダに情報を提供する作業。'},
{'id':180,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストアイテムに対するテスト設計、テストケース、テスト手順をすべてドキュメントにしたもの。','correct':'テスト仕様書（test specification）','wrong':'移植性テスト（portability testing）,機能要件（functional requirement）,メンテナンス（maintenance）','explain':'テスト仕様書（test specification） : テストアイテムに対するテスト設計、テストケース、テスト手順をすべてドキュメントにしたもの。'},
{'id':181,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織にとってのテストの目的で、多くの場合、テストポリシーの一部として文書化される。','correct':'テスト使命（test mission）','wrong':'インサイダー脅威（insider threat）,ファーミング（pharming）,テストツール（test tool）','explain':'テスト使命（test mission） : 組織にとってのテストの目的で、多くの場合、テストポリシーの一部として文書化される。'},
{'id':182,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト実行中にテスト対象が外部ソースから受け取ったデータ。外部ソースは、ハードウェア、ソフトウェア、人の場合がある。','correct':'テスト入力（test input）','wrong':'インサイダー脅威（insider threat）,対処テスト（reactive testing）,シナリオベースドレビュー（scenario-based reviewing）','explain':'テスト入力（test input） : テスト実行中にテスト対象が外部ソースから受け取ったデータ。外部ソースは、ハードウェア、ソフトウェア、人の場合がある。'},
{'id':183,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストベースを分析してテスト条件を識別する活動。','correct':'テスト分析（test analysis）','wrong':'条件カバレッジ（condition coverage）,マイヤーズ - ブリックスタイプ指標（Myers-Briggs Type Indicator）,使用性テスト（usability testing）','explain':'テスト分析（test analysis） : テストベースを分析してテスト条件を識別する活動。'},
{'id':184,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト資産を後続のテストで使用できるようにし、テスト環境を十分に満足できる状態に残し、テスト結果を関連するステークホルダに伝える活動。','correct':'テスト完了（test completion）','wrong':'述語（predicate）,プロセス参照モデル（process reference model）,偵察（reconnaissance）','explain':'テスト完了（test completion） : テスト資産を後続のテストで使用できるようにし、テスト環境を十分に満足できる状態に残し、テスト結果を関連するステークホルダに伝える活動。'},
{'id':185,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠汎用テスト自動化アーキテクチャのレイヤーの一つ。テンプレートまたはガイドラインを提供してテストスイートまたはテストケースの定義作業を支援し、テスト実装を行いやすくする。','correct':'テスト定義レイヤー（test definition layer）','wrong':'学習 （IDEAL)（learning (IDEAL)）,インシデントレポート（incident report）,使用性要件（usability requirement）','explain':'テスト定義レイヤー（test definition layer） : 汎用テスト自動化アーキテクチャのレイヤーの一つ。テンプレートまたはガイドラインを提供してテストスイートまたはテストケースの定義作業を支援し、テスト実装を行いやすくする。'},
{'id':186,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象のコンポーネントやシステムでテストを実行し、実行結果を出力するプロセス。','correct':'テスト実行（test execution）','wrong':'コールグラフ（call graph）,保守性テスト（maintainability testing）,APIテスト（API testing）','explain':'テスト実行（test execution） : テスト対象のコンポーネントやシステムでテストを実行し、実行結果を出力するプロセス。'},
{'id':187,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストサイクル内でテストスイートを実行するためのスケジュール。','correct':'テスト実行スケジュール（test execution schedule）','wrong':'ビルド検証テスト（build verification test）,マネジメントレビュー（management review）,正確性テスト（accuracy testing）','explain':'テスト実行スケジュール（test execution schedule） : テストサイクル内でテストスイートを実行するためのスケジュール。'},
{'id':188,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠指定されたテストアイテムに対してテストを実行し、期待結果と事後条件を評価するテストツール。','correct':'テスト実行ツール（test execution tool）','wrong':'ベストプラクティス（best practice）,影響度分析（impact analysis）,テスト実行（test execution）','explain':'テスト実行ツール（test execution tool） : 指定されたテストアイテムに対してテストを実行し、期待結果と事後条件を評価するテストツール。'},
{'id':189,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠汎用テスト自動化アーキテクチャのレイヤーの一つ。テストスイートまたはテストケースの実行をサポートする。','correct':'テスト実行レイヤー（test execution layer）','wrong':'経験ベースのテスト技法（experience-based test technique）,品質機能展開（quality function deployment）,テスト（testing）','explain':'テスト実行レイヤー（test execution layer） : 汎用テスト自動化アーキテクチャのレイヤーの一つ。テストスイートまたはテストケースの実行をサポートする。'},
{'id':190,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠たとえばキャプチャ/プレイバックツールのようなソフトウェアを使用して、テストの実行、実行結果と期待結果の比較、テスト事前条件の設定、その他のテストコントロールやレポート機能を(自動)制御すること。','correct':'テスト実行自動化（test execution automation）','wrong':'フェーズ内阻止（phase containment）,データ駆動テスト（data-driven testing）,保守性（maintainability）','explain':'テスト実行自動化（test execution automation） : たとえばキャプチャ/プレイバックツールのようなソフトウェアを使用して、テストの実行、実行結果と期待結果の比較、テスト事前条件の設定、その他のテストコントロールやレポート機能を(自動)制御すること。'},
{'id':191,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト分析と設計に基づいてテスト実行に必要なテストウェアを準備する活動。','correct':'テスト実装（test implementation）','wrong':'安全性（safety）,ボットネット（botnet）,市販ソフトウェア（COTS）','explain':'テスト実装（test implementation） : テスト分析と設計に基づいてテスト実行に必要なテストウェアを準備する活動。'},
{'id':192,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストすべきコンポーネントまたはシステム。','correct':'テスト対象（test object）','wrong':'成熟性（maturity）,侵入検知システム（intrusion detection system）,テスト手順（test procedure）','explain':'テスト対象（test object） : テストすべきコンポーネントまたはシステム。'},
{'id':193,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象となるシステムのことであり、テスト対象の一種。','correct':'テスト対象システム（SUT）','wrong':'ハードウェア－ソフトウェア統合テスト（hardware-software integration testing）,変更管理（change management）,品質マネジメント（quality management）','explain':'テスト対象システム（SUT） : テスト対象となるシステムのことであり、テスト対象の一種。'},
{'id':194,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠能力成熟度モデル統合（CMMI）と関連させた５段階からなるテストプロセス改善のためのフレームワークであり、効果的なテストプロセスのための重要要素を記述している。','correct':'テスト成熟度モデル統合（Test Maturity Model integration）','wrong':'テストの独立性（independence of testing）,開始基準（entry criteria）,構成管理（configuration management）','explain':'テスト成熟度モデル統合（Test Maturity Model integration） : 能力成熟度モデル統合（CMMI）と関連させた５段階からなるテストプロセス改善のためのフレームワークであり、効果的なテストプロセスのための重要要素を記述している。'},
{'id':195,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織内で実行する1つ以上のプロジェクトをテストするための全般的な要件をドキュメントにしたもの。テストポリシーに沿ってテストをどうおこなうかを詳しく説明している。','correct':'テスト戦略（test strategy）','wrong':'不正（anomaly）,フォールトツリー解析（Fault Tree Analysis）,開始基準（entry criteria）','explain':'テスト戦略（test strategy） : 組織内で実行する1つ以上のプロジェクトをテストするための全般的な要件をドキュメントにしたもの。テストポリシーに沿ってテストをどうおこなうかを詳しく説明している。'},
{'id':196,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠複数のテストケースの実行順序。最初の事前条件や実行後の終了活動をセットアップするために必要な関連するアクションも含む。','correct':'テスト手順（test procedure）','wrong':'3点見積り（three point estimation）,スクリプトテスト（scripted testing）,ソフトウェアプロセス改善（software process improvement）','explain':'テスト手順（test procedure） : 複数のテストケースの実行順序。最初の事前条件や実行後の終了活動をセットアップするために必要な関連するアクションも含む。'},
{'id':197,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストケースを作成したり選択したりするための技法。','correct':'テスト技法（test technique）','wrong':'認証（authentication）,ヒューリスティック（heuristic）,テスト実行スケジュール（test execution schedule）','explain':'テスト技法（test technique） : テストケースを作成したり選択したりするための技法。'},
{'id':198,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムのテストを実施する熟練した専門家。','correct':'テスト担当者（tester）','wrong':'期待結果（expected result）,コーポレートダッシュボード（corporate dashboard）,ストレステストツール（stress testing tool）','explain':'テスト担当者（tester） : コンポーネントやシステムのテストを実施する熟練した専門家。'},
{'id':199,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織のテストプロセスとテストプロセスの資産について、長所と短所を徹底的に理解し、組織的にテストプロセス改善を達成することをベースとした計画。','correct':'テスト改善計画（test improvement plan）','wrong':'原因結果グラフ（cause-effect graph）,使用性評価（usability evaluation）,故障（failure）','explain':'テスト改善計画（test improvement plan） : 組織のテストプロセスとテストプロセスの資産について、長所と短所を徹底的に理解し、組織的にテストプロセス改善を達成することをベースとした計画。'},
{'id':200,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定のテスト目的を達成するためにテストベースを調べた結果として識別できたテストベースの一部分。','correct':'テスト条件（test condition）','wrong':'信頼性テスト（reliability testing）,モデルベースのテスト戦略（model-based test strategy）,コンサルテーションテスト戦略（consultative test strategy）','explain':'テスト条件（test condition） : 特定のテスト目的を達成するためにテストベースを調べた結果として識別できたテストベースの一部分。'},
{'id':201,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト実行時の実行結果と期待結果との比較を自動的に実施するテストツール。','correct':'テスト比較ツール（test comparator）','wrong':'キャプチャ/プレイバック（capture/playback）,フォールトインジェクション（fault injection）,ワイドバンドデルファイ（Wideband Delphi）','explain':'テスト比較ツール（test comparator） : テスト実行時の実行結果と期待結果との比較を自動的に実施するテストツール。'},
{'id':202,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストの実行に必要なハードウェア、インスツルメンテーション、シミュレータ、ソフトウェアツール、その他の支援要素を含む環境。','correct':'テスト環境（test environment）','wrong':'運用テスト（operational testing）,テストスケジュール（test schedule）,デシジョンテーブル（decision table）','explain':'テスト環境（test environment） : テストの実行に必要なハードウェア、インスツルメンテーション、シミュレータ、ソフトウェアツール、その他の支援要素を含む環境。'},
{'id':203,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠汎用テスト自動化アーキテクチャのレイヤーの一つ。テストスイートまたはテストケースの手動設計または自動設計をサポートする。','correct':'テスト生成レイヤー（test generation layer）','wrong':'変数（variable）,セキュリティ手順（security procedure）,テストサマリーレポート（test summary report）','explain':'テスト生成レイヤー（test generation layer） : 汎用テスト自動化アーキテクチャのレイヤーの一つ。テストスイートまたはテストケースの手動設計または自動設計をサポートする。'},
{'id':204,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストを設計、実行する理由や目的。','correct':'テスト目的（test objective）','wrong':'使用性テストスクリプト（usability test script）,ファーミング（pharming）,セッションベースドテスト（session-based testing）','explain':'テスト目的（test objective） : テストを設計、実行する理由や目的。'},
{'id':205,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストプロセスに含まれるテスト終了作業フェーズの間、経験、テストウェア、事実、数字をまとめるために、データを完了した活動から収集する。テスト終了作業フェーズはテストウェアの仕上げ、保管とテスト評価レポートの準備を含むテストプロセスの評価からなる。','correct':'テスト終了作業（test closure）','wrong':'フェイルオーバーテスト（failover testing）,マインドマップ（mind map）,テスト完了（test completion）','explain':'テスト終了作業（test closure） : テストプロセスに含まれるテスト終了作業フェーズの間、経験、テストウェア、事実、数字をまとめるために、データを完了した活動から収集する。テスト終了作業フェーズはテストウェアの仕上げ、保管とテスト評価レポートの準備を含むテストプロセスの評価からなる。'},
{'id':206,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト実行後の成果。画面への出力、データの変化、レポート、外部へ送信するメッセージを含む。','correct':'テスト結果（test result）','wrong':'条件（condition）,N スイッチカバレッジ（N-switch coverage）,状態遷移表（state table）','explain':'テスト結果（test result） : テスト実行後の成果。画面への出力、データの変化、レポート、外部へ送信するメッセージを含む。'},
{'id':207,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト実行の詳細を時系列的に記録したもの。','correct':'テスト結果記録（test log）','wrong':'プロダクトリスク（product risk）,欠陥マネジメント委員会（defect management committee）,テストハーネス（test harness）','explain':'テスト結果記録（test log） : テスト実行の詳細を時系列的に記録したもの。'},
{'id':208,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアを使って、テストマネジメント、テスト設計、テスト実行、結果チェックなどのテスト活動の実行や支援をすること。','correct':'テスト自動化（test automation）','wrong':'能力成熟度モデル統合 (CMMI)（Capability Maturity Model Integration (CMMI)）,カスタムツール（custom tool）,アクター（actor）','explain':'テスト自動化（test automation） : ソフトウェアを使って、テストマネジメント、テスト設計、テスト実行、結果チェックなどのテスト活動の実行や支援をすること。'},
{'id':209,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠汎用テスト自動化アーキテクチャをインスタンス化したもの。テスト自動化ソリューションのアーキテクチャ（レイヤー、コンポーネント、サービス、およびインターフェース）を定義する。','correct':'テスト自動化アーキテクチャ（test automation architecture）','wrong':'非機能要件（non-functional requirement）,セキュリティの脆弱性（security vulnerability）,テスト戦略（test strategy）','explain':'テスト自動化アーキテクチャ（test automation architecture） : 汎用テスト自動化アーキテクチャをインスタンス化したもの。テスト自動化ソリューションのアーキテクチャ（レイヤー、コンポーネント、サービス、およびインターフェース）を定義する。'},
{'id':210,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト自動化アーキテクチャの設計、実装、および保守を担当する人。作成したテスト自動化ソリューションを技術的に進化させる役割も担う。','correct':'テスト自動化エンジニア（test automation engineer）','wrong':'ペアワイズ統合テスト（pairwise integration testing）,行動 (IDEAL)（acting (IDEAL)）,データプライバシ（data privacy）','explain':'テスト自動化エンジニア（test automation engineer） : テスト自動化アーキテクチャの設計、実装、および保守を担当する人。作成したテスト自動化ソリューションを技術的に進化させる役割も担う。'},
{'id':211,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト自動化アーキテクチャを具現化または実装したもの。特定のテスト自動化要素を実装するコンポーネントの組み合わせで構成される。それらのコンポーネントには、市販のテストツール、テスト自動化フレームワーク、テストハードウェアなどが含まれることがある。','correct':'テスト自動化ソリューション（test automation solution）','wrong':'シーケンシャル開発モデル（sequential development model）,発見事項（finding）,偽陰性結果（false-negative result）','explain':'テスト自動化ソリューション（test automation solution） : テスト自動化アーキテクチャを具現化または実装したもの。特定のテスト自動化要素を実装するコンポーネントの組み合わせで構成される。それらのコンポーネントには、市販のテストツール、テスト自動化フレームワーク、テストハードウェアなどが含まれることがある。'},
{'id':212,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストを自動化するための環境を提供するツール。通常、テストハーネスとテストライブラリで構成される。','correct':'テスト自動化フレームワーク（test automation framework）','wrong':'正確性（accuracy）,変更管理（change management）,状態遷移（state transition）','explain':'テスト自動化フレームワーク（test automation framework） : テストを自動化するための環境を提供するツール。通常、テストハーネスとテストライブラリで構成される。'},
{'id':213,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト自動化ソリューションの開発と進化を計画および監督する役割を担う人。','correct':'テスト自動化マネージャ（test automation manager）','wrong':'テスト使命（test mission）,構成管理ツール（configuration management tool）,マルウェア（malware）','explain':'テスト自動化マネージャ（test automation manager） : テスト自動化ソリューションの開発と進化を計画および監督する役割を担う人。'},
{'id':214,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定の境界条件の下で、テスト自動化の長期目標を達成するための高位レベルの計画。','correct':'テスト自動化戦略（test automation strategy）','wrong':'テストモニタリング（test monitoring）,収束メトリック（convergence metric）,ファイアウォール（firewall）','explain':'テスト自動化戦略（test automation strategy） : 特定の境界条件の下で、テスト自動化の長期目標を達成するための高位レベルの計画。'},
{'id':215,'type':'4taku','genre':'基礎','question':'"以下の説明文の用語はどれ？＠＠テストのさまざまな局面に紐付けられた概算結果(たとえば、工数','correct':' 完了日','wrong':'コスト, テストケース数, など)。ただし、入力情報が不完全、または不確か、若しくは余計な情報を含んでいても実施できる。"','explain':'テスト見積り（test estimation）'},
{'id':216,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト計画書を策定し、更新すること。','correct':'テスト計画（test planning）','wrong':'マニファクチャリングベースド品質（manufacturing-based quality）,リスク発生確率（risk likelihood）,運用テスト（operational testing）','explain':'テスト計画（test planning） : テスト計画書を策定し、更新すること。'},
{'id':217,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠達成すべきテスト目的およびそれらを達成するための手段やスケジュールを示し、調整したテスト活動を体系化したドキュメント。','correct':'テスト計画書（test plan）','wrong':'重要成功要因（critical success factor）,故障モード（failure mode）,使用性（usability）','explain':'テスト計画書（test plan） : 達成すべきテスト目的およびそれらを達成するための手段やスケジュールを示し、調整したテスト活動を体系化したドキュメント。'},
{'id':218,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト条件から、テストケースを導出し、具体化する活動。','correct':'テスト設計（test design）','wrong':'シナリオベースドレビュー（scenario-based reviewing）,バリューベースド品質（value-based quality）,CLI（CLI）','explain':'テスト設計（test design） : テスト条件から、テストケースを導出し、具体化する活動。'},
{'id':219,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト入力を生成することでテスト設計を支援するツール。テスト入力の生成は、CASEツールのリポジトリ(たとえば要件マネジメントツール)に格納している仕様、ツールの中に保存してある特定のテスト条件、またはコードから行なわれる。','correct':'テスト設計ツール（test design tool）','wrong':'運用プロファイリング（operational profiling）,ユースケース（use case）,回復性テスト（recoverability testing）','explain':'テスト設計ツール（test design tool） : テスト入力を生成することでテスト設計を支援するツール。テスト入力の生成は、CASEツールのリポジトリ(たとえば要件マネジメントツール)に格納している仕様、ツールの中に保存してある特定のテスト条件、またはコードから行なわれる。'},
{'id':220,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストすべきフィーチャーとそれらに対応するテスト条件を明確にしたドキュメント。','correct':'テスト設計仕様書（test design specification）','wrong':'テストポリシー（test policy）,機能テスト（functional testing）,使用性テスト（usability testing）','explain':'テスト設計仕様書（test design specification） : テストすべきフィーチャーとそれらに対応するテスト条件を明確にしたドキュメント。'},
{'id':221,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ベースラインからみたテスト活動の進捗、リスク、判断を必要とする代替策を報告するために定期的に作成するテストレポート。','correct':'テスト進捗レポート（test progress report）','wrong':'不可分条件（atomic condition）,コンサルテーションテスト戦略（consultative test strategy）,相互運用性（interoperability）','explain':'テスト進捗レポート（test progress report） : ベースラインからみたテスト活動の進捗、リスク、判断を必要とする代替策を報告するために定期的に作成するテストレポート。'},
{'id':222,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト自動化アーキテクチャのレイヤー。抽象レベルのテストスクリプトをSUTのさまざまなコンポーネント、構成、またはインターフェースに適合させるために必要なコードを提供する。','correct':'テスト適合レイヤー（test adaptation layer）','wrong':'テストケース仕様書（test case specification）,マイヤーズ - ブリックスタイプ指標（Myers-Briggs Type Indicator）,テスト入力（test input）','explain':'テスト適合レイヤー（test adaptation layer） : テスト自動化アーキテクチャのレイヤー。抽象レベルのテストスクリプトをSUTのさまざまなコンポーネント、構成、またはインターフェースに適合させるために必要なコードを提供する。'},
{'id':223,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストケースを適切に生成するために使用する基準、またはテストのサイズを制限するためにテストケースを選択する際に使用する基準。','correct':'テスト選択基準（test selection criteria）','wrong':'テストラン（test run）,コンピュータフォレンジクス（computer forensics）,性能テストツール（performance testing tool）','explain':'テスト選択基準（test selection criteria） : テストケースを適切に生成するために使用する基準、またはテストのサイズを制限するためにテストケースを選択する際に使用する基準。'},
{'id':224,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠本体のソフトウェアを開発する前に、テストケースを開発（場合によると自動化）するソフトウェア開発手法。','correct':'テスト駆動開発（test driven development）','wrong':'先験ベースド品質（transcendent-based quality）,テストプロセス改善マニフェスト（test process improvement manifesto）,PRISMA（PRISMA）','explain':'テスト駆動開発（test driven development） : 本体のソフトウェアを開発する前に、テストケースを開発（場合によると自動化）するソフトウェア開発手法。'},
{'id':225,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアの故障の原因を見つけて、分析して、取り除くプロセス。','correct':'デバッグ（debugging）','wrong':'体系的テストと評価プロセス（STEP）,PRISMA（PRISMA）,欠陥ベースのテスト設計技法（defect-based test design technique）','explain':'デバッグ（debugging） : ソフトウェアの故障の原因を見つけて、分析して、取り除くプロセス。'},
{'id':226,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠故障を再現して、プログラムの状態を調査し、対応した欠陥を見つけるために、プログラマが使用するツール。デバッガは、プログラムの変数をセットし検査するために、どのプログラムステートメントの場所でもプログラムを停止したり、プログラムを１ステップずつ実行したりできる。','correct':'デバッグツール（debugging tool）','wrong':'機能統合（functional integration）,状態遷移図（state diagram）,使用性評価（usability evaluation）','explain':'デバッグツール（debugging tool） : 故障を再現して、プログラムの状態を調査し、対応した欠陥を見つけるために、プログラマが使用するツール。デバッガは、プログラムの変数をセットし検査するために、どのプログラムステートメントの場所でもプログラムを停止したり、プログラムを１ステップずつ実行したりできる。'},
{'id':227,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠反復的な四つのステップからなる問題解決のプロセス（計画-実施-評価-改善）。特にプロセス改善において用いられる。','correct':'デミングサイクル（Deming cycle）','wrong':'デシジョンテーブル（decision table）,統合（integration）,テストポイント分析（Test Point Analysis）','explain':'デミングサイクル（Deming cycle） : 反復的な四つのステップからなる問題解決のプロセス（計画-実施-評価-改善）。特にプロセス改善において用いられる。'},
{'id':228,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト設計技法の一つ。複数の変数を同時にテストできる、またはテストする必要がある場合に効率的かつ効果的なテストケースを識別するのに使用される。同値分割法と境界値分析に基づいて構築され、これらを汎用化する。','correct':'ドメイン分析（domain analysis）','wrong':'改良条件判定テスト（modified condition / decision testing）,書記（scribe）,受け入れ基準（acceptance criteria）','explain':'ドメイン分析（domain analysis） : ブラックボックステスト設計技法の一つ。複数の変数を同時にテストできる、またはテストする必要がある場合に効率的かつ効果的なテストケースを識別するのに使用される。同値分割法と境界値分析に基づいて構築され、これらを汎用化する。'},
{'id':229,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムをコントロールしたり呼び出したりする上位コンポーネントの代わりとなるソフトウェアコンポーネントやテストツール。','correct':'ドライバ（driver）','wrong':'テスト定義レイヤー（test definition layer）,ワイドバンドデルファイ（Wideband Delphi）,有効性（effectiveness）','explain':'ドライバ（driver） : コンポーネントやシステムをコントロールしたり呼び出したりする上位コンポーネントの代わりとなるソフトウェアコンポーネントやテストツール。'},
{'id':230,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠2つもしくは複数の成果物間に関係を確立できる度合い。','correct':'トレーサビリティ（traceability）','wrong':'安全性（safety）,終了点（exit point）,レビューア（reviewer）','explain':'トレーサビリティ（traceability） : 2つもしくは複数の成果物間に関係を確立できる度合い。'},
{'id':231,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠2つのエンティティ（たとえば、要件とテストケース）を関係付ける2次元の表。この表を使用すると、エンティティ間の関係を前工程および後工程の双方向に追跡できるので、達成したカバレッジを測定でき、変更点の影響を評価できる。','correct':'トレーサビリティマトリクス（traceability matrix）','wrong':'反復開発モデル（iterative development model）,否定テスト（negative testing）,3点見積り（three point estimation）','explain':'トレーサビリティマトリクス（traceability matrix） : 2つのエンティティ（たとえば、要件とテストケース）を関係付ける2次元の表。この表を使用すると、エンティティ間の関係を前工程および後工程の双方向に追跡できるので、達成したカバレッジを測定でき、変更点の影響を評価できる。'},
{'id':232,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠信頼のレベルが定義されているサブネットワーク。たとえば、インターネットゾーンおよびパブリックゾーンは信頼できるとはみなされない。','correct':'ネットワークゾーン（network zone）','wrong':'ソフトウェア使用性測定一覧表（Software Usability Measurement Inventory）,データ難読化（data obfuscation）,ベストプラクティス（best practice）','explain':'ネットワークゾーン（network zone） : 信頼のレベルが定義されているサブネットワーク。たとえば、インターネットゾーンおよびパブリックゾーンは信頼できるとはみなされない。'},
{'id':233,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠レビュー技法の種類の1つ。レビューアはさまざまな視点から成果物を評価する。','correct':'パースペクティブベースドリーディング（perspective-based reading）','wrong':'テストウェア（testware）,優先度（priority）,CASE（CASE）','explain':'パースペクティブベースドリーディング（perspective-based reading） : レビュー技法の種類の1つ。レビューアはさまざまな視点から成果物を評価する。'},
{'id':234,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ハードウェアコンポーネントとソフトウェアコンポーネントとの間のインターフェースおよび相互作用に存在する欠陥を検出するために実行されるテスト。','correct':'ハードウェア－ソフトウェア統合テスト（hardware-software integration testing）','wrong':'エミュレータ（emulator）,検証（verification）,境界値分析（boundary value analysis）','explain':'ハードウェア－ソフトウェア統合テスト（hardware-software integration testing） : ハードウェアコンポーネントとソフトウェアコンポーネントとの間のインターフェースおよび相互作用に存在する欠陥を検出するために実行されるテスト。'},
{'id':235,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠一つのイテレーションにおける残作業と時間の関係を表すために公開されるチャート。このチャートは、イテレーションにおけるタスクの完了状況と傾向を示す。一般的に、X軸はスプリントにおける日数を表し、Y軸は残作業の量（通常、理想的なエンジニアリングの時間またはストーリーポイントのどちらか）を表す。','correct':'バーンダウンチャート（burndown chart）','wrong':'正確性テスト（accuracy testing）,状態遷移表（state table）,パースペクティブベースドリーディング（perspective-based reading）','explain':'バーンダウンチャート（burndown chart） : 一つのイテレーションにおける残作業と時間の関係を表すために公開されるチャート。このチャートは、イテレーションにおけるタスクの完了状況と傾向を示す。一般的に、X軸はスプリントにおける日数を表し、Y軸は残作業の量（通常、理想的なエンジニアリングの時間またはストーリーポイントのどちらか）を表す。'},
{'id':236,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ウェブページで、他のウェブページへ導くためのポインタ。','correct':'ハイパーリンク（hyperlink）','wrong':'テストレポート（test report）,ファーミング（pharming）,マインドマップ（mind map）','explain':'ハイパーリンク（hyperlink） : ウェブページで、他のウェブページへ導くためのポインタ。'},
{'id':237,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠Webサイト上に切断されたハイパーリンクが存在しないことを確認するために使用されるツール。','correct':'ハイパーリンクテストツール（hyperlink test tool）','wrong':'規制による受け入れテスト（regulatory acceptance testing）,スクラム（scrum）,標準適合性（compliance）','explain':'ハイパーリンクテストツール（hyperlink test tool） : Webサイト上に切断されたハイパーリンクが存在しないことを確認するために使用されるツール。'},
{'id':238,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠リスクの要素を特徴付けるために使う技法。ハザード分析の結果はシステム開発やテストのために使う手法を牽引する。','correct':'ハザード分析（hazard analysis）','wrong':'規制による受け入れテスト（regulatory acceptance testing）,インスペクション（inspection）,テスト選択基準（test selection criteria）','explain':'ハザード分析（hazard analysis） : リスクの要素を特徴付けるために使う技法。ハザード分析の結果はシステム開発やテストのために使う手法を牽引する。'},
{'id':239,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムで、開始点から終了点へ至るイベント（たとえば、実行ステートメント）の順列。','correct':'パス（path）','wrong':'アドホックレビュー（ad hoc review）,品質保証（quality assurance）,重要度（severity）','explain':'パス（path） : コンポーネントやシステムで、開始点から終了点へ至るイベント（たとえば、実行ステートメント）の順列。'},
{'id':240,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠実行結果が期待結果と一致した場合、テストは「合格」とみなす。','correct':'パス〔合格〕（pass）','wrong':'相互運用性（interoperability）,静的解析（static analysis）,境界値（boundary value）','explain':'パス〔合格〕（pass） : 実行結果が期待結果と一致した場合、テストは「合格」とみなす。'},
{'id':241,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ホワイトボックステスト設計技法の一つ。パスを実行するようテストケースを設計する。','correct':'パステスト（path testing）','wrong':'オンラインMBT（online MBT）,品質マネジメント（quality management）,管理図（control chart）','explain':'パステスト（path testing） : ホワイトボックステスト設計技法の一つ。パスを実行するようテストケースを設計する。'},
{'id':242,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティ攻撃方法の一つ。コンピュータシステムに格納されている、またはネットワーク経由で転送されている秘密のパスワードを復元する。','correct':'パスワードクラック（password cracking）','wrong':'優先度（priority）,API（API）,テスト自動化エンジニア（test automation engineer）','explain':'パスワードクラック（password cracking） : セキュリティ攻撃方法の一つ。コンピュータシステムに格納されている、またはネットワーク経由で転送されている秘密のパスワードを復元する。'},
{'id':243,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠通常は悪意を持って、セキュリティ攻撃に関与する人または組織。','correct':'ハッカー（hacker）','wrong':'テスト成熟度モデル統合（Test Maturity Model integration）,テスト見積り（test estimation）,モデルベースのテスト戦略（model-based test strategy）','explain':'ハッカー（hacker） : 通常は悪意を持って、セキュリティ攻撃に関与する人または組織。'},
{'id':244,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠可変長の文字列を、通常、より短い固定長の値またはキーに変換するプロセス。テーブルまたはデータベースを照会する際は、一般的には、ハッシュ化された値またはハッシュを使用する。また、暗号化ハッシュ関数を使用して、データをセキュリティで保護する。','correct':'ハッシュ化（hashing）','wrong':'要件マネジメントツール（requirements management tool）,アジャイルソフトウェア開発（agile software development）,ピアレビュー（peer review）','explain':'ハッシュ化（hashing） : 可変長の文字列を、通常、より短い固定長の値またはキーに変換するプロセス。テーブルまたはデータベースを照会する際は、一般的には、ハッシュ化された値またはハッシュを使用する。また、暗号化ハッシュ関数を使用して、データをセキュリティで保護する。'},
{'id':245,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠効果や効率を示す高位レベルのメトリック。開発をコントロールし、方向性を決めるために利用する。たとえば、ソフトウェア開発のためのリードタイムの遅れ。','correct':'パフォーマンスインジケータ（performance indicator）','wrong':'機能要件（functional requirement）,認証（authentication）,合目的性テスト（suitability testing）','explain':'パフォーマンスインジケータ（performance indicator） : 効果や効率を示す高位レベルのメトリック。開発をコントロールし、方向性を決めるために利用する。たとえば、ソフトウェア開発のためのリードタイムの遅れ。'},
{'id':246,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠企業の営業活動がその目的と整合しているかどうかをビジネスの構想や戦略の観点から評価するための戦略的ツール。','correct':'バランスドスコアカード（balanced scorecard）','wrong':'データフロー解析（data flow analysis）,安全性（safety）,テスト設計（test design）','explain':'バランスドスコアカード（balanced scorecard） : 企業の営業活動がその目的と整合しているかどうかをビジネスの構想や戦略の観点から評価するための戦略的ツール。'},
{'id':247,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠品質に対する考え方の一つ。品質は価格で定義することができる。プロダクトやサービスの品質は、許容できるコスト範囲内で望まれるパフォーマンスを提供するものである、というもの。この品質はステークホルダ間で、期間、労力とコストのトレードオフに基づく意思決定プロセスによって決められる。','correct':'バリューベースド品質（value-based quality）','wrong':'ラショナル統一プロセス（Rational Unified Process）,近隣統合テスト（neighborhood integration testing）,システムハードニング（system hardening）','explain':'バリューベースド品質（value-based quality） : 品質に対する考え方の一つ。品質は価格で定義することができる。プロダクトやサービスの品質は、許容できるコスト範囲内で望まれるパフォーマンスを提供するものである、というもの。この品質はステークホルダ間で、期間、労力とコストのトレードオフに基づく意思決定プロセスによって決められる。'},
{'id':248,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠意思決定における統計的手法の一つで、全体的影響を与える特定の重要な要因を選択するために使用される。品質改善の面では、問題の大半（80％）は少数の主要な原因（20％）によって発生する。','correct':'パレート分析（Pareto analysis）','wrong':'システム（system）,平均故障間隔（MTBF）（mean time between failures）,分析的テスト戦略（analytical test strategy）','explain':'パレート分析（Pareto analysis） : 意思決定における統計的手法の一つで、全体的影響を与える特定の重要な要因を選択するために使用される。品質改善の面では、問題の大半（80％）は少数の主要な原因（20％）によって発生する。'},
{'id':249,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠同じ作業を実施できるスキルを持つ他の人が成果物をレビューするレビュー方法。','correct':'ピアレビュー（peer review）','wrong':'テストスクリプト（test script）,ユーザエクスペリエンス（user experience）,プローブ効果（probe effect）','explain':'ピアレビュー（peer review） : 同じ作業を実施できるスキルを持つ他の人が成果物をレビューするレビュー方法。'},
{'id':250,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠目標を達成するのに役立つ、一般的に認められている経験則。','correct':'ヒューリスティック（heuristic）','wrong':'クロスサイトスクリプティング（cross-site scripting）,スクリプトテスト（scripted testing）,効率性（efficiency）','explain':'ヒューリスティック（heuristic） : 目標を達成するのに役立つ、一般的に認められている経験則。'},
{'id':251,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ユーザインターフェースまたはユーザインターフェース設計での使用性の問題を対象にして、使用性をレビューする技法。この技法では、レビューアがユーザインターフェースを分析して、認識された使用性の原則（いわゆる、ヒューリスティックス）との適合性を判断する。','correct':'ヒューリスティック評価（heuristic evaluation）','wrong':'規制による受け入れテスト（regulatory acceptance testing）,状態遷移表（state table）,テストインフラ（test infrastructure）','explain':'ヒューリスティック評価（heuristic evaluation） : ユーザインターフェースまたはユーザインターフェース設計での使用性の問題を対象にして、使用性をレビューする技法。この技法では、レビューアがユーザインターフェースを分析して、認識された使用性の原則（いわゆる、ヒューリスティックス）との適合性を判断する。'},
{'id':252,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠新たに作成した各ビルドに対して、完全性を確認し、主要な機能性、安定性、および試験性を検証する自動化テストのセット。ビルドが頻繁にリリースされる場合（たとえば、アジャイルプロジェクト）に、業界で一般的に行なわれるテストである。新たに作成したビルドは、このテストの完了後に、次のテストに向けてリリースされる。','correct':'ビルド検証テスト（build verification test）','wrong':'機能適合性（functional suitability）,プロジェクトの振り返り（project retrospective）,リスクの影響（risk impact）','explain':'ビルド検証テスト（build verification test） : 新たに作成した各ビルドに対して、完全性を確認し、主要な機能性、安定性、および試験性を検証する自動化テストのセット。ビルドが頻繁にリリースされる場合（たとえば、アジャイルプロジェクト）に、業界で一般的に行なわれるテストである。新たに作成したビルドは、このテストの完了後に、次のテストに向けてリリースされる。'},
{'id':253,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠セキュリティ攻撃方法の一つ。ユーザに気付かれることなく、また同意を得ることなく、Webサイトのトラフィックを不正なWebサイトに転送する。','correct':'ファーミング（pharming）','wrong':'テスト入力（test input）,ソフトウェア（software）,品質（quality）','explain':'ファーミング（pharming） : セキュリティ攻撃方法の一つ。ユーザに気付かれることなく、また同意を得ることなく、Webサイトのトラフィックを不正なWebサイトに転送する。'},
{'id':254,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠事前に定義されたセキュリティ規則に基づいてネットワークの送受信トラフィックを制御する単独または一連のコンポーネント。','correct':'ファイアウォール（firewall）','wrong':'形成的評価（formative evaluation）,要件マネジメントツール（requirements management tool）,ワイルドポインタ（wild pointer）','explain':'ファイアウォール（firewall） : 事前に定義されたセキュリティ規則に基づいてネットワークの送受信トラフィックを制御する単独または一連のコンポーネント。'},
{'id':255,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠インスペクションやレビュープロセスに責任を持つ、リーダーや中心人物。','correct':'ファシリテーター（facilitator）','wrong':'標準適合性テスト（compliance testing）,状態遷移図（state diagram）,発見事項（finding）','explain':'ファシリテーター（facilitator） : インスペクションやレビュープロセスに責任を持つ、リーダーや中心人物。'},
{'id':256,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアテスト技法の一つ。セキュリティの脆弱性を見つけるために、ファズと呼ばれる大量のランダムデータをコンポーネントまたはシステムに入力する。','correct':'ファズテスト（fuzz testing）','wrong':'対処テスト（reactive testing）,ソルト付与（salting）,モデルベースドテスト（model-based testing）','explain':'ファズテスト（fuzz testing） : ソフトウェアテスト技法の一つ。セキュリティの脆弱性を見つけるために、ファズと呼ばれる大量のランダムデータをコンポーネントまたはシステムに入力する。'},
{'id':257,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠情報システムの機能規模を測定する手法。ＦＰＡでの測定は、対象技術に依存しない。生産性測定、必要リソースの見積り、プロジェクトコントロールのベースとして利用できる。','correct':'ファンクションポイント法（Function Point Analysis）','wrong':'ユーザストーリーテスト（user story testing）,標準（standard）,統合（integration）','explain':'ファンクションポイント法（Function Point Analysis） : 情報システムの機能規模を測定する手法。ＦＰＡでの測定は、対象技術に依存しない。生産性測定、必要リソースの見積り、プロジェクトコントロールのベースとして利用できる。'},
{'id':258,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠要求仕様ドキュメントで、明示的、暗示的に規定したコンポーネントやシステムの属性（たとえば、信頼性、使用性、設計上の制約など）。','correct':'フィーチャー（feature）','wrong':'ポインタ（pointer）,パス（path）,習得性（learnability）','explain':'フィーチャー（feature） : 要求仕様ドキュメントで、明示的、暗示的に規定したコンポーネントやシステムの属性（たとえば、信頼性、使用性、設計上の制約など）。'},
{'id':259,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠クライアントにとっての機能性価値(フィーチャー)の観点で駆動される、イテレーティブかつインクリメンタルなソフトウェア開発プロセス。フィーチャー駆動開発は、ほとんどの場合、アジャイルソフトウェア開発で使用する。','correct':'フィーチャー駆動開発（feature-driven development）','wrong':'中間者攻撃（man-in-the-middle attack）,要件（requirement）,アセッサー（assessor）','explain':'フィーチャー駆動開発（feature-driven development） : クライアントにとっての機能性価値(フィーチャー)の観点で駆動される、イテレーティブかつインクリメンタルなソフトウェア開発プロセス。フィーチャー駆動開発は、ほとんどの場合、アジャイルソフトウェア開発で使用する。'},
{'id':260,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠電子通信において信頼されるエンティティになりすまして、個人情報または機密情報を取得する試み。','correct':'フィッシング（phishing）','wrong':'テスト実行自動化（test execution automation）,ソフトウェア完全性レベル（software integrity level）,トレーサビリティマトリクス（traceability matrix）','explain':'フィッシング（phishing） : 電子通信において信頼されるエンティティになりすまして、個人情報または機密情報を取得する試み。'},
{'id':261,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアライフサイクルの同一フェーズ内における、混入した欠陥数に対する除去された欠陥数のパーセンテージ。','correct':'フェーズ内阻止（phase containment）','wrong':'全数テスト（exhaustive testing）,信頼性（reliability）,ストレステスト（stress testing）','explain':'フェーズ内阻止（phase containment） : ソフトウェアライフサイクルの同一フェーズ内における、混入した欠陥数に対する除去された欠陥数のパーセンテージ。'},
{'id':262,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠管理されている環境で、故障モードをシミュレーションするか、実際に故障を発生させて行なうテスト。故障の後、フェイルオーバー機能をテストし、データの損失および破損が発生しておらず、合意されている全てのサービスレベル（機能の可用性、応答時間など）を維持していることを確認する。','correct':'フェイルオーバーテスト（failover testing）','wrong':'セキュリティ手順（security procedure）,バランスドスコアカード（balanced scorecard）,テストアプローチ（test approach）','explain':'フェイルオーバーテスト（failover testing） : 管理されている環境で、故障モードをシミュレーションするか、実際に故障を発生させて行なうテスト。故障の後、フェイルオーバー機能をテストし、データの損失および破損が発生しておらず、合意されている全てのサービスレベル（機能の可用性、応答時間など）を維持していることを確認する。'},
{'id':263,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムが欠陥を検出し、欠陥から復旧できることを確認する目的で、意図的に欠陥をシステムに追加するプロセス。フィールドで発生する可能性のある故障を模倣することを目的とする。','correct':'フォールトインジェクション（fault injection）','wrong':'成熟度レベル（maturity level）,統合テスト（integration testing）,テストディレクタ（test director）','explain':'フォールトインジェクション（fault injection） : システムが欠陥を検出し、欠陥から復旧できることを確認する目的で、意図的に欠陥をシステムに追加するプロセス。フィールドで発生する可能性のある故障を模倣することを目的とする。'},
{'id':264,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠残存欠陥数の見積りや検出、除去の割合を監視する目的でシステムやコンポーネントに欠陥を意図的に加えるプロセス。フォールトシーディングは、通常、開発（プレリリース）テストの一環として実施され、全てのテストレベル（コンポーネント、統合、またはシステム）で実行できる。','correct':'フォールトシーディング（fault seeding）','wrong':'有限状態機械（finite state machine）,スクラム（scrum）,レビューツール（review tool）','explain':'フォールトシーディング（fault seeding） : 残存欠陥数の見積りや検出、除去の割合を監視する目的でシステムやコンポーネントに欠陥を意図的に加えるプロセス。フォールトシーディングは、通常、開発（プレリリース）テストの一環として実施され、全てのテストレベル（コンポーネント、統合、またはシステム）で実行できる。'},
{'id':265,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムやコンポーネントにフォールトを埋め込む（つまり、意図的に挿入する）ためのツール。','correct':'フォールトシーディングツール（fault seeding tool）','wrong':'暗号化（encryption）,パスワードクラック（password cracking）,変更管理（change management）','explain':'フォールトシーディングツール（fault seeding tool） : システムやコンポーネントにフォールトを埋め込む（つまり、意図的に挿入する）ためのツール。'},
{'id':266,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠フォールト（欠陥）の原因分析で使用する方法。特定の顕在化したフォールトと結びつく、故障やヒューマンエラーおよび外部イベントの関係を論理的に視覚化したモデルにする技法。','correct':'フォールトツリー解析（Fault Tree Analysis）','wrong':'統合テスト（integration testing）,ブラックボックステスト技法（black-box test technique）,メンテナンステスト（maintenance testing）','explain':'フォールトツリー解析（Fault Tree Analysis） : フォールト（欠陥）の原因分析で使用する方法。特定の顕在化したフォールトと結びつく、故障やヒューマンエラーおよび外部イベントの関係を論理的に視覚化したモデルにする技法。'},
{'id':267,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定の品質特性を評価するために、直接的に焦点を定めて行なう試み。特定の故障が発生するような強制を試みることによって、通常、テスト対象の信頼性またはセキュリティを評価する。','correct':'フォールト攻撃（fault attack）','wrong':'PRISMA（PRISMA）,系統的テスト戦略（methodical test strategy）,性能効率性（performance efficiency）','explain':'フォールト攻撃（fault attack） : 特定の品質特性を評価するために、直接的に焦点を定めて行なう試み。特定の故障が発生するような強制を試みることによって、通常、テスト対象の信頼性またはセキュリティを評価する。'},
{'id':268,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントまたはシステムの内部構造を参照せずに行なう、機能的または非機能的なテスト。','correct':'ブラックボックステスト（black box testing）','wrong':'ユーザストーリーテスト（user story testing）,交流分析（transactional analysis）,クラシフィケーションツリー法（classification tree method）','explain':'ブラックボックステスト（black box testing） : コンポーネントまたはシステムの内部構造を参照せずに行なう、機能的または非機能的なテスト。'},
{'id':269,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムの内部構造を参照することなく、機能仕様や非機能仕様の分析に基づきテストケースを設計、選択する技法。','correct':'ブラックボックステスト技法（black-box test technique）','wrong':'テストケースの爆発的増加（test case explosion）,セッションベースドテスト（session-based testing）,ベータテスト（beta testing）','explain':'ブラックボックステスト技法（black-box test technique） : コンポーネントやシステムの内部構造を参照することなく、機能仕様や非機能仕様の分析に基づきテストケースを設計、選択する技法。'},
{'id':270,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ホワイトボックステスト設計技法の一つ。分岐を実行するためのテストケースを設計する。','correct':'ブランチテスト（branch testing）','wrong':'API（API）,欠陥密度（defect density）,データ難読化（data obfuscation）','explain':'ブランチテスト（branch testing） : ホワイトボックステスト設計技法の一つ。分岐を実行するためのテストケースを設計する。'},
{'id':271,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠合意に基づく見積り技法の一つ。アジャイルソフトウェア開発で、ユーザストーリーの作業量または相対規模を見積るのに使用される。ワイドバンドデルファイ方法の一つの種類で、チームが見積る単位を表す一組のカードを使用する。','correct':'プランニングポーカー（planning poker）','wrong':'テストウェア（testware）,プロセスアセスメント（process assessment）,データ難読化（data obfuscation）','explain':'プランニングポーカー（planning poker） : 合意に基づく見積り技法の一つ。アジャイルソフトウェア開発で、ユーザストーリーの作業量または相対規模を見積るのに使用される。ワイドバンドデルファイ方法の一つの種類で、チームが見積る単位を表す一組のカードを使用する。'},
{'id':272,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠性能テストツールやモニタなどでコンポーネントやシステムを測定する場合、測定ツールによって埋め込まれる測定のためのコード（インスツルメント）がコンポーネントやシステムに及ぼす影響。たとえば、性能テストツールを使うことによって、性能は若干悪化する。','correct':'プローブ効果（probe effect）','wrong':'インクリメンタル開発モデル（incremental development model）,モデレーター（moderator）,拡張性（scalability）','explain':'プローブ効果（probe effect） : 性能テストツールやモニタなどでコンポーネントやシステムを測定する場合、測定ツールによって埋め込まれる測定のためのコード（インスツルメント）がコンポーネントやシステムに及ぼす影響。たとえば、性能テストツールを使うことによって、性能は若干悪化する。'},
{'id':273,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠開始日および終了日を持ち、調整され、管理された一連の活動からなり、時間、コストおよび資源の制約を含む特定の要求事項に適合する目標を達成するために実施される特有のプロセス。JSTQB訳注）JIS Q 9000:2006より引用','correct':'プロジェクト（project）','wrong':'性能効率性（performance efficiency）,アンチパターン（anti-pattern）,リードアセッサー（lead assessor）','explain':'プロジェクト（project） : 開始日および終了日を持ち、調整され、管理された一連の活動からなり、時間、コストおよび資源の制約を含む特定の要求事項に適合する目標を達成するために実施される特有のプロセス。JSTQB訳注）JIS Q 9000:2006より引用'},
{'id':274,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠次のプロジェクトまたは次のプロジェクトフェーズを改善するために、教訓を学び、具体的なアクションプランを作成する構造化された方法。','correct':'プロジェクトの振り返り（project retrospective）','wrong':'総合的品質管理（Total Quality Management）,構成アイテム（configuration item）,MBTモデル（MBT model）','explain':'プロジェクトの振り返り（project retrospective） : 次のプロジェクトまたは次のプロジェクトフェーズを改善するために、教訓を学び、具体的なアクションプランを作成する構造化された方法。'},
{'id':275,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロジェクトの成功に影響を与えるリスク。','correct':'プロジェクトリスク（project risk）','wrong':'テストチャーター（test charter）,終了基準（exit criteria）,コンポーネント統合テスト（component integration testing）','explain':'プロジェクトリスク（project risk） : プロジェクトの成功に影響を与えるリスク。'},
{'id':276,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠相互関係のある活動のセット。入力を出力に変換する。','correct':'プロセス（process）','wrong':'シナリオベースドレビュー（scenario-based reviewing）,機能要件（functional requirement）,受け入れテスト（acceptance testing）','explain':'プロセス（process） : 相互関係のある活動のセット。入力を出力に変換する。'},
{'id':277,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠参照モデルを用いた、組織におけるソフトウェアプロセスの統制度合の評価。','correct':'プロセスアセスメント（process assessment）','wrong':'低位レベルテストケース（low-level test case）,テスト自動化ソリューション（test automation solution）,パスワードクラック（password cracking）','explain':'プロセスアセスメント（process assessment） : 参照モデルを用いた、組織におけるソフトウェアプロセスの統制度合の評価。'},
{'id':278,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠共通の性質を持つプロセスによって全体的に統一されたモデルで表したフレームワーク。たとえば、テスト改善モデル。','correct':'プロセスモデル（process model）','wrong':'探索的テスト（exploratory testing）,ユーザインターフェースガイドライン（user interface guideline）,ユーザストーリー（user story）','explain':'プロセスモデル（process model） : 共通の性質を持つプロセスによって全体的に統一されたモデルで表したフレームワーク。たとえば、テスト改善モデル。'},
{'id':279,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロセスモデルの一つ。ベストプラクティスの汎用的に使用できる部分と、事前に定義された手順を順に実行してプロセスを改善する方法とを提供する。','correct':'プロセス参照モデル（process reference model）','wrong':'重要度（severity）,キーワード駆動テスト（keyword-driven testing）,欠陥マネジメント委員会（defect management committee）','explain':'プロセス参照モデル（process reference model） : プロセスモデルの一つ。ベストプラクティスの汎用的に使用できる部分と、事前に定義された手順を順に実行してプロセスを改善する方法とを提供する。'},
{'id':280,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織のプロセスの成熟度とパフォーマンスを改善するために設計した活動プログラムとその結果。','correct':'プロセス改善（process improvement）','wrong':'ソフトウェア使用性測定一覧表（Software Usability Measurement Inventory）,ワイルドポインタ（wild pointer）,可用性（availability）','explain':'プロセス改善（process improvement） : 組織のプロセスの成熟度とパフォーマンスを改善するために設計した活動プログラムとその結果。'},
{'id':281,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト戦略の一つ。テストチームは一連の事前定義されたプロセスに従う。これらのプロセスでは、ドキュメント、テストベースおよびテストオラクルの適切な特定と使用、およびテストチームの組織などの項目に言及する。','correct':'プロセス準拠性テスト戦略（process-compliant test strategy）','wrong':'テスト適合レイヤー（test adaptation layer）,使用性要件（usability requirement）,ハッカー（hacker）','explain':'プロセス準拠性テスト戦略（process-compliant test strategy） : テスト戦略の一つ。テストチームは一連の事前定義されたプロセスに従う。これらのプロセスでは、ドキュメント、テストベースおよびテストオラクルの適切な特定と使用、およびテストチームの組織などの項目に言及する。'},
{'id':282,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠スクリプト作成技法の一つ。テスト対象ソフトウェアのユースケースを表すシナリオとなるように、スクリプトを構造化する。テストデータを使用してスクリプトをパラメータ化できる。','correct':'プロセス駆動スクリプティング（process-driven scripting）','wrong':'形成的評価（formative evaluation）,学習 （IDEAL)（learning (IDEAL)）,使用性テストセッション（usability test session）','explain':'プロセス駆動スクリプティング（process-driven scripting） : スクリプト作成技法の一つ。テスト対象ソフトウェアのユースケースを表すシナリオとなるように、スクリプトを構造化する。テストデータを使用してスクリプトをパラメータ化できる。'},
{'id':283,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロダクトの品質に影響を与えるリスク。','correct':'プロダクトリスク（product risk）','wrong':'書記（scribe）,理解性（understandability）,受け入れ基準（acceptance criteria）','explain':'プロダクトリスク（product risk） : プロダクトの品質に影響を与えるリスク。'},
{'id':284,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠外部のサイトで実行されるシミュレーションまたは実際の運用テスト。開発組織外の担当者が実行する。','correct':'ベータテスト（beta testing）','wrong':'リスクタイプ（risk type）,状態遷移表（state table）,ゴールクエスチョンメトリック（Goal Question Metric）','explain':'ベータテスト（beta testing） : 外部のサイトで実行されるシミュレーションまたは実際の運用テスト。開発組織外の担当者が実行する。'},
{'id':285,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ふたり（たとえば、テスト担当者２名、開発担当者とテスト担当者が１名ずつ、エンドユーザとテスト担当者が１名ずつ）が、共同で欠陥を見つけること。テスト期間中、ふたりで１台のコンピュータを共有し、交互に使用することが多い。','correct':'ペアテスト（pair testing）','wrong':'情報セキュリティ（information security）,同等の手動テスト工数（equivalent manual test effort）,規制による受け入れテスト（regulatory acceptance testing）','explain':'ペアテスト（pair testing） : ふたり（たとえば、テスト担当者２名、開発担当者とテスト担当者が１名ずつ、エンドユーザとテスト担当者が１名ずつ）が、共同で欠陥を見つけること。テスト期間中、ふたりで１台のコンピュータを共有し、交互に使用することが多い。'},
{'id':286,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト設計技法の一つ。入力パラメータの各ペアを、設定可能な個々の組み合わせの全てで実行するためのテストケースを設計する。','correct':'ペアワイズテスト（pairwise testing）','wrong':'系統的テスト戦略（methodical test strategy）,エミュレータ（emulator）,テストハーネス（test harness）','explain':'ペアワイズテスト（pairwise testing） : ブラックボックステスト設計技法の一つ。入力パラメータの各ペアを、設定可能な個々の組み合わせの全てで実行するためのテストケースを設計する。'},
{'id':287,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠統合テストの一つの形態。コールグラフで示される、連携して動作するコンポーネントペアを対象にしてテストを行なう。','correct':'ペアワイズ統合テスト（pairwise integration testing）','wrong':'セキュリティポリシー（security policy）,スタブ（stub）,MBTモデル（MBT model）','explain':'ペアワイズ統合テスト（pairwise integration testing） : 統合テストの一つの形態。コールグラフで示される、連携して動作するコンポーネントペアを対象にしてテストを行なう。'},
{'id':288,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠与えられた状況下で、組織の作業効率に寄与する優れた手法や革新的な実践法。他の同等な組織から、「最善」と認められることが多い。','correct':'ベストプラクティス（best practice）','wrong':'管理図（control chart）,終了点（exit point）,テスト設計仕様書（test design specification）','explain':'ベストプラクティス（best practice） : 与えられた状況下で、組織の作業効率に寄与する優れた手法や革新的な実践法。他の同等な組織から、「最善」と認められることが多い。'},
{'id':289,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠他のデータアイテムのロケーションを指定するデータアイテム。たとえば、処理される次の従業員レコードアドレスを指定したデータアイテム。','correct':'ポインタ（pointer）','wrong':'テスト生成レイヤー（test generation layer）,負荷テスト（load testing）,情報セキュリティ（information security）','explain':'ポインタ（pointer） : 他のデータアイテムのロケーションを指定するデータアイテム。たとえば、処理される次の従業員レコードアドレスを指定したデータアイテム。'},
{'id':290,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ボットまたはロボットと呼ばれる侵害されたコンピュータのネットワーク。第三者によって制御され、マルウェアまたはスパムを送信するため、または攻撃を実行するために使用される。','correct':'ボットネット（botnet）','wrong':'プロセス参照モデル（process reference model）,テスト技法（test technique）,暗号化（encryption）','explain':'ボットネット（botnet） : ボットまたはロボットと呼ばれる侵害されたコンピュータのネットワーク。第三者によって制御され、マルウェアまたはスパムを送信するため、または攻撃を実行するために使用される。'},
{'id':291,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントまたはシステムの内部構造の分析に基づいたテスト。','correct':'ホワイトボックステスト（white-box testing）','wrong':'複合条件カバレッジ（multiple condition coverage）,API（API）,受け入れテスト（acceptance testing）','explain':'ホワイトボックステスト（white-box testing） : コンポーネントまたはシステムの内部構造の分析に基づいたテスト。'},
{'id':292,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムの内部構造の分析に基づきテストケースを設計、選択する技法。','correct':'ホワイトボックステスト技法（white-box test technique）','wrong':'判定条件カバレッジ（decision condition coverage）,プロセス参照モデル（process reference model）,偵察（reconnaissance）','explain':'ホワイトボックステスト技法（white-box test technique） : コンポーネントやシステムの内部構造の分析に基づきテストケースを設計、選択する技法。'},
{'id':293,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠人々のさまざまな性格およびコミュニケーションスタイルを表す、個人の心理学的な傾向の指標。','correct':'マイヤーズ - ブリックスタイプ指標（Myers-Briggs Type Indicator）','wrong':'バランスドスコアカード（balanced scorecard）,ランダムテスト（random testing）,振る舞い（behavior）','explain':'マイヤーズ - ブリックスタイプ指標（Myers-Briggs Type Indicator） : 人々のさまざまな性格およびコミュニケーションスタイルを表す、個人の心理学的な傾向の指標。'},
{'id':294,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠（中間）成果物と結果の準備完了が定義されている、プロジェクトのある一時点。','correct':'マイルストン（milestone）','wrong':'テストセッション（test session）,トレーサビリティマトリクス（traceability matrix）,事前条件（precondition）','explain':'マイルストン（milestone） : （中間）成果物と結果の準備完了が定義されている、プロジェクトのある一時点。'},
{'id':295,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠中心となるキーワードやアイデアの周囲に、用語、アイデア、タスク、または他の項目を表現し、関連付け、配置するために使われる図。マインドマップは、アイデアを作り出し、視覚化し、構造化し、分類するために記述する。学習、組織化、問題解決、意思決定、文書作成の補助として活用される。','correct':'マインドマップ（mind map）','wrong':'テスト定義レイヤー（test definition layer）,ソフトウェア使用性測定一覧表（Software Usability Measurement Inventory）,ハッシュ化（hashing）','explain':'マインドマップ（mind map） : 中心となるキーワードやアイデアの周囲に、用語、アイデア、タスク、または他の項目を表現し、関連付け、配置するために使われる図。マインドマップは、アイデアを作り出し、視覚化し、構造化し、分類するために記述する。学習、組織化、問題解決、意思決定、文書作成の補助として活用される。'},
{'id':296,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠複数のテストレベルやテストタイプの調和のために使用するテスト計画書。','correct':'マスターテスト計画書（master test plan）','wrong':'テスト目的（test objective）,クロスサイトスクリプティング（cross-site scripting）,中間者攻撃（man-in-the-middle attack）','explain':'マスターテスト計画書（master test plan） : 複数のテストレベルやテストタイプの調和のために使用するテスト計画書。'},
{'id':297,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠品質に対する考え方の一つ。品質はプロダクトまたはサービスが、その意図した設計と要件に準拠する度合によって測定される、というもの。品質は、使用されるプロセス（群）に依存する。','correct':'マニファクチャリングベースド品質（manufacturing-based quality）','wrong':'静的アナライザ（static analyzer）,フィッシング（phishing）,変更性（changeability）','explain':'マニファクチャリングベースド品質（manufacturing-based quality） : 品質に対する考え方の一つ。品質はプロダクトまたはサービスが、その意図した設計と要件に準拠する度合によって測定される、というもの。品質は、使用されるプロセス（群）に依存する。'},
{'id':298,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアの取得、供給、開発、運用、保守、といったプロセスを体系的に評価すること。管理者や管理者の代理者が、進捗を監視し、計画やスケジュールの状態を判定し、要件やシステム割り当てを確認し、目的遂行用に最適化されるようマネジメントアプローチの効率を評価する。','correct':'マネジメントレビュー（management review）','wrong':'テストリーダー（test leader）,キーワード駆動テスト（keyword-driven testing）,テストツール（test tool）','explain':'マネジメントレビュー（management review） : ソフトウェアの取得、供給、開発、運用、保守、といったプロセスを体系的に評価すること。管理者や管理者の代理者が、進捗を監視し、計画やスケジュールの状態を判定し、要件やシステム割り当てを確認し、目的遂行用に最適化されるようマネジメントアプローチの効率を評価する。'},
{'id':299,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムまたはそのコンポーネントに危害を与えることを目的とするソフトウェア。','correct':'マルウェア（malware）','wrong':'ボットネット（botnet）,特性要因図（cause-effect diagram）,ビルド検証テスト（build verification test）','explain':'マルウェア（malware） : システムまたはそのコンポーネントに危害を与えることを目的とするソフトウェア。'},
{'id':300,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠インターフェースで受信した悪意のあるコードを検出および除去することを目的とする静的解析。','correct':'マルウェアスキャン（malware scanning）','wrong':'パレート分析（Pareto analysis）,ファイアウォール（firewall）,開始点（entry point）','explain':'マルウェアスキャン（malware scanning） : インターフェースで受信した悪意のあるコードを検出および除去することを目的とする静的解析。'},
{'id':301,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠測定尺度、および、測定手法。','correct':'メトリック（metric）','wrong':'汎用テスト自動化アーキテクチャ（generic test automation architecture）,故障率（failure rate）,先験ベースド品質（transcendent-based quality）','explain':'メトリック（metric） : 測定尺度、および、測定手法。'},
{'id':302,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プログラムの動的領域割り当てロジックの欠陥によって起こるメモリアクセス異常。この欠陥により、使用メモリの解放ができなくなる。メモリ不足によって、最終的にプログラムや他の並行プロセスが失敗する。','correct':'メモリリーク（memory leak）','wrong':'プロセス参照モデル（process reference model）,テスト条件（test condition）,リスクレベル（risk level）','explain':'メモリリーク（memory leak） : プログラムの動的領域割り当てロジックの欠陥によって起こるメモリアクセス異常。この欠陥により、使用メモリの解放ができなくなる。メモリ不足によって、最終的にプログラムや他の並行プロセスが失敗する。'},
{'id':303,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠リリース後のコンポーネントやシステムを変更するプロセス。欠陥の修正、品質特性の改善、変更した環境への適合を目的とする。','correct':'メンテナンス（maintenance）','wrong':'ソフトウェア完全性レベル（software integrity level）,リグレッション（regression）,パス〔合格〕（pass）','explain':'メンテナンス（maintenance） : リリース後のコンポーネントやシステムを変更するプロセス。欠陥の修正、品質特性の改善、変更した環境への適合を目的とする。'},
{'id':304,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠運用システム自体の変更や、稼動環境の変更が運用システムに与える影響をテストすること。','correct':'メンテナンステスト（maintenance testing）','wrong':'アンチパターン（anti-pattern）,テストポイント分析（Test Point Analysis）,非武装地帯（demilitarized zone）','explain':'メンテナンステスト（maintenance testing） : 運用システム自体の変更や、稼動環境の変更が運用システムに与える影響をテストすること。'},
{'id':305,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアやシステムのモデルの作成、修正および妥当性確認を支援するツール。','correct':'モデリングツール（modeling tool）','wrong':'テストスイート（test suite）,検証（verification）,出力（output）','explain':'モデリングツール（modeling tool） : ソフトウェアやシステムのモデルの作成、修正および妥当性確認を支援するツール。'},
{'id':306,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠モデルに基づく、またはモデルを活用するテスト。','correct':'モデルベースドテスト（model-based testing）','wrong':'デシジョンテーブルテスト（decision table testing）,テスト設計ツール（test design tool）,資格認定（qualification）','explain':'モデルベースドテスト（model-based testing） : モデルに基づく、またはモデルを活用するテスト。'},
{'id':307,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト戦略の一つ。テストチームはテストウェアをモデルから生成する。','correct':'モデルベースのテスト戦略（model-based test strategy）','wrong':'GUIテスト（GUI testing）,移植性（portability）,テストポリシー（test policy）','explain':'モデルベースのテスト戦略（model-based test strategy） : テスト戦略の一つ。テストチームはテストウェアをモデルから生成する。'},
{'id':308,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠中立的な立場で使用性テストセッションを導く人物。','correct':'モデレーター（moderator）','wrong':'承認（authorization）,保守性テスト（maintainability testing）,テスト比較ツール（test comparator）','explain':'モデレーター（moderator） : 中立的な立場で使用性テストセッションを導く人物。'},
{'id':309,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト時に、テスト対象のコンポーネントやシステムと同時に実行し、コンポーネントやシステムの振る舞いを監視、記録、分析するソフトウェアツールやハードウェア装置。','correct':'モニタリングツール（monitoring tool）','wrong':'マイルストン（milestone）,受け入れテスト（acceptance testing）,成熟度モデル（maturity model）','explain':'モニタリングツール（monitoring tool） : テスト時に、テスト対象のコンポーネントやシステムと同時に実行し、コンポーネントやシステムの振る舞いを監視、記録、分析するソフトウェアツールやハードウェア装置。'},
{'id':310,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ユーザーのニーズ、要件、およびビジネスプロセスに重点を置いて、実際のまたはシミュレートされた運用環境で、対象となるユーザーが実行する受け入れテスト。','correct':'ユーザー受け入れテスト（user acceptance testing）','wrong':'ファンクションポイント法（Function Point Analysis）,経験ベースのテスト技法（experience-based test technique）,運用受け入れテスト（operational acceptance testing）','explain':'ユーザー受け入れテスト（user acceptance testing） : ユーザーのニーズ、要件、およびビジネスプロセスに重点を置いて、実際のまたはシミュレートされた運用環境で、対象となるユーザーが実行する受け入れテスト。'},
{'id':311,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠使用性評価技法の一つ。ユーザの代表標本に、コンポーネントまたはシステムを使用した体験に基づいて、主観的評価を質問表にレポートするように依頼する。','correct':'ユーザアンケート（user survey）','wrong':'判定条件テスト（decision condition testing）,平均修復時間（MTTR）（mean time to repair）,試験性（testability）','explain':'ユーザアンケート（user survey） : 使用性評価技法の一つ。ユーザの代表標本に、コンポーネントまたはシステムを使用した体験に基づいて、主観的評価を質問表にレポートするように依頼する。'},
{'id':312,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムで特定のタスクを達成するために、ユーザに情報を提供し、ユーザによる制御を可能にするシステムのすべてのコンポーネント。','correct':'ユーザインターフェース（user interface）','wrong':'テストアイテム（test item）,判定条件カバレッジ（decision condition coverage）,回帰回避テスト戦略（regression-averse test strategy）','explain':'ユーザインターフェース（user interface） : システムで特定のタスクを達成するために、ユーザに情報を提供し、ユーザによる制御を可能にするシステムのすべてのコンポーネント。'},
{'id':313,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ユーザインターフェースの設計に関わる低位レベルの固有のルールまたは推奨事項。異なる解釈が発生する余地はほとんどなく、設計者が異なっても同じ実装になる。組織がシステムを構築する際に、ユーザインターフェースの外観と振る舞いに一貫性を持たせるために頻繁に使用する。','correct':'ユーザインターフェースガイドライン（user interface guideline）','wrong':'使用性評価（usability evaluation）,コンサルテーションテスト戦略（consultative test strategy）,同値パーティション（equivalence partition）','explain':'ユーザインターフェースガイドライン（user interface guideline） : ユーザインターフェースの設計に関わる低位レベルの固有のルールまたは推奨事項。異なる解釈が発生する余地はほとんどなく、設計者が異なっても同じ実装になる。組織がシステムを構築する際に、ユーザインターフェースの外観と振る舞いに一貫性を持たせるために頻繁に使用する。'},
{'id':314,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品を実際に使用した後、または使用することが予想される場合のユーザの認識および反応。','correct':'ユーザエクスペリエンス（user experience）','wrong':'テスト（testing）,理解性（understandability）,学習 （IDEAL)（learning (IDEAL)）','explain':'ユーザエクスペリエンス（user experience） : ソフトウェア製品を実際に使用した後、または使用することが予想される場合のユーザの認識および反応。'},
{'id':315,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠高位のユーザ要件またはビジネス要件。主に、アジャイルソフトウェア開発で用いられる。ユーザが要求する機能とその背景にある理由、およびあらゆる非機能を獲得し、日常言語またはビジネス言語で表現される一つの文で構成する。また、受け入れ基準も含む。','correct':'ユーザストーリー（user story）','wrong':'テスト（testing）,実際の結果（actual result）,品質機能展開（quality function deployment）','explain':'ユーザストーリー（user story） : 高位のユーザ要件またはビジネス要件。主に、アジャイルソフトウェア開発で用いられる。ユーザが要求する機能とその背景にある理由、およびあらゆる非機能を獲得し、日常言語またはビジネス言語で表現される一つの文で構成する。また、受け入れ基準も含む。'},
{'id':316,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト設計技法の一つ。ユーザストーリーが正しく実装されていることを検証するために、テストケースをユーザストーリーに基づいて設計する。','correct':'ユーザストーリーテスト（user story testing）','wrong':'正確性（accuracy）,IDEAL（IDEAL）,3点見積り（three point estimation）','explain':'ユーザストーリーテスト（user story testing） : ブラックボックステスト設計技法の一つ。ユーザストーリーが正しく実装されていることを検証するために、テストケースをユーザストーリーに基づいて設計する。'},
{'id':317,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠品質に対する考え方の一つ。ユーザの必要性、要望、願望を、どこまで満たすか、というもの。要求を満たしていないプロダクトやサービスは、いかなるユーザの支持も得ることができない。この(ユーザベースド)品質は、背景によって異なる流動的なアプローチである。なぜならば、プロダクトごとに異なる品質の側面によりビジネスに求められる特徴が変わってくるためである。','correct':'ユーザベースド品質（user-based quality）','wrong':'マルウェア（malware）,述語（predicate）,レビューツール（review tool）','explain':'ユーザベースド品質（user-based quality） : 品質に対する考え方の一つ。ユーザの必要性、要望、願望を、どこまで満たすか、というもの。要求を満たしていないプロダクトやサービスは、いかなるユーザの支持も得ることができない。この(ユーザベースド)品質は、背景によって異なる流動的なアプローチである。なぜならば、プロダクトごとに異なる品質の側面によりビジネスに求められる特徴が変わってくるためである。'},
{'id':318,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アクターとコンポーネントまたはシステムとの間の対話における一連のトランザクション。視覚できる結果を伴う。アクターは、ユーザまたはシステムと情報交換するあらゆるものになりうる。','correct':'ユースケース（use case）','wrong':'承認（authorization）,ホワイトボックステスト技法（white-box test technique）,使用性評価（usability evaluation）','explain':'ユースケース（use case） : アクターとコンポーネントまたはシステムとの間の対話における一連のトランザクション。視覚できる結果を伴う。アクターは、ユーザまたはシステムと情報交換するあらゆるものになりうる。'},
{'id':319,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト技法の1つ。ユースケースのシナリオを実行するテストケースを設計する。','correct':'ユースケーステスト（use case testing）','wrong':'コーディング標準（coding standard）,悪用ケース（abuse case）,コンピュータフォレンジクス（computer forensics）','explain':'ユースケーステスト（use case testing） : ブラックボックステスト技法の1つ。ユースケースのシナリオを実行するテストケースを設計する。'},
{'id':320,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠適切なスタブやドライバを併用した状態、または独立した状態でコンポーネントをテストできるユニットテストまたはコンポーネントテスト用の環境を提供するツール。デバッグ機能など、開発者を支援するその他の機能もある。','correct':'ユニットテストフレームワーク（unit test framework）','wrong':'セーフティクリティカルシステム（safety critical system）,同値分割カバレッジ（equivalence partition coverage）,ハードウェア－ソフトウェア統合テスト（hardware-software integration testing）','explain':'ユニットテストフレームワーク（unit test framework） : 適切なスタブやドライバを併用した状態、または独立した状態でコンポーネントをテストできるユニットテストまたはコンポーネントテスト用の環境を提供するツール。デバッグ機能など、開発者を支援するその他の機能もある。'},
{'id':321,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムの開発、リリース、メンテナンス、廃棄で使用するプロセス、ワークフロー、および活動の定義。','correct':'ライフサイクルモデル（lifecycle model）','wrong':'事前条件（precondition）,欠陥マネジメント委員会（defect management committee）,暗号化（encryption）','explain':'ライフサイクルモデル（lifecycle model） : システムの開発、リリース、メンテナンス、廃棄で使用するプロセス、ワークフロー、および活動の定義。'},
{'id':322,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠独自の適応性を持つ反復ソフトウェア開発プロセスフレームワーク。方向付け、推敲、作成、および移行の四つのプロジェクトライフサイクルフェーズで構成される。','correct':'ラショナル統一プロセス（Rational Unified Process）','wrong':'平均故障間隔（MTBF）（mean time between failures）,確立（IDEAL）（establishing (IDEAL)）,テストアイテム（test item）','explain':'ラショナル統一プロセス（Rational Unified Process） : 独自の適応性を持つ反復ソフトウェア開発プロセスフレームワーク。方向付け、推敲、作成、および移行の四つのプロジェクトライフサイクルフェーズで構成される。'},
{'id':323,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト設計技法の一つ。擬似ランダム生成アルゴリズム等を使い、運用プロファイルに合致するテストケースを設計する。信頼性、性能等、非機能属性のテストに利用できる。','correct':'ランダムテスト（random testing）','wrong':'アルファテスト（alpha testing）,GUIテスト（GUI testing）,セキュリティ手順（security procedure）','explain':'ランダムテスト（random testing） : ブラックボックステスト設計技法の一つ。擬似ランダム生成アルゴリズム等を使い、運用プロファイルに合致するテストケースを設計する。信頼性、性能等、非機能属性のテストに利用できる。'},
{'id':324,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アセスメントを主導する人。CMMiやTMMiなどの公式なアセスメントを行なう場合は、リードアセッサーは、公式な訓練を受けて認定を受ける必要がある。','correct':'リードアセッサー（lead assessor）','wrong':'成熟性（maturity）,責任分担（RACI）マトリクス（RACI matrix）,問題（problem）','explain':'リードアセッサー（lead assessor） : アセスメントを主導する人。CMMiやTMMiなどの公式なアセスメントを行なう場合は、リードアセッサーは、公式な訓練を受けて認定を受ける必要がある。'},
{'id':325,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠変更により引き起こされた、コンポーネントやシステムの品質の悪化。','correct':'リグレッション（regression）','wrong':'テスト生成レイヤー（test generation layer）,偽陽性結果（false-positive result）,テスト設計仕様書（test design specification）','explain':'リグレッション（regression） : 変更により引き起こされた、コンポーネントやシステムの品質の悪化。'},
{'id':326,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠変更により、ソフトウェアの未変更部分に欠陥が新たに入り込んだり、発現したりしないことを確認するため、変更実施後、すでにテスト済みのコンポーネントやシステムに対して実行するテスト。','correct':'リグレッションテスト（regression testing）','wrong':'確立（IDEAL）（establishing (IDEAL)）,テスト条件（test condition）,デシジョンカバレッジ（decision coverage）','explain':'リグレッションテスト（regression testing） : 変更により、ソフトウェアの未変更部分に欠陥が新たに入り込んだり、発現したりしないことを確認するため、変更実施後、すでにテスト済みのコンポーネントやシステムに対して実行するテスト。'},
{'id':327,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠将来、否定的な結果を生む要素。','correct':'リスク（risk）','wrong':'判定条件カバレッジ（decision condition coverage）,総括的評価（summative evaluation）,確立（IDEAL）（establishing (IDEAL)）','explain':'リスク（risk） : 将来、否定的な結果を生む要素。'},
{'id':328,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠一つ若しくは複数の共通の要因で分類されたリスクのセット。','correct':'リスクタイプ（risk type）','wrong':'相互運用性テスト（interoperability testing）,系統的テスト戦略（methodical test strategy）,品質コスト（cost of quality）','explain':'リスクタイプ（risk type） : 一つ若しくは複数の共通の要因で分類されたリスクのセット。'},
{'id':329,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠リスクが実際の結果または事象となった場合に引き起こされる損害。','correct':'リスクの影響（risk impact）','wrong':'水平トレーサビリティ（horizontal traceability）,テスト対象（test object）,ユースケース（use case）','explain':'リスクの影響（risk impact） : リスクが実際の結果または事象となった場合に引き起こされる損害。'},
{'id':330,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠対応するリスクのタイプとリスクのレベルに基づき、テストの活動とリソースの利用をマネジメントし、選択し、優先順位付けするテスト。','correct':'リスクベースドテスト（risk-based testing）','wrong':'ユーザインターフェース（user interface）,欠陥レポート（defect report）,テストフック（test hook）','explain':'リスクベースドテスト（risk-based testing） : 対応するリスクのタイプとリスクのレベルに基づき、テストの活動とリソースの利用をマネジメントし、選択し、優先順位付けするテスト。'},
{'id':331,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠リスクに関して、組織の方針を示してコントロールをすることで、調整をしていく活動。','correct':'リスクマネジメント（risk management）','wrong':'機能要件（functional requirement）,テスト実行（test execution）,ステートメント（statement）','explain':'リスクマネジメント（risk management） : リスクに関して、組織の方針を示してコントロールをすることで、調整をしていく活動。'},
{'id':332,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠影響度と発生確率に基づいて、定性的または定量的に表現したリスクの重要度。','correct':'リスクレベル（risk level）','wrong':'ソフトウェアライフサイクル（software lifecycle）,契約による受け入れテスト（contractual acceptance testing）,終了点（exit point）','explain':'リスクレベル（risk level） : 影響度と発生確率に基づいて、定性的または定量的に表現したリスクの重要度。'},
{'id':333,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠リスク識別とリスクアセスメントを行うプロセス。','correct':'リスク分析（risk analysis）','wrong':'品質コントロール（quality control）,セキュリティ（security）,可用性（availability）','explain':'リスク分析（risk analysis） : リスク識別とリスクアセスメントを行うプロセス。'},
{'id':334,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠リスクが実際の結果または事象となりえる推定確率。','correct':'リスク発生確率（risk likelihood）','wrong':'ハードウェア－ソフトウェア統合テスト（hardware-software integration testing）,クラシフィケーションツリー法（classification tree method）,合目的性（suitability）','explain':'リスク発生確率（risk likelihood） : リスクが実際の結果または事象となりえる推定確率。'},
{'id':335,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定のレベルまでリスクを減らす（あるいは、リスクレベルを維持する）ために、判定を下したり、対策したりするプロセス。','correct':'リスク軽減（risk mitigation）','wrong':'リスクタイプ（risk type）,定義使用ペア（definition-use pair）,事前条件（precondition）','explain':'リスク軽減（risk mitigation） : 特定のレベルまでリスクを減らす（あるいは、リスクレベルを維持する）ために、判定を下したり、対策したりするプロセス。'},
{'id':336,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠1人もしくは複数のレビューアが成果物やプロセスを評価して懸念事項を検出し、改善策を提供する静的テストの一種。','correct':'レビュー（review）','wrong':'テストプロセス改善担当（test process improver）,ペアテスト（pair testing）,根本原因（root cause）','explain':'レビュー（review） : 1人もしくは複数のレビューアが成果物やプロセスを評価して懸念事項を検出し、改善策を提供する静的テストの一種。'},
{'id':337,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠成果物の懸念事項を摘出するレビュー参加者。','correct':'レビューア（reviewer）','wrong':'インソーステスト（insourced testing）,魅力性（attractiveness）,アルファテスト（alpha testing）','explain':'レビューア（reviewer） : 成果物の懸念事項を摘出するレビュー参加者。'},
{'id':338,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠レビュープロセスを支援するツール。レビューの計画、追跡の支援、コミュニケーションのサポート、協調的なレビューの推進、収集や報告用のメトリクスを保存する機能を備えていることが多い。','correct':'レビューツール（review tool）','wrong':'インストールガイド（installation guide）,トレーサビリティ（traceability）,フォールトツリー解析（Fault Tree Analysis）','explain':'レビューツール（review tool） : レビュープロセスを支援するツール。レビューの計画、追跡の支援、コミュニケーションのサポート、協調的なレビューの推進、収集や報告用のメトリクスを保存する機能を備えていることが多い。'},
{'id':339,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠意図するレビュー活動のアプローチ、リソース、およびスケジュールを記述するドキュメント。特に、レビュー対象のドキュメントとコード、使用するレビューの種類、参加者、公式レビューの場合に適用される開始と終了の基準、それらを選択した理由などが識別される。レビュー計画プロセスの記録である。','correct':'レビュー計画（review plan）','wrong':'モデルベースのテスト戦略（model-based test strategy）,サービス拒否（denial of service）,テスト技法（test technique）','explain':'レビュー計画（review plan） : 意図するレビュー活動のアプローチ、リソース、およびスケジュールを記述するドキュメント。特に、レビュー対象のドキュメントとコード、使用するレビューの種類、参加者、公式レビューの場合に適用される開始と終了の基準、それらを選択した理由などが識別される。レビュー計画プロセスの記録である。'},
{'id':340,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠通常、一つのテストレベルを扱うテスト計画書。','correct':'レベルテスト計画書（level test plan）','wrong':'境界値分析（boundary value analysis）,条件カバレッジ（condition coverage）,レビュー（review）','explain':'レベルテスト計画書（level test plan） : 通常、一つのテストレベルを扱うテスト計画書。'},
{'id':341,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストされるコンポーネントやシステムが稼動中にユーザが行なうであろう活動内容を記した仕様書。ロードプロファイルは、特定の時間内に所定の運用プロファイルに準じ決められたトランザクションを処理する仮想ユーザを複数指定して構成する。','correct':'ロードプロファイル（load profile）','wrong':'変更管理（change management）,障害許容性（fault tolerance）,実行不可能パス（infeasible path）','explain':'ロードプロファイル（load profile） : テストされるコンポーネントやシステムが稼動中にユーザが行なうであろう活動内容を記した仕様書。ロードプロファイルは、特定の時間内に所定の運用プロファイルに準じ決められたトランザクションを処理する仮想ユーザを複数指定して構成する。'},
{'id':342,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠レビュー技法の1つ。レビューアは個々のステークホルダの役割の観点から成果物を評価する。','correct':'ロールベースドレビュー（role-based reviewing）','wrong':'リスク分析（risk analysis）,合目的性（suitability）,フォールトシーディング（fault seeding）','explain':'ロールベースドレビュー（role-based reviewing） : レビュー技法の1つ。レビューアは個々のステークホルダの役割の観点から成果物を評価する。'},
{'id':343,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の頑健性（堅牢性）を判定するテスト。JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。','correct':'ロバストネステスト（robustness testing）','wrong':'条件テスト（condition testing）,受け入れテスト（acceptance testing）,条件（condition）','explain':'ロバストネステスト（robustness testing） : ソフトウェア製品の頑健性（堅牢性）を判定するテスト。JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。'},
{'id':344,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠専門家によるテスト見積り技法。チームメンバーから集めた知識を用い、正確な見積りをするもの。','correct':'ワイドバンドデルファイ（Wideband Delphi）','wrong':'偵察（reconnaissance）,要件マネジメントツール（requirements management tool）,テスト（test）','explain':'ワイドバンドデルファイ（Wideband Delphi） : 専門家によるテスト見積り技法。チームメンバーから集めた知識を用い、正確な見積りをするもの。'},
{'id':345,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠範囲外、若しくは、存在しない位置を参照しているポインタ。','correct':'ワイルドポインタ（wild pointer）','wrong':'重要成功要因（critical success factor）,テストオラクル（test oracle）,セキュリティテスト（security testing）','explain':'ワイルドポインタ（wild pointer） : 範囲外、若しくは、存在しない位置を参照しているポインタ。'},
{'id':346,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠これ以上分解できない条件、すなわち、論理演算子（AND、OR、XOR）で結合されている 2 つ以上の単一条件を含まない条件。','correct':'不可分条件（atomic condition）','wrong':'バランスドスコアカード（balanced scorecard）,S.M.A.R.T. ゴール方法論（S.M.A.R.T. goal methodology）,受け入れテスト（acceptance testing）','explain':'不可分条件（atomic condition） : これ以上分解できない条件、すなわち、論理演算子（AND、OR、XOR）で結合されている 2 つ以上の単一条件を含まない条件。'},
{'id':347,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠要求仕様、設計ドキュメント、ユーザドキュメント、標準など、または知見、経験から逸脱するあらゆる状態。レビュー、テスト、分析、コンパイルをする中で検出できるが、それだけにとどまらず、ソフトウェアプロダクトや該当するドキュメントを利用するときに検出できることもある。','correct':'不正（anomaly）','wrong':'動的解析（dynamic analysis）,中間者攻撃（man-in-the-middle attack）,故障モード影響解析（Failure Mode and Effect Analysis）','explain':'不正（anomaly） : 要求仕様、設計ドキュメント、ユーザドキュメント、標準など、または知見、経験から逸脱するあらゆる状態。レビュー、テスト、分析、コンパイルをする中で検出できるが、それだけにとどまらず、ソフトウェアプロダクトや該当するドキュメントを利用するときに検出できることもある。'},
{'id':348,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ユーザに気づかれることなく、第三者により、通信（たとえば、クレジットカード決済情報）の傍受、模倣、改ざん、転送が行なわれる攻撃。','correct':'中間者攻撃（man-in-the-middle attack）','wrong':'ブラックボックステスト（black box testing）,アセスメントレポート（assessment report）,APIテスト（API testing）','explain':'中間者攻撃（man-in-the-middle attack） : ユーザに気づかれることなく、第三者により、通信（たとえば、クレジットカード決済情報）の傍受、模倣、改ざん、転送が行なわれる攻撃。'},
{'id':349,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストケースの実行前に、テストアイテムやその環境が満たすべき状態。','correct':'事前条件（precondition）','wrong':'ユーザー受け入れテスト（user acceptance testing）,原因結果グラフ法（cause-effect graphing）,デシジョンテーブルテスト（decision table testing）','explain':'事前条件（precondition） : テストケースの実行前に、テストアイテムやその環境が満たすべき状態。'},
{'id':350,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストケースの実行終了時に、テストアイテムやその環境が満たすべき状態。','correct':'事後条件（postcondition）','wrong':'テスト成熟度モデル統合（Test Maturity Model integration）,可用性（availability）,境界値分析（boundary value analysis）','explain':'事後条件（postcondition） : テストケースの実行終了時に、テストアイテムやその環境が満たすべき状態。'},
{'id':351,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが他のコンポーネントやシステムと情報を交換できる度合、および／もしくは、同じハードウェアまたはソフトウェア環境を共有しながら、必要な機能を実行できる度合。','correct':'互換性（compatibility）','wrong':'カバレッジツール（coverage tool）,倫理的ハッカー（ethical hacker）,パス〔合格〕（pass）','explain':'互換性（compatibility） : コンポーネントやシステムが他のコンポーネントやシステムと情報を交換できる度合、および／もしくは、同じハードウェアまたはソフトウェア環境を共有しながら、必要な機能を実行できる度合。'},
{'id':352,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠人と人の心の内の交流分析。交流は刺激とその反応により定義される。交流は、人と人の間と、人の心の中にある自我の状態（個性の部分）の間に発生する。','correct':'交流分析（transactional analysis）','wrong':'習得性（learnability）,テストスイート（test suite）,システムオブシステムズ（system of systems）','explain':'交流分析（transactional analysis） : 人と人の心の内の交流分析。交流は刺激とその反応により定義される。交流は、人と人の間と、人の心の中にある自我の状態（個性の部分）の間に発生する。'},
{'id':353,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠設計のアプローチの一つ。ソフトウェア製品の使用に重点を置き、人的要因、人間工学、および使用性の知識や技法を適用することによって、ソフトウェア製品の使用性を高める。','correct':'人間中心設計（human-centered design）','wrong':'テスト見積り（test estimation）,コンポーネントテスト（component testing）,データ難読化（data obfuscation）','explain':'人間中心設計（human-centered design） : 設計のアプローチの一つ。ソフトウェア製品の使用に重点を置き、人的要因、人間工学、および使用性の知識や技法を適用することによって、ソフトウェア製品の使用性を高める。'},
{'id':354,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムの要件、設計、振る舞い、その他の特性を（理想としては完全で的確、かつ検証可能な方法で）詳細に記述したドキュメントであり、記述内容が満足できるものであることを明らかにする手順を示したものも多い。','correct':'仕様（specification）','wrong':'診断 （IDEAL)（diagnosing (IDEAL)）,サービス仮想化（service virtualization）,同値分割カバレッジ（equivalence partition coverage）','explain':'仕様（specification） : コンポーネントやシステムの要件、設計、振る舞い、その他の特性を（理想としては完全で的確、かつ検証可能な方法で）詳細に記述したドキュメントであり、記述内容が満足できるものであることを明らかにする手順を示したものも多い。'},
{'id':355,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠具体的な入力値や期待結果を使うテストケース。','correct':'低位レベルテストケース（low-level test case）','wrong':'条件テスト（condition testing）,システム（system）,シーケンシャル開発モデル（sequential development model）','explain':'低位レベルテストケース（low-level test case） : 具体的な入力値や期待結果を使うテストケース。'},
{'id':356,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ 体系的なテスト方法論。テストプロセス改善のためにコンテンツベースドモデルとしても使用される。STEPによる改善は、順序には依存しない。 ','correct':'体系的テストと評価プロセス（STEP）','wrong':'欠陥（defect）,ヒューリスティック（heuristic）,シーケンシャル開発モデル（sequential development model）','explain':'体系的テストと評価プロセス（STEP） :  体系的なテスト方法論。テストプロセス改善のためにコンテンツベースドモデルとしても使用される。STEPによる改善は、順序には依存しない。 '},
{'id':357,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品を使用するユーザ、タスク、機器（ハードウェア、ソフトウェア、ドキュメント）、およびソフトウェアが使用される物理的および社会的環境。','correct':'使用コンテキスト（context of use）','wrong':'テストケース仕様書（test case specification）,到達不能コード（unreachable code）,非形式的レビュー（informal review）','explain':'使用コンテキスト（context of use） : ソフトウェア製品を使用するユーザ、タスク、機器（ハードウェア、ソフトウェア、ドキュメント）、およびソフトウェアが使用される物理的および社会的環境。'},
{'id':358,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠明示された利用状況において，明示された目標を達成するために，明示された利用者がコンポーネント又はシステムを利用することができる度合い。','correct':'使用性（usability）','wrong':'系統的テスト戦略（methodical test strategy）,テストデータ（test data）,構成管理ツール（configuration management tool）','explain':'使用性（usability） : 明示された利用状況において，明示された目標を達成するために，明示された利用者がコンポーネント又はシステムを利用することができる度合い。'},
{'id':359,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定のユーザが特定の使用状況の下でシステムを使用する際の有効性、効率性、および満足度の度合を評価するために行うテスト。　JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。','correct':'使用性テスト（usability testing）','wrong':'デシジョンテスト（decision testing）,品質機能展開（quality function deployment）,優先度（priority）','explain':'使用性テスト（usability testing） : 特定のユーザが特定の使用状況の下でシステムを使用する際の有効性、効率性、および満足度の度合を評価するために行うテスト。　JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。'},
{'id':360,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠使用性テストを実行する一連の手順を定めたドキュメント。モデレータが、ブリーフィングとセッション前インタビューの質問、使用性テストタスク、セッション後インタビューの質問の各状況を追跡するために使用する。','correct':'使用性テストスクリプト（usability test script）','wrong':'テストの独立性（independence of testing）,テストタイプ（test type）,テスト実行レイヤー（test execution layer）','explain':'使用性テストスクリプト（usability test script） : 使用性テストを実行する一連の手順を定めたドキュメント。モデレータが、ブリーフィングとセッション前インタビューの質問、使用性テストタスク、セッション後インタビューの質問の各状況を追跡するために使用する。'},
{'id':361,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠使用性テストにおけるテストセッション。このセッションでは、一人の使用性テストの参加者がテストを実行し、一人のモデレータがモデレートし、複数の観察者が観察する。','correct':'使用性テストセッション（usability test session）','wrong':'述語（predicate）,テストインフラ（test infrastructure）,契約による受け入れテスト（contractual acceptance testing）','explain':'使用性テストセッション（usability test session） : 使用性テストにおけるテストセッション。このセッションでは、一人の使用性テストの参加者がテストを実行し、一人のモデレータがモデレートし、複数の観察者が観察する。'},
{'id':362,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠使用性テストを実行する活動。モデレータが指定し、使用性テストの参加者が指定期間内に完了する必要がある。','correct':'使用性テストタスク（usability test task）','wrong':'テストレベル（test level）,理解性（understandability）,情報保証（information assurance）','explain':'使用性テストタスク（usability test task） : 使用性テストを実行する活動。モデレータが指定し、使用性テストの参加者が指定期間内に完了する必要がある。'},
{'id':363,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠使用性テストの典型的なタスクを実行する代表ユーザ。','correct':'使用性テストの参加者（usability test participant）','wrong':'テスト対象（test object）,学習 （IDEAL)（learning (IDEAL)）,ペアワイズ統合テスト（pairwise integration testing）','explain':'使用性テストの参加者（usability test participant） : 使用性テストの典型的なタスクを実行する代表ユーザ。'},
{'id':364,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントまたはシステムの使用性に関わる要件。','correct':'使用性要件（usability requirement）','wrong':'実際の結果（actual result）,テスト終了作業（test closure）,オンラインMBT（online MBT）','explain':'使用性要件（usability requirement） : コンポーネントまたはシステムの使用性に関わる要件。'},
{'id':365,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムを改善するため（形成的評価と呼ばれる）、またはシステムのメリットまたは価値を評価するため（総括的評価と呼ばれる）、システムの使用性に関わる情報を収集するプロセス。','correct':'使用性評価（usability evaluation）','wrong':'テストベース（test basis）,テスト目的（test objective）,ステートメントカバレッジ（statement coverage）','explain':'使用性評価（usability evaluation） : システムを改善するため（形成的評価と呼ばれる）、またはシステムのメリットまたは価値を評価するため（総括的評価と呼ばれる）、システムの使用性に関わる情報を収集するプロセス。'},
{'id':366,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト技法の一つ。不正なアクセスを可能にする既知または未知の脆弱性を発見することを目的とする。','correct':'侵入テスト（penetration testing）','wrong':'コンポーネントテスト（component testing）,テストスケジュール（test schedule）,資源効率性テスト（resource utilization testing）','explain':'侵入テスト（penetration testing） : テスト技法の一つ。不正なアクセスを可能にする既知または未知の脆弱性を発見することを目的とする。'},
{'id':367,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象を試験性のために調整した変更度合。','correct':'侵入のレベル（level of intrusion）','wrong':'線形スクリプティング（linear scripting）,変更性（changeability）,段階表現（staged representation）','explain':'侵入のレベル（level of intrusion） : テスト対象を試験性のために調整した変更度合。'},
{'id':368,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ネットワークからアプリケーションのレベルに至るOSIモデルの7つのレイヤーでの活動を監視し、セキュリティポリシーの違反を検出するシステム。','correct':'侵入検知システム（intrusion detection system）','wrong':'フェイルオーバーテスト（failover testing）,テストマネージャー（test manager）,テストベース（test basis）','explain':'侵入検知システム（intrusion detection system） : ネットワークからアプリケーションのレベルに至るOSIモデルの7つのレイヤーでの活動を監視し、セキュリティポリシーの違反を検出するシステム。'},
{'id':369,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠意図した保守者がコンポーネント又はシステムを修正することができる度合。','correct':'保守性（maintainability）','wrong':'コールグラフ（call graph）,プランニングポーカー（planning poker）,ユーザストーリー（user story）','explain':'保守性（maintainability） : 意図した保守者がコンポーネント又はシステムを修正することができる度合。'},
{'id':370,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の保守性を判定するテストのプロセス。','correct':'保守性テスト（maintainability testing）','wrong':'故障モード（failure mode）,テストポイント分析（Test Point Analysis）,テストケースの爆発的増加（test case explosion）','explain':'保守性テスト（maintainability testing） : ソフトウェア製品の保守性を判定するテストのプロセス。'},
{'id':371,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロジェクトリスクのマネジメントにおいて、リスクの影響を効率的に軽減するためにコンティンジェンシーアクションを実行する必要のある期間。','correct':'信頼区間（confidence interval）','wrong':'セキュリティ攻撃（security attack）,セーフティクリティカルシステム（safety critical system）,テスト定義レイヤー（test definition layer）','explain':'信頼区間（confidence interval） : プロジェクトリスクのマネジメントにおいて、リスクの影響を効率的に軽減するためにコンティンジェンシーアクションを実行する必要のある期間。'},
{'id':372,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムのテストにおいて、信頼性に関する故障を発見し、その欠陥を取り除いていくことで時間と共に信頼性が成長することを示すモデル。','correct':'信頼度成長モデル（reliability growth model）','wrong':'ピアレビュー（peer review）,テストデータ準備ツール（test data preparation tool）,ハッカー（hacker）','explain':'信頼度成長モデル（reliability growth model） : コンポーネントやシステムのテストにおいて、信頼性に関する故障を発見し、その欠陥を取り除いていくことで時間と共に信頼性が成長することを示すモデル。'},
{'id':373,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが、指定された機能を指定された条件下で指定された期間実行する度合。','correct':'信頼性（reliability）','wrong':'運用プロファイリング（operational profiling）,重要度（severity）,インターフェーステスト（interface testing）','explain':'信頼性（reliability） : コンポーネントやシステムが、指定された機能を指定された条件下で指定された期間実行する度合。'},
{'id':374,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の信頼性を判定するテスト。JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。','correct':'信頼性テスト（reliability testing）','wrong':'合格/失敗基準（pass/fail criteria）,アカウントハーベスティング（account harvesting）,判定（decision）','explain':'信頼性テスト（reliability testing） : ソフトウェア製品の信頼性を判定するテスト。JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。'},
{'id':375,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠公認ハッカーで、ハッカー技法を使用して脆弱性をテストするセキュリティテスト担当者。','correct':'倫理的ハッカー（ethical hacker）','wrong':'テスト自動化アーキテクチャ（test automation architecture）,システム使用性尺度（System Usability Scale）,テスト実行自動化（test execution automation）','explain':'倫理的ハッカー（ethical hacker） : 公認ハッカーで、ハッカー技法を使用して脆弱性をテストするセキュリティテスト担当者。'},
{'id':376,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠攻撃に役立つ可能性のある情報を取得することを目的として、ターゲット領域を探索すること。','correct':'偵察（reconnaissance）','wrong':'テクニカルレビュー（technical review）,運用性（operability）,シーケンシャル開発モデル（sequential development model）','explain':'偵察（reconnaissance） : 攻撃に役立つ可能性のある情報を取得することを目的として、ターゲット領域を探索すること。'},
{'id':377,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象に存在する欠陥を識別できなかったテスト結果。','correct':'偽陰性結果（false-negative result）','wrong':'テスト戦略（test strategy）,ワイドバンドデルファイ（Wideband Delphi）,相互運用性テスト（interoperability testing）','explain':'偽陰性結果（false-negative result） : テスト対象に存在する欠陥を識別できなかったテスト結果。'},
{'id':378,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象には欠陥が存在しないにもかかわらず、欠陥として報告したテスト結果。','correct':'偽陽性結果（false-positive result）','wrong':'仕様（specification）,ハイパーリンクテストツール（hyperlink test tool）,テストマネージャー（test manager）','explain':'偽陽性結果（false-positive result） : テスト対象には欠陥が存在しないにもかかわらず、欠陥として報告したテスト結果。'},
{'id':379,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠あるアイテム（たとえば、欠陥）に割り当てた（ビジネス上の）重要さのレベル。','correct':'優先度（priority）','wrong':'ユーザストーリー（user story）,テスト改善計画（test improvement plan）,カバレッジツール（coverage tool）','explain':'優先度（priority） : あるアイテム（たとえば、欠陥）に割り当てた（ビジネス上の）重要さのレベル。'},
{'id':380,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠品質に対する考え方の一つ。品質は正確に定義することはできないが、みれば分かる、あるいは、欠落していることにも気づくものである、というもの。この品質は、個人やグループがプロダクトに対して持つ知見や思い入れに依存する。','correct':'先験ベースド品質（transcendent-based quality）','wrong':'ステートメントカバレッジ（statement coverage）,アクセシビリティ（accessibility）,欠陥マネジメント（defect management）','explain':'先験ベースド品質（transcendent-based quality） : 品質に対する考え方の一つ。品質は正確に定義することはできないが、みれば分かる、あるいは、欠落していることにも気づくものである、というもの。この品質は、個人やグループがプロダクトに対して持つ知見や思い入れに依存する。'},
{'id':381,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠外部ソースからコンポーネントやシステムに受信するデータ。','correct':'入力（input）','wrong':'情報保証（information assurance）,ソーシャルエンジニアリング（social engineering）,ユーザベースド品質（user-based quality）','explain':'入力（input） : 外部ソースからコンポーネントやシステムに受信するデータ。'},
{'id':382,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠入力のインスタンス。','correct':'入力値（input value）','wrong':'ストレステスト（stress testing）,リスク（risk）,品質（quality）','explain':'入力値（input value） : 入力のインスタンス。'},
{'id':383,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストのアプローチの一つ。テストスイートにより、入力値と事前条件の全組み合わせをテストすること。','correct':'全数テスト（exhaustive testing）','wrong':'相互運用性（interoperability）,平均故障間隔（MTBF）（mean time between failures）,使用性（usability）','explain':'全数テスト（exhaustive testing） : テストのアプローチの一つ。テストスイートにより、入力値と事前条件の全組み合わせをテストすること。'},
{'id':384,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠他人に対する過度の感情的および精神的依存。特に、人が望ましくない振る舞いをしている場合にそれを変えさせようとせず、その支援しか行なわないという精神的状態。たとえばソフトウェアテストにおいては、テストへの移行が遅延することについてクレームを付けはするものの、足りないテスト時間を補うために超過勤務する(ある意味)「ヒーロー」的な仕事を楽しんでおり、その結果スケジュールの遅延を増長することがある。','correct':'共依存的振る舞い（codependent behavior）','wrong':'プロセス駆動スクリプティング（process-driven scripting）,プランニングポーカー（planning poker）,ハッカー（hacker）','explain':'共依存的振る舞い（codependent behavior） : 他人に対する過度の感情的および精神的依存。特に、人が望ましくない振る舞いをしている場合にそれを変えさせようとせず、その支援しか行なわないという精神的状態。たとえばソフトウェアテストにおいては、テストへの移行が遅延することについてクレームを付けはするものの、足りないテスト時間を補うために超過勤務する(ある意味)「ヒーロー」的な仕事を楽しんでおり、その結果スケジュールの遅延を増長することがある。'},
{'id':385,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムから外部の宛先に送信するデータ。','correct':'出力（output）','wrong':'パレート分析（Pareto analysis）,使用性テストスクリプト（usability test script）,フィーチャー駆動開発（feature-driven development）','explain':'出力（output） : コンポーネントやシステムから外部の宛先に送信するデータ。'},
{'id':386,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠たとえば、プロダクトリスクまたは要件のような体系的な分析に基づくテスト。','correct':'分析的テスト（analytical testing）','wrong':'低位レベルテストケース（low-level test case）,Webサイト解析と測定一覧表（Website Analysis and Measurement Inventory）,ヒューリスティック評価（heuristic evaluation）','explain':'分析的テスト（analytical testing） : たとえば、プロダクトリスクまたは要件のような体系的な分析に基づくテスト。'},
{'id':387,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト戦略の一つ。テストチームはテストベースを分析して、カバーするテスト条件を識別する。','correct':'分析的テスト戦略（analytical test strategy）','wrong':'標準適合性テスト（compliance testing）,実際の結果（actual result）,リスクマネジメント（risk management）','explain':'分析的テスト戦略（analytical test strategy） : テスト戦略の一つ。テストチームはテストベースを分析して、カバーするテスト条件を識別する。'},
{'id':388,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プログラムを構成するステートメントの一つの種類。複数のあり得る結果から選択を行い、実行するアクションを決定する。','correct':'判定（decision）','wrong':'データフロー解析（data flow analysis）,欠陥ベースのテスト設計技法（defect-based test design technique）,仕様（specification）','explain':'判定（decision） : プログラムを構成するステートメントの一つの種類。複数のあり得る結果から選択を行い、実行するアクションを決定する。'},
{'id':389,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスイートが遂行した条件と判定のパーセンテージ。100%の判定条件カバレッジは、100%の条件カバレッジと100%のデシジョンカバレッジを意味する。','correct':'判定条件カバレッジ（decision condition coverage）','wrong':'スクリプトテスト（scripted testing）,試験性（testability）,ヒューリスティック（heuristic）','explain':'判定条件カバレッジ（decision condition coverage） : テストスイートが遂行した条件と判定のパーセンテージ。100%の判定条件カバレッジは、100%の条件カバレッジと100%のデシジョンカバレッジを意味する。'},
{'id':390,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ホワイトボックステスト設計技法の一つ。条件と判定の結果を実行するようテストケースを設計する。','correct':'判定条件テスト（decision condition testing）','wrong':'攻撃者（attacker）,マルウェアスキャン（malware scanning）,判定結果（decision outcome）','explain':'判定条件テスト（decision condition testing） : ホワイトボックステスト設計技法の一つ。条件と判定の結果を実行するようテストケースを設計する。'},
{'id':391,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠判定の結果。次に実行するステートメントを決定する。','correct':'判定結果（decision outcome）','wrong':'アウトソーステスト（outsourced testing）,プロセスアセスメント（process assessment）,テスト実行自動化（test execution automation）','explain':'判定結果（decision outcome） : 判定の結果。次に実行するステートメントを決定する。'},
{'id':392,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠到達できないため、実行不能なコード。','correct':'到達不能コード（unreachable code）','wrong':'品質コスト（cost of quality）,テスト実行自動化（test execution automation）,欠陥（defect）','explain':'到達不能コード（unreachable code） : 到達できないため、実行不能なコード。'},
{'id':393,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストアイテムの実行時における操作の順序。','correct':'制御フロー（control flow）','wrong':'実際の結果（actual result）,ロールベースドレビュー（role-based reviewing）,静的アナライザ（static analyzer）','explain':'制御フロー（control flow） : テストアイテムの実行時における操作の順序。'},
{'id':394,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ユーザが特定の目標を達成する度合に応じて消費される資源の度合。','correct':'効率性（efficiency）','wrong':'交流分析（transactional analysis）,先験ベースド品質（transcendent-based quality）,段階表現（staged representation）','explain':'効率性（efficiency） : ユーザが特定の目標を達成する度合に応じて消費される資源の度合。'},
{'id':395,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムのソフトウェアを実行させて確認するテスト。','correct':'動的テスト（dynamic testing）','wrong':'使用性評価（usability evaluation）,可用性（availability）,品質機能展開（quality function deployment）','explain':'動的テスト（dynamic testing） : コンポーネントやシステムのソフトウェアを実行させて確認するテスト。'},
{'id':396,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠実行中のシステムやコンポーネントの振る舞い（たとえば、メモリの使用効率、CPUの使用状況）を評価するプロセス。','correct':'動的解析（dynamic analysis）','wrong':'設置性（installability）,テスト自動化戦略（test automation strategy）,リスク発生確率（risk likelihood）','explain':'動的解析（dynamic analysis） : 実行中のシステムやコンポーネントの振る舞い（たとえば、メモリの使用効率、CPUの使用状況）を評価するプロセス。'},
{'id':397,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠入力、刺激（原因）、関連する出力（結果）を図式表現したもの。テストケースの設計で使用できる。','correct':'原因結果グラフ（cause-effect graph）','wrong':'構造カバレッジ（structural coverage）,パレート分析（Pareto analysis）,セキュリティ手順（security procedure）','explain':'原因結果グラフ（cause-effect graph） : 入力、刺激（原因）、関連する出力（結果）を図式表現したもの。テストケースの設計で使用できる。'},
{'id':398,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト設計技法の一つ。原因結果グラフからテストケースを設計する。','correct':'原因結果グラフ法（cause-effect graphing）','wrong':'モデレーター（moderator）,欠陥レポート（defect report）,テストマネージャー（test manager）','explain':'原因結果グラフ法（cause-effect graphing） : ブラックボックステスト設計技法の一つ。原因結果グラフからテストケースを設計する。'},
{'id':399,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロジェクトをいくつかの（通常は、多数の）反復部分に分割して開発するライフサイクルの一種。一つの反復部分は、実行可能なプロダクトを（内部、あるいは、外部へ）リリースするという結果をもたらす、完全な開発ループである。','correct':'反復開発モデル（iterative development model）','wrong':'テストディレクタ（test director）,MBTモデル（MBT model）,欠陥レポート（defect report）','explain':'反復開発モデル（iterative development model） : プロジェクトをいくつかの（通常は、多数の）反復部分に分割して開発するライフサイクルの一種。一つの反復部分は、実行可能なプロダクトを（内部、あるいは、外部へ）リリースするという結果をもたらす、完全な開発ループである。'},
{'id':400,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠定義した基準に向けて進捗していることを示すメトリック。たとえば、実行したテストの合計数が、実行を計画しているテストの総数に収束することを示すメトリック。','correct':'収束メトリック（convergence metric）','wrong':'アクター（actor）,入力（input）,システムハードニング（system hardening）','explain':'収束メトリック（convergence metric） : 定義した基準に向けて進捗していることを示すメトリック。たとえば、実行したテストの合計数が、実行を計画しているテストの総数に収束することを示すメトリック。'},
{'id':401,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムが、ユーザーのニーズ、要件、ビジネスプロセスを満足するかをチェックするための公式なテスト。このテストにより、システムが受け入れ基準を満たしているかどうかを判定したり、ユーザー、顧客、その他の認可団体がシステムを受け入れるかどうかを判定したりすることができる。','correct':'受け入れテスト（acceptance testing）','wrong':'テストモデル（test model）,テスト担当者（tester）,テストウェア（testware）','explain':'受け入れテスト（acceptance testing） : システムが、ユーザーのニーズ、要件、ビジネスプロセスを満足するかをチェックするための公式なテスト。このテストにより、システムが受け入れ基準を満たしているかどうかを判定したり、ユーザー、顧客、その他の認可団体がシステムを受け入れるかどうかを判定したりすることができる。'},
{'id':402,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ユーザ、顧客、その他の認可団体が、コンポーネントやシステムを受け入れる場合、満たさねばならない基準。','correct':'受け入れ基準（acceptance criteria）','wrong':'スクラム（scrum）,APIテスト（API testing）,機能要件（functional requirement）','explain':'受け入れ基準（acceptance criteria） : ユーザ、顧客、その他の認可団体が、コンポーネントやシステムを受け入れる場合、満たさねばならない基準。'},
{'id':403,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠使用する際にコンポーネントやシステムが稼動し、利用可能な度合い。','correct':'可用性（availability）','wrong':'探索的テスト（exploratory testing）,ワイルドポインタ（wild pointer）,情報セキュリティ（information security）','explain':'可用性（availability） : 使用する際にコンポーネントやシステムが稼動し、利用可能な度合い。'},
{'id':404,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストアイテム(機能)やフィーチャーが、テストに合格したか失敗したかを判定するための判定規則。','correct':'合格/失敗基準（pass/fail criteria）','wrong':'ユーザエクスペリエンス（user experience）,段階表現（staged representation）,テストディレクタ（test director）','explain':'合格/失敗基準（pass/fail criteria） : テストアイテム(機能)やフィーチャーが、テストに合格したか失敗したかを判定するための判定規則。'},
{'id':405,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠指定された作業および利用者の具体目標に対して適切な機能の集合を提供するソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用','correct':'合目的性（suitability）','wrong':'テスト実行レイヤー（test execution layer）,侵入テスト（penetration testing）,平均修復時間（MTTR）（mean time to repair）','explain':'合目的性（suitability） : 指定された作業および利用者の具体目標に対して適切な機能の集合を提供するソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用'},
{'id':406,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の合目的性を判定するためのテスト。JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。','correct':'合目的性テスト（suitability testing）','wrong':'アンチマルウェア（anti-malware）,インソーステスト（insourced testing）,セキュリティ（security）','explain':'合目的性テスト（suitability testing） : ソフトウェア製品の合目的性を判定するためのテスト。JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。'},
{'id':407,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象に関連するデータ要素の値の集合を分割した範囲。この範囲のすべての値は、仕様に基づいて同じであるとして扱う。','correct':'同値パーティション（equivalence partition）','wrong':'リスクベースドテスト（risk-based testing）,テストコントロール（test control）,マインドマップ（mind map）','explain':'同値パーティション（equivalence partition） : テスト対象に関連するデータ要素の値の集合を分割した範囲。この範囲のすべての値は、仕様に基づいて同じであるとして扱う。'},
{'id':408,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスイートが遂行した、同値分割した領域のパーセンテージ。','correct':'同値分割カバレッジ（equivalence partition coverage）','wrong':'テスト環境（test environment）,正確性テスト（accuracy testing）,習得性（learnability）','explain':'同値分割カバレッジ（equivalence partition coverage） : テストスイートが遂行した、同値分割した領域のパーセンテージ。'},
{'id':409,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト技法の1つ。同値に分割したパーティション内の1つの代表値を使用してその同値パーティションをテストするテストケースを設計する。','correct':'同値分割法（equivalence partitioning）','wrong':'インサイダー脅威（insider threat）,アドホックレビュー（ad hoc review）,パフォーマンスインジケータ（performance indicator）','explain':'同値分割法（equivalence partitioning） : ブラックボックステスト技法の1つ。同値に分割したパーティション内の1つの代表値を使用してその同値パーティションをテストするテストケースを設計する。'},
{'id':410,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストを手動で実行する工数。','correct':'同等の手動テスト工数（equivalent manual test effort）','wrong':'欠陥分類法（defect taxonomy）,市販ソフトウェア（COTS）,EFQMエクセレンスモデル（European Foundation for Quality Management excellence model）','explain':'同等の手動テスト工数（equivalent manual test effort） : テストを手動で実行する工数。'},
{'id':411,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが、正しく機能しないことを証明するためのテスト。否定テストは、特定のテストアプローチやテスト設計技法ではなく、テスト担当者の意向を反映したもの。たとえば、無効入力値や例外値を用いたテスト。','correct':'否定テスト（negative testing）','wrong':'魅力性（attractiveness）,系統的テスト戦略（methodical test strategy）,静的テスト（static testing）','explain':'否定テスト（negative testing） : コンポーネントやシステムが、正しく機能しないことを証明するためのテスト。否定テストは、特定のテストアプローチやテスト設計技法ではなく、テスト担当者の意向を反映したもの。たとえば、無効入力値や例外値を用いたテスト。'},
{'id':412,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネント、システム、プロセスが、特定の要件、ユーザ、顧客のニーズ、期待を満たす度合。','correct':'品質（quality）','wrong':'機能適合性（functional suitability）,スタブ（stub）,セッションベースドテスト（session-based testing）','explain':'品質（quality） : コンポーネント、システム、プロセスが、特定の要件、ユーザ、顧客のニーズ、期待を満たす度合。'},
{'id':413,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロジェクトにおける特別なマイルストン。品質ゲートは、フェーズ間に存在し、前フェーズの結果に強く依存する。品質ゲートには、その前フェーズのドキュメントの正式な確認が含まれる。','correct':'品質ゲート（quality gate）','wrong':'データ定義（data definition）,セッションベースドテスト（session-based testing）,性能効率性（performance efficiency）','explain':'品質ゲート（quality gate） : プロジェクトにおける特別なマイルストン。品質ゲートは、フェーズ間に存在し、前フェーズの結果に強く依存する。品質ゲートには、その前フェーズのドキュメントの正式な確認が含まれる。'},
{'id':414,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠品質にかかる活動や問題のトータルコスト。予防コストと評価コスト、内部失敗コスト、外部失敗コストというように分ける場合が多い。','correct':'品質コスト（cost of quality）','wrong':'特性要因図（cause-effect diagram）,形成的評価（formative evaluation）,優先度（priority）','explain':'品質コスト（cost of quality） : 品質にかかる活動や問題のトータルコスト。予防コストと評価コスト、内部失敗コスト、外部失敗コストというように分ける場合が多い。'},
{'id':415,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠品質マネジメントの一環としての運用技法および活動。品質要件を満たすことに重点を置く。','correct':'品質コントロール（quality control）','wrong':'使用性テストセッション（usability test session）,同値分割法（equivalence partitioning）,欠陥（defect）','explain':'品質コントロール（quality control） : 品質マネジメントの一環としての運用技法および活動。品質要件を満たすことに重点を置く。'},
{'id':416,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠品質に関して組織を指揮し、管理するための調整された活動。注記 品質に関する指揮および管理には、通常、品質方針および品質目標の設定、品質計画、品質管理、品質保証および品質改善が含まれる。JSTQB訳注）JIS Q 9000:2006より引用','correct':'品質マネジメント（quality management）','wrong':'動的解析（dynamic analysis）,状態遷移図（state diagram）,測定値（measure）','explain':'品質マネジメント（quality management） : 品質に関して組織を指揮し、管理するための調整された活動。注記 品質に関する指揮および管理には、通常、品質方針および品質目標の設定、品質計画、品質管理、品質保証および品質改善が含まれる。JSTQB訳注）JIS Q 9000:2006より引用'},
{'id':417,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠品質特性に関連するプロダクトリスク。','correct':'品質リスク（quality risk）','wrong':'テストケース仕様書（test case specification）,テスト戦略（test strategy）,テストアイテム（test item）','explain':'品質リスク（quality risk） : 品質特性に関連するプロダクトリスク。'},
{'id':418,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠品質マネジメントの一部。品質要件を満たしていることの確信度合に焦点を当てている。','correct':'品質保証（quality assurance）','wrong':'判定結果（decision outcome）,頑健性〔堅牢性〕（robustness）,テスト自動化エンジニア（test automation engineer）','explain':'品質保証（quality assurance） : 品質マネジメントの一部。品質要件を満たしていることの確信度合に焦点を当てている。'},
{'id':419,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ユーザ要求を設計品質に反映し、品質を構成する機能を展開し、さらには設計品質を達成するための方法をサブシステムおよびコンポーネントの部品に展開し、最終的には製造プロセスの特定の要素に展開する方法。','correct':'品質機能展開（quality function deployment）','wrong':'リスク（risk）,データ難読化（data obfuscation）,複合条件（compound condition）','explain':'品質機能展開（quality function deployment） : ユーザ要求を設計品質に反映し、品質を構成する機能を展開し、さらには設計品質を達成するための方法をサブシステムおよびコンポーネントの部品に展開し、最終的には製造プロセスの特定の要素に展開する方法。'},
{'id':420,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠製品の属性の分類の一つ。品質に焦点を当てている。','correct':'品質特性（quality characteristic）','wrong':'故障モード影響解析（Failure Mode and Effect Analysis）,不正（anomaly）,EFQMエクセレンスモデル（European Foundation for Quality Management excellence model）','explain':'品質特性（quality characteristic） : 製品の属性の分類の一つ。品質に焦点を当てている。'},
{'id':421,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠一つ以上のインシデントを引き起こしている未解明の原因。','correct':'問題（problem）','wrong':'非機能テスト（non-functional testing）,ウェブコンテンツアクセシビリティガイドライン（Web Content Accessibility Guidelines）,欠陥マネジメント委員会（defect management committee）','explain':'問題（problem） : 一つ以上のインシデントを引き起こしている未解明の原因。'},
{'id':422,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアが前の状態に戻ることのリスクをマネジメントするためにさまざまな技法を使用するテスト。たとえば、再利用可能なテストウェアの設計や一つ以上のテストレベルでのテストの大幅な自動化などがある。','correct':'回帰回避テスト（regression-averse testing）','wrong':'機能要件（functional requirement）,バーンダウンチャート（burndown chart）,キャプチャ/プレイバックツール（capture/playback tool）','explain':'回帰回避テスト（regression-averse testing） : ソフトウェアが前の状態に戻ることのリスクをマネジメントするためにさまざまな技法を使用するテスト。たとえば、再利用可能なテストウェアの設計や一つ以上のテストレベルでのテストの大幅な自動化などがある。'},
{'id':423,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト戦略の一つ。テストチームは回帰のリスクをマネジメントするさまざまな技法（1つ以上のレベルにおける機能／非機能回帰テストの自動化など）を適用する。','correct':'回帰回避テスト戦略（regression-averse test strategy）','wrong':'機能統合（functional integration）,形成的評価（formative evaluation）,プロセスアセスメント（process assessment）','explain':'回帰回避テスト戦略（regression-averse test strategy） : テスト戦略の一つ。テストチームは回帰のリスクをマネジメントするさまざまな技法（1つ以上のレベルにおける機能／非機能回帰テストの自動化など）を適用する。'},
{'id':424,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠故障時に、指定された達成水準を再確立し、直接に影響を受けたデータを回復するソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用','correct':'回復性（recoverability）','wrong':'自動化コード欠陥密度（automation code defect density）,セーフティクリティカルシステム（safety critical system）,テストツール（test tool）','explain':'回復性（recoverability） : 故障時に、指定された達成水準を再確立し、直接に影響を受けたデータを回復するソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用'},
{'id':425,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の回復性を判定するテストのプロセス。','correct':'回復性テスト（recoverability testing）','wrong':'プロセス（process）,インシデントマネジメント（incident management）,優先度（priority）','explain':'回復性テスト（recoverability testing） : ソフトウェア製品の回復性を判定するテストのプロセス。'},
{'id':426,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠順序付けられた値を持つ同値パーティションにおける最大値もしくは最小値。','correct':'境界値（boundary value）','wrong':'交流分析（transactional analysis）,テスト実装（test implementation）,中間者攻撃（man-in-the-middle attack）','explain':'境界値（boundary value） : 順序付けられた値を持つ同値パーティションにおける最大値もしくは最小値。'},
{'id':427,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト設計技法の1つ。境界値に基づいてテストケースを設計する。','correct':'境界値分析（boundary value analysis）','wrong':'テスト選択基準（test selection criteria）,変数（variable）,非武装地帯（demilitarized zone）','explain':'境界値分析（boundary value analysis） : ブラックボックステスト設計技法の1つ。境界値に基づいてテストケースを設計する。'},
{'id':428,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアプログラムから名前を参照することでアクセスできるコンピュータ中のストレージの要素。','correct':'変数（variable）','wrong':'静的テスト（static testing）,資源効率性テスト（resource utilization testing）,パスワードクラック（password cracking）','explain':'変数（variable） : ソフトウェアプログラムから名前を参照することでアクセスできるコンピュータ中のストレージの要素。'},
{'id':429,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠指定された修正を行なうことができるソフトウェア製品の能力。','correct':'変更性（changeability）','wrong':'フォールト攻撃（fault attack）,フィーチャー（feature）,テスト自動化エンジニア（test automation engineer）','explain':'変更性（changeability） : 指定された修正を行なうことができるソフトウェア製品の能力。'},
{'id':430,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠(1)個人やチーム、組織を現在の状態から望ましい状態へと移行させるための構造化されたアプローチ。(2)プロダクトやサービスに対して変更あるいは提案された変更を達成するためのコントロールされた方法。','correct':'変更管理（change management）','wrong':'ユーザストーリーテスト（user story testing）,分析的テスト（analytical testing）,プロジェクトリスク（project risk）','explain':'変更管理（change management） : (1)個人やチーム、組織を現在の状態から望ましい状態へと移行させるための構造化されたアプローチ。(2)プロダクトやサービスに対して変更あるいは提案された変更を達成するためのコントロールされた方法。'},
{'id':431,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠実行結果が期待結果と一致しない状態。この場合、テストは「失敗」とみなす。','correct':'失敗（fail）','wrong':'性能テストツール（performance testing tool）,共依存的振る舞い（codependent behavior）,可用性（availability）','explain':'失敗（fail） : 実行結果が期待結果と一致しない状態。この場合、テストは「失敗」とみなす。'},
{'id':432,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠受け入れテストの種類の1つ。システムが契約上の要件を満たしていることを確認する。','correct':'契約による受け入れテスト（contractual acceptance testing）','wrong':'ユーザストーリーテスト（user story testing）,根本原因分析（root cause analysis）,事前条件（precondition）','explain':'契約による受け入れテスト（contractual acceptance testing） : 受け入れテストの種類の1つ。システムが契約上の要件を満たしていることを確認する。'},
{'id':433,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠検査、および、特定の使用法や適用に対する要件が満たされていることを客観的な証拠で確認すること。','correct':'妥当性確認（validation）','wrong':'セッションベースドテスト（session-based testing）,ネットワークゾーン（network zone）,使用性テスト（usability testing）','explain':'妥当性確認（validation） : 検査、および、特定の使用法や適用に対する要件が満たされていることを客観的な証拠で確認すること。'},
{'id':434,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠IDEALモデルの1フェーズであり、経験から学習し、将来の新しいプロセスと技術を適用するために自らの能力を向上させる。学習フェーズは、分析、妥当性確認、および以降の活動提案によって構成される。JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。','correct':'学習 （IDEAL)（learning (IDEAL)）','wrong':'状態遷移表（state table）,リスクレベル（risk level）,構成アイテム（configuration item）','explain':'学習 （IDEAL)（learning (IDEAL)） : IDEALモデルの1フェーズであり、経験から学習し、将来の新しいプロセスと技術を適用するために自らの能力を向上させる。学習フェーズは、分析、妥当性確認、および以降の活動提案によって構成される。JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。'},
{'id':435,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠定義した条件の下で、人の生命、健康、財産、または環境を危険な状態に導かないシステムの能力。','correct':'安全性（safety）','wrong':'平均故障間隔（MTBF）（mean time between failures）,ラショナル統一プロセス（Rational Unified Process）,資源効率性テスト（resource utilization testing）','explain':'安全性（safety） : 定義した条件の下で、人の生命、健康、財産、または環境を危険な状態に導かないシステムの能力。'},
{'id':436,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠変数の定義と、その変数の以降での使用とを結合したもの。変数の使用の例として、計算（たとえば、乗算）、パス実行の制御（述語的使用）がある。','correct':'定義使用ペア（definition-use pair）','wrong':'品質コントロール（quality control）,ペアテスト（pair testing）,近隣統合テスト（neighborhood integration testing）','explain':'定義使用ペア（definition-use pair） : 変数の定義と、その変数の以降での使用とを結合したもの。変数の使用の例として、計算（たとえば、乗算）、パス実行の制御（述語的使用）がある。'},
{'id':437,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンパイル時にオブジェクトコードに翻訳され、プログラムが走るときに手順に沿って実行されて、データに対して動作を行なうステートメント。','correct':'実行ステートメント（executable statement）','wrong':'複合条件カバレッジ（multiple condition coverage）,ウォークスルー（walkthrough）,機能統合（functional integration）','explain':'実行ステートメント（executable statement） : コンパイル時にオブジェクトコードに翻訳され、プログラムが走るときに手順に沿って実行されて、データに対して動作を行なうステートメント。'},
{'id':438,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠入力値をどのように組み合わせても実行できないパス。','correct':'実行不可能パス（infeasible path）','wrong':'デシジョンテーブルテスト（decision table testing）,標準適合性（compliance）,ペアテスト（pair testing）','explain':'実行不可能パス（infeasible path） : 入力値をどのように組み合わせても実行できないパス。'},
{'id':439,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠実行するための、入力値のセットと事前条件が存在するパス。','correct':'実行可能パス（feasible path）','wrong':'ユニットテストフレームワーク（unit test framework）,受け入れテスト（acceptance testing）,ハイパーリンクテストツール（hyperlink test tool）','explain':'実行可能パス（feasible path） : 実行するための、入力値のセットと事前条件が存在するパス。'},
{'id':440,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムをテストしたときに、生じた／観察された振る舞い。','correct':'実際の結果（actual result）','wrong':'ハイパーリンク（hyperlink）,合目的性（suitability）,セキュリティの脆弱性（security vulnerability）','explain':'実際の結果（actual result） : コンポーネントやシステムをテストしたときに、生じた／観察された振る舞い。'},
{'id':441,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト対象のシステムの動作または入手したテスト結果を基に、動的に対処するテスト。対処テストでは、ほとんどの場合、計画サイクルが短縮されており、テスト対象を受け取るまでテスト設計とテスト実装のフェーズが実施されない。','correct':'対処テスト（reactive testing）','wrong':'信頼区間（confidence interval）,パフォーマンスインジケータ（performance indicator）,ユーザアンケート（user survey）','explain':'対処テスト（reactive testing） : テスト対象のシステムの動作または入手したテスト結果を基に、動的に対処するテスト。対処テストでは、ほとんどの場合、計画サイクルが短縮されており、テスト対象を受け取るまでテスト設計とテスト実装のフェーズが実施されない。'},
{'id':442,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト戦略の一つ。テストチームはソフトウェアを受け取るまでテストの設計と実装を待ち、テスト対象の実際のシステムで対処する。','correct':'対処的テスト戦略（reactive test strategy）','wrong':'実際の結果（actual result）,セキュリティ監査（security audit）,パス〔合格〕（pass）','explain':'対処的テスト戦略（reactive test strategy） : テスト戦略の一つ。テストチームはソフトウェアを受け取るまでテストの設計と実装を待ち、テスト対象の実際のシステムで対処する。'},
{'id':443,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠専門家がレビューする非公式な使用性レビュー。専門家は、使用性の専門家、特定分野の専門家、またはその両方である。','correct':'専門家による使用性レビュー（expert usability review）','wrong':'変更性（changeability）,プロセスモデル（process model）,同等の手動テスト工数（equivalent manual test effort）','explain':'専門家による使用性レビュー（expert usability review） : 専門家がレビューする非公式な使用性レビュー。専門家は、使用性の専門家、特定分野の専門家、またはその両方である。'},
{'id':444,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠一般の市場用（不特定多数のユーザ用）に開発したソフトウェア製品。全く同じものを多数の顧客に提供する。','correct':'市販ソフトウェア（COTS）','wrong':'定義使用ペア（definition-use pair）,EFQMエクセレンスモデル（European Foundation for Quality Management excellence model）,ベストプラクティス（best practice）','explain':'市販ソフトウェア（COTS） : 一般の市場用（不特定多数のユーザ用）に開発したソフトウェア製品。全く同じものを多数の顧客に提供する。'},
{'id':445,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムが故障から回復するまでに要する平均時間。これには一般的に欠陥が解決されていることを保証するテストが含まれる。','correct':'平均修復時間（MTTR）（mean time to repair）','wrong':'終了点（exit point）,テスト手順（test procedure）,シーケンシャル開発モデル（sequential development model）','explain':'平均修復時間（MTTR）（mean time to repair） : システムが故障から回復するまでに要する平均時間。これには一般的に欠陥が解決されていることを保証するテストが含まれる。'},
{'id':446,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システムにおける故障から次の故障までの平均時間。MTBFは、通常、欠陥修正プロセスの一部として、障害が発生したシステムを直ちに修復することを想定した信頼度成長モデルの一部である。','correct':'平均故障間隔（MTBF）（mean time between failures）','wrong':'スタブ（stub）,プロセス駆動スクリプティング（process-driven scripting）,ステートメント（statement）','explain':'平均故障間隔（MTBF）（mean time between failures） : システムにおける故障から次の故障までの平均時間。MTBFは、通常、欠陥修正プロセスの一部として、障害が発生したシステムを直ちに修復することを想定した信頼度成長モデルの一部である。'},
{'id':447,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠定義されたプロセスに従うレビュー。形式に則った文書の作成を伴う。','correct':'形式的レビュー（formal review）','wrong':'有限状態機械（finite state machine）,境界値分析（boundary value analysis）,テスト自動化フレームワーク（test automation framework）','explain':'形式的レビュー（formal review） : 定義されたプロセスに従うレビュー。形式に則った文書の作成を伴う。'},
{'id':448,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠評価方法の一種。特にコンポーネントまたはシステムが引き続き設計中である場合に、その品質を改善するために設計および使用する。','correct':'形成的評価（formative evaluation）','wrong':'反復開発モデル（iterative development model）,コンポーネントテスト（component testing）,資源効率性（resource utilization）','explain':'形成的評価（formative evaluation） : 評価方法の一種。特にコンポーネントまたはシステムが引き続き設計中である場合に、その品質を改善するために設計および使用する。'},
{'id':449,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠変更が影響するすべての成果物を識別すること。変更を達成するために必要なリソースの見積りを含む。','correct':'影響度分析（impact analysis）','wrong':'開始点（entry point）,ファンクションポイント法（Function Point Analysis）,キャプチャ/プレイバックツール（capture/playback tool）','explain':'影響度分析（impact analysis） : 変更が影響するすべての成果物を識別すること。変更を達成するために必要なリソースの見積りを含む。'},
{'id':450,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠使用性テスト技法の一つ。テスト参加者は使用性テストのタスクを実行する間、自身の思考を発話して、モデレータおよび観察者に伝える。思考発話法は、テスト参加者を理解するのに役立つ。','correct':'思考発話法使用性テスト（think aloud usability testing）','wrong':'モデルベースのテスト戦略（model-based test strategy）,テストマネージャー（test manager）,ソフトウェア（software）','explain':'思考発話法使用性テスト（think aloud usability testing） : 使用性テスト技法の一つ。テスト参加者は使用性テストのタスクを実行する間、自身の思考を発話して、モデレータおよび観察者に伝える。思考発話法は、テスト参加者を理解するのに役立つ。'},
{'id':451,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の性能を判定するテスト。 JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。','correct':'性能テスト（performance testing）','wrong':'バランスドスコアカード（balanced scorecard）,システムオブシステムズ（system of systems）,ペアワイズ統合テスト（pairwise integration testing）','explain':'性能テスト（performance testing） : ソフトウェア製品の性能を判定するテスト。 JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。'},
{'id':452,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストツールの種類の1つ。定義したテストアイテム用の負荷を生成する。また、テストの実行中に、性能を計測・記録する。','correct':'性能テストツール（performance testing tool）','wrong':'モニタリングツール（monitoring tool）,デシジョンテーブルテスト（decision table testing）,複合条件（compound condition）','explain':'性能テストツール（performance testing tool） : テストツールの種類の1つ。定義したテストアイテム用の負荷を生成する。また、テストの実行中に、性能を計測・記録する。'},
{'id':453,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが、定義した機能を達成するために使用する時間、リソース、容量の度合。','correct':'性能効率性（performance efficiency）','wrong':'収束メトリック（convergence metric）,テストスクリプト（test script）,擬似ランダム（pseudo-random）','explain':'性能効率性（performance efficiency） : コンポーネントやシステムが、定義した機能を達成するために使用する時間、リソース、容量の度合。'},
{'id':454,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠アクターが悪意を持ってシステムまたは他のアクターに危害を及ぼすユースケース。','correct':'悪用ケース（abuse case）','wrong':'優先度（priority）,インクリメンタル開発モデル（incremental development model）,ユースケース（use case）','explain':'悪用ケース（abuse case） : アクターが悪意を持ってシステムまたは他のアクターに危害を及ぼすユースケース。'},
{'id':455,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠自己や他者、グループの感情を理解し、評価し、管理する能力、技能のこと。','correct':'情動知能（emotional intelligence）','wrong':'カバレッジアイテム（coverage item）,状態遷移図（state diagram）,スクリプトテスト（scripted testing）','explain':'情動知能（emotional intelligence） : 自己や他者、グループの感情を理解し、評価し、管理する能力、技能のこと。'},
{'id':456,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠機密性、完全性、および可用性を提供するために、不正なアクセス、開示、中断、変更、または破壊から情報および情報システムを安全に守り、防御すること。','correct':'情報セキュリティ（information security）','wrong':'APIテスト（API testing）,アカウントハーベスティング（account harvesting）,段階表現（staged representation）','explain':'情報セキュリティ（information security） : 機密性、完全性、および可用性を提供するために、不正なアクセス、開示、中断、変更、または破壊から情報および情報システムを安全に守り、防御すること。'},
{'id':457,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠情報および情報システムの可用性、完全性、認証、機密性、否認不可性を確保することで、情報および情報システムを安全に守り、防御する手段。これらの手段には、防御、検知、対応の能力を用いて情報システムを復元する手段も含まれる。','correct':'情報保証（information assurance）','wrong':'使用性テストスクリプト（usability test script）,統合（integration）,専門家による使用性レビュー（expert usability review）','explain':'情報保証（information assurance） : 情報および情報システムの可用性、完全性、認証、機密性、否認不可性を確保することで、情報および情報システムを安全に守り、防御する手段。これらの手段には、防御、検知、対応の能力を用いて情報システムを復元する手段も含まれる。'},
{'id':458,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織の成熟度の特定側面を構造的に記述した集合体で、組織のプロセスの定義と理解を助ける。成熟度モデルは、多くの場合、共通言語、ビジョンの共有、および改善活動の優先順位を付けるためのフレームワークを提供する。','correct':'成熟度モデル（maturity model）','wrong':'妥当性確認（validation）,プロダクトリスク（product risk）,定義使用ペア（definition-use pair）','explain':'成熟度モデル（maturity model） : 組織の成熟度の特定側面を構造的に記述した集合体で、組織のプロセスの定義と理解を助ける。成熟度モデルは、多くの場合、共通言語、ビジョンの共有、および改善活動の優先順位を付けるためのフレームワークを提供する。'},
{'id':459,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠定義済みプロセス領域のセット全体において、セット内の全てのゴールが達成されているプロセス改善の度合。','correct':'成熟度レベル（maturity level）','wrong':'受け入れテスト（acceptance testing）,妥当性確認（validation）,リスクの影響（risk impact）','explain':'成熟度レベル（maturity level） : 定義済みプロセス領域のセット全体において、セット内の全てのゴールが達成されているプロセス改善の度合。'},
{'id':460,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠(1)プロセスや作業の有効性と効率に関する組織の能力。 (2)通常の運用操作の下でコンポーネントやシステムが信頼性に対するニーズに合致している度合。','correct':'成熟性（maturity）','wrong':'ホワイトボックステスト技法（white-box test technique）,ブランチテスト（branch testing）,テスト見積り（test estimation）','explain':'成熟性（maturity） : (1)プロセスや作業の有効性と効率に関する組織の能力。 (2)通常の運用操作の下でコンポーネントやシステムが信頼性に対するニーズに合致している度合。'},
{'id':461,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠リソースにアクセスすることを可能にする、人、またはプロセスに付与される権限。','correct':'承認（authorization）','wrong':'チェックリストベースドテスト（checklist-based testing）,パースペクティブベースドリーディング（perspective-based reading）,テストサマリーレポート（test summary report）','explain':'承認（authorization） : リソースにアクセスすることを可能にする、人、またはプロセスに付与される権限。'},
{'id':462,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠増加する負荷に応じてソフトウェア製品をアップグレードできる能力。','correct':'拡張性（scalability）','wrong':'複合条件テスト（multiple condition testing）,テスト計画書（test plan）,ペアワイズ統合テスト（pairwise integration testing）','explain':'拡張性（scalability） : 増加する負荷に応じてソフトウェア製品をアップグレードできる能力。'},
{'id':463,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の拡張性を判定するテスト。JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。','correct':'拡張性テスト（scalability testing）','wrong':'ドライバ（driver）,ロードプロファイル（load profile）,運用プロファイリング（operational profiling）','explain':'拡張性テスト（scalability testing） : ソフトウェア製品の拡張性を判定するテスト。JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。'},
{'id':464,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロジェクトチームのメンバーでプロジェクトを評価し、次のプロジェクトに適用することができる教訓を学ぶために行なうプロジェクト終了時のミーティング。','correct':'振り返りミーティング（retrospective meeting）','wrong':'テストフック（test hook）,ウォークスルー（walkthrough）,フィーチャー（feature）','explain':'振り返りミーティング（retrospective meeting） : プロジェクトチームのメンバーでプロジェクトを評価し、次のプロジェクトに適用することができる教訓を学ぶために行なうプロジェクト終了時のミーティング。'},
{'id':465,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠入力値や事前条件のセットに対する、コンポーネントやシステムの反応。','correct':'振る舞い（behavior）','wrong':'モニタリングツール（monitoring tool）,フェーズ内阻止（phase containment）,標準適合性テスト（compliance testing）','explain':'振る舞い（behavior） : 入力値や事前条件のセットに対する、コンポーネントやシステムの反応。'},
{'id':466,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト担当者がテストアイテムや以前のテストの結果の知識や調査情報を使用して、テストを動的に設計、実行するテストアプローチ。','correct':'探索的テスト（exploratory testing）','wrong':'テストレポート（test report）,エラー（error）,セキュリティポリシー（security policy）','explain':'探索的テスト（exploratory testing） : テスト担当者がテストアイテムや以前のテストの結果の知識や調査情報を使用して、テストを動的に設計、実行するテストアプローチ。'},
{'id':467,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ランダムであるようにみえるが、実際にはいくつか事前に決められた順序に従って生成される一揃いのもの。','correct':'擬似ランダム（pseudo-random）','wrong':'故障モード影響解析（Failure Mode and Effect Analysis）,受け入れ基準（acceptance criteria）,受け入れテスト（acceptance testing）','explain':'擬似ランダム（pseudo-random） : ランダムであるようにみえるが、実際にはいくつか事前に決められた順序に従って生成される一揃いのもの。'},
{'id':468,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠判定結果に対して独立に影響する全単一条件結果のうち、テストスイートが遂行した条件結果のパーセンテージ。100%の改良条件判定カバレッジ（MC／DC）は、100%の判定条件カバレッジを意味する。','correct':'改良条件判定カバレッジ（MC／DC）（modified condition / decision coverage）','wrong':'影響度分析（impact analysis）,パス（path）,資源効率性（resource utilization）','explain':'改良条件判定カバレッジ（MC／DC）（modified condition / decision coverage） : 判定結果に対して独立に影響する全単一条件結果のうち、テストスイートが遂行した条件結果のパーセンテージ。100%の改良条件判定カバレッジ（MC／DC）は、100%の判定条件カバレッジを意味する。'},
{'id':469,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ホワイトボックステスト設計技法の一つ。判定結果に対して独立に影響する単一条件結果を実行するテストケースを設計する。','correct':'改良条件判定テスト（modified condition / decision testing）','wrong':'テストマネジメント（test management）,入力値（input value）,クラシフィケーションツリー（classification tree）','explain':'改良条件判定テスト（modified condition / decision testing） : ホワイトボックステスト設計技法の一つ。判定結果に対して独立に影響する単一条件結果を実行するテストケースを設計する。'},
{'id':470,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠攻撃者が悪意を持ってシステムへアクセスするために使用するパスまたは手段。','correct':'攻撃ベクトル（attack vector）','wrong':'インストールウィザード（installation wizard）,インターフェーステスト（interface testing）,テスト条件（test condition）','explain':'攻撃ベクトル（attack vector） : 攻撃者が悪意を持ってシステムへアクセスするために使用するパスまたは手段。'},
{'id':471,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠潜在的な悪意を持って、許可なしにデータ、機能、またはシステムの他の制限された領域にアクセスする人またはプロセス。','correct':'攻撃者（attacker）','wrong':'同値パーティション（equivalence partition）,拡張性（scalability）,状態遷移テスト（state transition testing）','explain':'攻撃者（attacker） : 潜在的な悪意を持って、許可なしにデータ、機能、またはシステムの他の制限された領域にアクセスする人またはプロセス。'},
{'id':472,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが定義された範囲内で要求する機能を実行しないこと。','correct':'故障（failure）','wrong':'インクリメンタル開発モデル（incremental development model）,テスト自動化戦略（test automation strategy）,保守性（maintainability）','explain':'故障（failure） : コンポーネントやシステムが定義された範囲内で要求する機能を実行しないこと。'},
{'id':473,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠物理的または機能的な故障の兆候。たとえば、故障モードのシステムは、遅い運用、間違った出力、または実行の完全な打ち切りなどで特徴付けられる。','correct':'故障モード（failure mode）','wrong':'フォールトインジェクション（fault injection）,テスト適合レイヤー（test adaptation layer）,ネットワークゾーン（network zone）','explain':'故障モード（failure mode） : 物理的または機能的な故障の兆候。たとえば、故障モードのシステムは、遅い運用、間違った出力、または実行の完全な打ち切りなどで特徴付けられる。'},
{'id':474,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠リスクの識別と分析(故障モードの識別と、発生防止策の試み)を行なう体系的なアプローチ。','correct':'故障モード影響解析（Failure Mode and Effect Analysis）','wrong':'コーディング標準（coding standard）,ユーザベースド品質（user-based quality）,判定（decision）','explain':'故障モード影響解析（Failure Mode and Effect Analysis） : リスクの識別と分析(故障モードの識別と、発生防止策の試み)を行なう体系的なアプローチ。'},
{'id':475,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠測定単位に発生したあるカテゴリーの故障数の率。','correct':'故障率（failure rate）','wrong':'ソフトウェア完全性レベル（software integrity level）,静的コード解析（static code analysis）,アカウントハーベスティング（account harvesting）','explain':'故障率（failure rate） : 測定単位に発生したあるカテゴリーの故障数の率。'},
{'id':476,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠情報をエンコードするプロセス。認可されたもののみが一般的には特定の復号化キーまたは復号化プロセスを使用して元の情報を読み取れるようにする。','correct':'暗号化（encryption）','wrong':'プロセス準拠性テスト戦略（process-compliant test strategy）,移植性（portability）,終了点（exit point）','explain':'暗号化（encryption） : 情報をエンコードするプロセス。認可されたもののみが一般的には特定の復号化キーまたは復号化プロセスを使用して元の情報を読み取れるようにする。'},
{'id':477,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠レビューミーティングで情報を記録する人。','correct':'書記（scribe）','wrong':'同値分割カバレッジ（equivalence partition coverage）,機能適合性（functional suitability）,スタブ（stub）','explain':'書記（scribe） : レビューミーティングで情報を記録する人。'},
{'id':478,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠適切かつ完璧な目標を達成する能力の度合。','correct':'有効性（effectiveness）','wrong':'アクター（actor）,ハイパーリンクテストツール（hyperlink test tool）,メトリック（metric）','explain':'有効性（effectiveness） : 適切かつ完璧な目標を達成する能力の度合。'},
{'id':479,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠計算モデルの一つ。有限個数の状態と、それらの状態間遷移から構成される。状態遷移に対応する動作も記述できる。','correct':'有限状態機械（finite state machine）','wrong':'分析的テスト（analytical testing）,複雑度（complexity）,エラー耐性（error tolerance）','explain':'有限状態機械（finite state machine） : 計算モデルの一つ。有限個数の状態と、それらの状態間遷移から構成される。状態遷移に対応する動作も記述できる。'},
{'id':480,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定の条件下で、仕様や他の情報から期待できるコンポーネントやシステムの観測可能な振る舞い。','correct':'期待結果（expected result）','wrong':'テストマネジメントツール（test management tool）,高位レベルテストケース（high level test case）,総合的品質管理（Total Quality Management）','explain':'期待結果（expected result） : 特定の条件下で、仕様や他の情報から期待できるコンポーネントやシステムの観測可能な振る舞い。'},
{'id':481,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠真または偽として評価することのできる論理的表現。たとえば、A>B。','correct':'条件（condition）','wrong':'コンポーネント（component）,N スイッチカバレッジ（N-switch coverage）,マネジメントレビュー（management review）','explain':'条件（condition） : 真または偽として評価することのできる論理的表現。たとえば、A>B。'},
{'id':482,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスイートが遂行した条件結果のパーセンテージ。条件カバレッジを100%にするには、各判定ステートメントの全ての単一条件に対し、真と偽をテストする必要がある。','correct':'条件カバレッジ（condition coverage）','wrong':'総括的評価（summative evaluation）,合格/失敗基準（pass/fail criteria）,テストプロセス改善マニフェスト（test process improvement manifesto）','explain':'条件カバレッジ（condition coverage） : テストスイートが遂行した条件結果のパーセンテージ。条件カバレッジを100%にするには、各判定ステートメントの全ての単一条件に対し、真と偽をテストする必要がある。'},
{'id':483,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ホワイトボックステスト設計技法の一つ。条件結果を実行するテストケースを設計する。','correct':'条件テスト（condition testing）','wrong':'コンピュータフォレンジクス（computer forensics）,品質ゲート（quality gate）,プロジェクトの振り返り（project retrospective）','explain':'条件テスト（condition testing） : ホワイトボックステスト設計技法の一つ。条件結果を実行するテストケースを設計する。'},
{'id':484,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠欠陥の発生源のことで、根本原因が除去されると、欠陥が削減または除去される。','correct':'根本原因（root cause）','wrong':'デバッグ（debugging）,使用性テストスクリプト（usability test script）,欠陥ベースのテスト設計技法（defect-based test design technique）','explain':'根本原因（root cause） : 欠陥の発生源のことで、根本原因が除去されると、欠陥が削減または除去される。'},
{'id':485,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠欠陥の根本原因の識別を目的とした分析技法。根本原因に是正を行なうことで、欠陥再発を最小化することが期待できる。','correct':'根本原因分析（root cause analysis）','wrong':'セキュリティ（security）,テストオラクル（test oracle）,インターフェーステスト（interface testing）','explain':'根本原因分析（root cause analysis） : 欠陥の根本原因の識別を目的とした分析技法。根本原因に是正を行なうことで、欠陥再発を最小化することが期待できる。'},
{'id':486,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠客観的証拠を提示することによって、規定要求事項が満たされていることを確認すること。JSTQB訳注）JIS Q 9000:2006より引用','correct':'検証（verification）','wrong':'エラー耐性（error tolerance）,パス〔合格〕（pass）,不正（anomaly）','explain':'検証（verification） : 客観的証拠を提示することによって、規定要求事項が満たされていることを確認すること。JSTQB訳注）JIS Q 9000:2006より引用'},
{'id':487,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムの構成要素の数、性質、相互連結によって定義される構成。','correct':'構成（configuration）','wrong':'構成管理ツール（configuration management tool）,ロードプロファイル（load profile）,機能テスト（functional testing）','explain':'構成（configuration） : コンポーネントやシステムの構成要素の数、性質、相互連結によって定義される構成。'},
{'id':488,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠成果物の集合体。構成管理の対象であり、構成管理プロセスでは、一つの実体として扱う。','correct':'構成アイテム（configuration item）','wrong':'データ定義（data definition）,テストアーキテクト（test architect）,成熟度モデル（maturity model）','explain':'構成アイテム（configuration item） : 成果物の集合体。構成管理の対象であり、構成管理プロセスでは、一つの実体として扱う。'},
{'id':489,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠技術的かつ管理的な指示と監視を適用する規範。この規範の目的は、・構成アイテムの特性を機能的、物理的に識別・文書化すること、・特性に対する変更をコントロールすること、・処理の変更と実装の状況を記録し、報告すること、・特定の要求への整合を実証すること、である。','correct':'構成管理（configuration management）','wrong':'経験ベースのテスト技法（experience-based test technique）,ソーシャルエンジニアリング（social engineering）,プロセス改善（process improvement）','explain':'構成管理（configuration management） : 技術的かつ管理的な指示と監視を適用する規範。この規範の目的は、・構成アイテムの特性を機能的、物理的に識別・文書化すること、・特性に対する変更をコントロールすること、・処理の変更と実装の状況を記録し、報告すること、・特定の要求への整合を実証すること、である。'},
{'id':490,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠構成アイテムの識別やコントロール（変更やバージョンの状態や構成アイテムをまとめたベースラインのリリース）を支援するツール。','correct':'構成管理ツール（configuration management tool）','wrong':'相互運用性（interoperability）,承認（authorization）,APIテスト（API testing）','explain':'構成管理ツール（configuration management tool） : 構成アイテムの識別やコントロール（変更やバージョンの状態や構成アイテムをまとめたベースラインのリリース）を支援するツール。'},
{'id':491,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントまたはシステムの内部構造に基づいたカバレッジの測定値。','correct':'構造カバレッジ（structural coverage）','wrong':'制御フロー（control flow）,テスト見積り（test estimation）,CASE（CASE）','explain':'構造カバレッジ（structural coverage） : コンポーネントまたはシステムの内部構造に基づいたカバレッジの測定値。'},
{'id':492,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠スクリプト作成技法の一つ。再使用なスクリプトまたはその一部のライブラリを構築し活用する。','correct':'構造化スクリプティング（structured scripting）','wrong':'脆弱性検査ツール（vulnerability scanner）,否定テスト（negative testing）,テスト対象（test object）','explain':'構造化スクリプティング（structured scripting） : スクリプト作成技法の一つ。再使用なスクリプトまたはその一部のライブラリを構築し活用する。'},
{'id':493,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠公式であり、場合によっては必須となる要件のセットで、ガイドラインを提供するため、または作業の方法に一貫性のあるアプローチを規定するために、開発、使用するもの。(たとえば、ISO/IEC標準、IEEE標準や団体による標準)','correct':'標準（standard）','wrong':'ユーザアンケート（user survey）,EFQMエクセレンスモデル（European Foundation for Quality Management excellence model）,専門家による使用性レビュー（expert usability review）','explain':'標準（standard） : 公式であり、場合によっては必須となる要件のセットで、ガイドラインを提供するため、または作業の方法に一貫性のあるアプローチを規定するために、開発、使用するもの。(たとえば、ISO/IEC標準、IEEE標準や団体による標準)'},
{'id':494,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト戦略の一つ。テストチームは標準に従う。対象となる標準は、たとえば、国（法律標準）、ビジネスドメイン（ドメイン標準）、または内部（組織標準）に準拠する。','correct':'標準準拠テスト戦略（standard-compliant test strategy）','wrong':'要件ベースドテスト（requirements-based testing）,テストベース（test basis）,バリューベースド品質（value-based quality）','explain':'標準準拠テスト戦略（standard-compliant test strategy） : テスト戦略の一つ。テストチームは標準に従う。対象となる標準は、たとえば、国（法律標準）、ビジネスドメイン（ドメイン標準）、または内部（組織標準）に準拠する。'},
{'id':495,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠規格、規約または法律上および類似の法規上の規則を遵守するソフトウェア製品の能力。','correct':'標準適合性（compliance）','wrong':'使用性（usability）,経験ベースのテスト技法（experience-based test technique）,3点見積り（three point estimation）','explain':'標準適合性（compliance） : 規格、規約または法律上および類似の法規上の規則を遵守するソフトウェア製品の能力。'},
{'id':496,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムの標準適合性を判定するテスト。','correct':'標準適合性テスト（compliance testing）','wrong':'静的解析（static analysis）,テストオラクル（test oracle）,拡張性テスト（scalability testing）','explain':'標準適合性テスト（compliance testing） : コンポーネントやシステムの標準適合性を判定するテスト。'},
{'id':497,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが機能要件に適合していることを評価するために実行するテスト。','correct':'機能テスト（functional testing）','wrong':'ドライバ（driver）,クラシフィケーションツリー法（classification tree method）,信頼区間（confidence interval）','explain':'機能テスト（functional testing） : コンポーネントやシステムが機能要件に適合していることを評価するために実行するテスト。'},
{'id':498,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠システム統合法のアプローチの一つ。早い時期に、基本機能を動作させるために、コンポーネントやシステムを結合すること。','correct':'機能統合（functional integration）','wrong':'リスク分析（risk analysis）,テストアプローチ（test approach）,失敗（fail）','explain':'機能統合（functional integration） : システム統合法のアプローチの一つ。早い時期に、基本機能を動作させるために、コンポーネントやシステムを結合すること。'},
{'id':499,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが実行できる機能を特定した要件。','correct':'機能要件（functional requirement）','wrong':'アジャイルテスト（agile testing）,テストオラクル（test oracle）,欠陥ベースのテスト設計技法（defect-based test design technique）','explain':'機能要件（functional requirement） : コンポーネントやシステムが実行できる機能を特定した要件。'},
{'id':500,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが、特定の条件の下で使用される場合に、定義または示唆されているニーズを満たす機能を備えている度合。','correct':'機能適合性（functional suitability）','wrong':'故障率（failure rate）,使用性評価（usability evaluation）,システム（system）','explain':'機能適合性（functional suitability） : コンポーネントやシステムが、特定の条件の下で使用される場合に、定義または示唆されているニーズを満たす機能を備えている度合。'},
{'id':501,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠作業成果物に存在する、要件または仕様を満たさない不備または欠点。','correct':'欠陥（defect）','wrong':'ハッシュ化（hashing）,シミュレータ（simulator）,テスト自動化戦略（test automation strategy）','explain':'欠陥（defect） : 作業成果物に存在する、要件または仕様を満たさない不備または欠点。'},
{'id':502,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠一つ以上の欠陥のタイプをターゲットにしたテストケースを導いたり、選び出す技法。テストケースは特定の欠陥のタイプから開発していく。','correct':'欠陥ベースのテスト設計技法（defect-based test design technique）','wrong':'品質マネジメント（quality management）,フェーズ内阻止（phase containment）,ブランチテスト（branch testing）','explain':'欠陥ベースのテスト設計技法（defect-based test design technique） : 一つ以上の欠陥のタイプをターゲットにしたテストケースを導いたり、選び出す技法。テストケースは特定の欠陥のタイプから開発していく。'},
{'id':503,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠欠陥の認識と記録、分類、調査、解決するためのアクションの実行、および解決後の処置を行うプロセス。','correct':'欠陥マネジメント（defect management）','wrong':'データフロー（data flow）,シーケンシャル開発モデル（sequential development model）,フォールト攻撃（fault attack）','explain':'欠陥マネジメント（defect management） : 欠陥の認識と記録、分類、調査、解決するためのアクションの実行、および解決後の処置を行うプロセス。'},
{'id':504,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠クロスファンクショナルなステークホルダのチーム。報告された欠陥の初期検出から最終的な解決（欠陥除去、欠陥除去の延期、報告取り消し）に至るまでを管理する。構成コントロール委員会と同じチームとなることがある。','correct':'欠陥マネジメント委員会（defect management committee）','wrong':'CLIテスト（CLI testing）,エクストリームプログラミング（Extreme Programming）,複合条件カバレッジ（multiple condition coverage）','explain':'欠陥マネジメント委員会（defect management committee） : クロスファンクショナルなステークホルダのチーム。報告された欠陥の初期検出から最終的な解決（欠陥除去、欠陥除去の延期、報告取り消し）に至るまでを管理する。構成コントロール委員会と同じチームとなることがある。'},
{'id':505,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠欠陥の発生、特性、およびステータスを報告するドキュメント。','correct':'欠陥レポート（defect report）','wrong':'統合テスト（integration testing）,ソフトウェア使用性測定一覧表（Software Usability Measurement Inventory）,インスペクション（inspection）','explain':'欠陥レポート（defect report） : 欠陥の発生、特性、およびステータスを報告するドキュメント。'},
{'id':506,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠欠陥の分類を再現しやすくするように設計された（階層的）カテゴリの体系。','correct':'欠陥分類法（defect taxonomy）','wrong':'特性要因図（cause-effect diagram）,テスト結果記録（test log）,ステートメント（statement）','explain':'欠陥分類法（defect taxonomy） : 欠陥の分類を再現しやすくするように設計された（階層的）カテゴリの体系。'},
{'id':507,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠作業成果物の特定単位あたりにおける欠陥の数。','correct':'欠陥密度（defect density）','wrong':'データフロー（data flow）,根本原因分析（root cause analysis）,EFQMエクセレンスモデル（European Foundation for Quality Management excellence model）','explain':'欠陥密度（defect density） : 作業成果物の特定単位あたりにおける欠陥の数。'},
{'id':508,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠必要とされる精度で、正しい結果若しくは正しい効果、または同意できる結果若しくは同意できる効果をもたらすソフトウェア製品の能力。 [ISO/IEC 9126] functionalityも参照のこと。 JSTQB訳注）JIS X 0129-1:2003より引用','correct':'正確性（accuracy）','wrong':'管理図（control chart）,リグレッションテスト（regression testing）,非形式的レビュー（informal review）','explain':'正確性（accuracy） : 必要とされる精度で、正しい結果若しくは正しい効果、または同意できる結果若しくは同意できる効果をもたらすソフトウェア製品の能力。 [ISO/IEC 9126] functionalityも参照のこと。 JSTQB訳注）JIS X 0129-1:2003より引用'},
{'id':509,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の正確性を判定するためのテスト。 JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。','correct':'正確性テスト（accuracy testing）','wrong':'侵入のレベル（level of intrusion）,変数（variable）,インソーステスト（insourced testing）','explain':'正確性テスト（accuracy testing） : ソフトウェア製品の正確性を判定するためのテスト。 JSTQB訳注）この「テスト」は実行とそのための一連の活動を意味している。'},
{'id':510,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠成熟度レベルとして確立したプロセスエリアのゴールに達したかをみるモデル構造であり、各レベルは次のレベルの土台となるよう組み立てられている。','correct':'段階表現（staged representation）','wrong':'振る舞い（behavior）,要件ベースドテスト（requirements-based testing）,標準適合性（compliance）','explain':'段階表現（staged representation） : 成熟度レベルとして確立したプロセスエリアのゴールに達したかをみるモデル構造であり、各レベルは次のレベルの土台となるよう組み立てられている。'},
{'id':511,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト関連ドキュメント（テスト計画書、テスト設計仕様書、テストケース仕様書、テスト手順仕様書、テストスクリプトなど）の階層を通して、あるテストレベルで対象となる要件を追跡すること。','correct':'水平トレーサビリティ（horizontal traceability）','wrong':'使用性テスト（usability testing）,管理図（control chart）,ハイパーリンク（hyperlink）','explain':'水平トレーサビリティ（horizontal traceability） : テスト関連ドキュメント（テスト計画書、テスト設計仕様書、テストケース仕様書、テスト手順仕様書、テストスクリプトなど）の階層を通して、あるテストレベルで対象となる要件を追跡すること。'},
{'id':512,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト自動化アーキテクチャのレイヤー、コンポーネント、およびインターフェースを表現したもの。構造化されたモジュール形式のアプローチを使用してテスト自動化を実装できる。','correct':'汎用テスト自動化アーキテクチャ（generic test automation architecture）','wrong':'ダッシュボード（dashboard）,承認（authorization）,テストデータ（test data）','explain':'汎用テスト自動化アーキテクチャ（generic test automation architecture） : テスト自動化アーキテクチャのレイヤー、コンポーネント、およびインターフェースを表現したもの。構造化されたモジュール形式のアプローチを使用してテスト自動化を実装できる。'},
{'id':513,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ある実体の特性を表すため、数字や種別を付加する手順。','correct':'測定（measurement）','wrong':'検証（verification）,使用性（usability）,擬似ランダム（pseudo-random）','explain':'測定（measurement） : ある実体の特性を表すため、数字や種別を付加する手順。'},
{'id':514,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠測定することによって、ある実体の特性に付加した数字や種別。','correct':'測定値（measure）','wrong':'ゴールクエスチョンメトリック（Goal Question Metric）,開始 （IDEAL)（initiating (IDEAL)）,原因結果グラフ法（cause-effect graphing）','explain':'測定値（measure） : 測定することによって、ある実体の特性に付加した数字や種別。'},
{'id':515,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠問題のさまざまな根本的原因の相互関係を整理し示すための図表現。（潜在的な）欠陥あるいは故障をルートノードとする水平的なツリー構造を用いて、その欠陥あるいは故障の原因をカテゴリ、サブカテゴリに整理する。','correct':'特性要因図（cause-effect diagram）','wrong':'効率性（efficiency）,全数テスト（exhaustive testing）,テストプロセス改善マニフェスト（test process improvement manifesto）','explain':'特性要因図（cause-effect diagram） : 問題のさまざまな根本的原因の相互関係を整理し示すための図表現。（潜在的な）欠陥あるいは故障をルートノードとする水平的なツリー構造を用いて、その欠陥あるいは故障の原因をカテゴリ、サブカテゴリに整理する。'},
{'id':516,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムにおいて、二つの状態の間を遷移すること。','correct':'状態遷移（state transition）','wrong':'テスト環境（test environment）,ウェブコンテンツアクセシビリティガイドライン（Web Content Accessibility Guidelines）,テスト終了作業（test closure）','explain':'状態遷移（state transition） : コンポーネントやシステムにおいて、二つの状態の間を遷移すること。'},
{'id':517,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト技法の1つ。状態遷移図や状態遷移表を使用して、テストアイテムが有効な遷移を正常に実行し、無効な遷移を阻止することを評価するテストケースを導出する。','correct':'状態遷移テスト（state transition testing）','wrong':'インシデントマネジメント（incident management）,テストアイテム（test item）,静的コード解析（static code analysis）','explain':'状態遷移テスト（state transition testing） : ブラックボックステスト技法の1つ。状態遷移図や状態遷移表を使用して、テストアイテムが有効な遷移を正常に実行し、無効な遷移を阻止することを評価するテストケースを導出する。'},
{'id':518,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントまたはシステムが取りうる状態を示し、ある状態から他への状態の変化の原因となる、（または）その結果として生ずる、イベントや状況を表すダイアグラム。','correct':'状態遷移図（state diagram）','wrong':'ペアテスト（pair testing）,責任分担（RACI）マトリクス（RACI matrix）,セキュリティ攻撃（security attack）','explain':'状態遷移図（state diagram） : コンポーネントまたはシステムが取りうる状態を示し、ある状態から他への状態の変化の原因となる、（または）その結果として生ずる、イベントや状況を表すダイアグラム。'},
{'id':519,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠発生する可能性のあるイベントと状態の組み合わせから、生じる結果を示す遷移のテーブル。無効な遷移と、有効な遷移の両方を示す。','correct':'状態遷移表（state table）','wrong':'共依存的振る舞い（codependent behavior）,状態遷移（state transition）,境界値（boundary value）','explain':'状態遷移表（state table） : 発生する可能性のあるイベントと状態の組み合わせから、生じる結果を示す遷移のテーブル。無効な遷移と、有効な遷移の両方を示す。'},
{'id':520,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアが特定の作業に特定の利用条件で適用できるかどうか、およびどのように利用できるかを利用者が理解できるソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用。','correct':'理解性（understandability）','wrong':'コールグラフ（call graph）,SQLインジェクション（SQL injection）,フィーチャー駆動開発（feature-driven development）','explain':'理解性（understandability） : ソフトウェアが特定の作業に特定の利用条件で適用できるかどうか、およびどのように利用できるかを利用者が理解できるソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用。'},
{'id':521,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠重要な懸念、問題、または機会を特定する評価の結果。','correct':'発見事項（finding）','wrong':'プロジェクトの振り返り（project retrospective）,ホワイトボックステスト（white-box testing）,低位レベルテストケース（low-level test case）','explain':'発見事項（finding） : 重要な懸念、問題、または機会を特定する評価の結果。'},
{'id':522,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠成果物、プロセス、または一連のプロセスに対する独立した評価。仕様、標準、契約、その他の条件を遵守していることを第三者機関の担当者が確認する。','correct':'監査（audit）','wrong':'構造カバレッジ（structural coverage）,ホワイトボックステスト（white-box testing）,テストタイプ（test type）','explain':'監査（audit） : 成果物、プロセス、または一連のプロセスに対する独立した評価。仕様、標準、契約、その他の条件を遵守していることを第三者機関の担当者が確認する。'},
{'id':523,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特殊な数学的性質を使って構築した2次元の配列であり、配列の中から選択した二つの列から、その配列の中の各値に対して全てのペアの組み合わせを提供する。','correct':'直交表（orthogonal array）','wrong':'動的テスト（dynamic testing）,機能要件（functional requirement）,テスト自動化（test automation）','explain':'直交表（orthogonal array） : 特殊な数学的性質を使って構築した2次元の配列であり、配列の中から選択した二つの列から、その配列の中の各値に対して全てのペアの組み合わせを提供する。'},
{'id':524,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠直交表を使った変数のオールペア組み合わせテストの体系的な方法。変数を全て組み合わせたときの数を、オールペア組み合わせでテストできるまでに減らす。','correct':'直交表テスト（orthogonal array testing）','wrong':'受け入れ基準（acceptance criteria）,判定（decision）,セッションベースのテストマネジメント（session-based test management）','explain':'直交表テスト（orthogonal array testing） : 直交表を使った変数のオールペア組み合わせテストの体系的な方法。変数を全て組み合わせたときの数を、オールペア組み合わせでテストできるまでに減らす。'},
{'id':525,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠二つ以上のコンポーネントやシステムが情報を交換でき、すでに交換された情報を使用できる度合。','correct':'相互運用性（interoperability）','wrong':'テスト計画書（test plan）,V字モデル（V-model）,出力（output）','explain':'相互運用性（interoperability） : 二つ以上のコンポーネントやシステムが情報を交換でき、すでに交換された情報を使用できる度合。'},
{'id':526,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の相互運用性を判定するテストのプロセス。','correct':'相互運用性テスト（interoperability testing）','wrong':'侵入検知システム（intrusion detection system）,欠陥密度（defect density）,プロセス駆動スクリプティング（process-driven scripting）','explain':'相互運用性テスト（interoperability testing） : ソフトウェア製品の相互運用性を判定するテストのプロセス。'},
{'id':527,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠複合条件を評価するためのプログラミング言語/インタープリタの技法。論理演算子の片方が最終結果を決定するのに十分である場合に、他方は評価されないことがある。','correct':'短絡評価（short-circuiting）','wrong':'ドライバ（driver）,プロセスアセスメント（process assessment）,信頼度成長モデル（reliability growth model）','explain':'短絡評価（short-circuiting） : 複合条件を評価するためのプログラミング言語/インタープリタの技法。論理演算子の片方が最終結果を決定するのに十分である場合に、他方は評価されないことがある。'},
{'id':528,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠IDEALモデルの1フェーズであり、組織が、計画された目標にどのように到達するかを特定する。確立フェーズは、優先順位の決定、アプローチの開発、行動計画の活動によって構成される。','correct':'確立（IDEAL）（establishing (IDEAL)）','wrong':'プローブ効果（probe effect）,サービス拒否（denial of service）,経験ベースのテスト（experience-based testing）','explain':'確立（IDEAL）（establishing (IDEAL)） : IDEALモデルの1フェーズであり、組織が、計画された目標にどのように到達するかを特定する。確立フェーズは、優先順位の決定、アプローチの開発、行動計画の活動によって構成される。'},
{'id':529,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠動的テストの種類の1つ。欠陥を修正した後に実行し、それらの欠陥により引き起こされていた故障が発生しなくなっていることを確認する。','correct':'確認テスト（confirmation testing）','wrong':'信頼性（reliability）,エミュレータ（emulator）,ユーザストーリーテスト（user story testing）','explain':'確認テスト（confirmation testing） : 動的テストの種類の1つ。欠陥を修正した後に実行し、それらの欠陥により引き起こされていた故障が発生しなくなっていることを確認する。'},
{'id':530,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ある環境から他の環境に移すためのソフトウェア製品の能力。備考：環境には組織、ハードウェアまたはソフトウェアの環境を含めてもよい。','correct':'移植性（portability）','wrong':'使用性テストセッション（usability test session）,拡張性（scalability）,コンサルテーションテスト戦略（consultative test strategy）','explain':'移植性（portability） : ある環境から他の環境に移すためのソフトウェア製品の能力。備考：環境には組織、ハードウェアまたはソフトウェアの環境を含めてもよい。'},
{'id':531,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の移植性を判定するテストのプロセス。','correct':'移植性テスト（portability testing）','wrong':'テストタイプ（test type）,契約による受け入れテスト（contractual acceptance testing）,変更性（changeability）','explain':'移植性テスト（portability testing） : ソフトウェア製品の移植性を判定するテストのプロセス。'},
{'id':532,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠統計に基づくプロセス管理ツール。プロセスを監視し、統計的に管理されているかどうかを確認する。プロセスの平均値と、上方管理限界および下方管理限界（最大値および最小値）を図示する。','correct':'管理図（control chart）','wrong':'ユーザベースド品質（user-based quality）,テスト計画書（test plan）,ハイパーリンク（hyperlink）','explain':'管理図（control chart） : 統計に基づくプロセス管理ツール。プロセスを監視し、統計的に管理されているかどうかを確認する。プロセスの平均値と、上方管理限界および下方管理限界（最大値および最小値）を図示する。'},
{'id':533,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト戦略の一つ。テストチームは事前定義した一連のテスト条件（特定のドメイン、アプリケーション、またはテストの種類に関連する可能性のある品質標準、チェックリスト、汎用化された論理テスト条件のコレクション）を使用する。','correct':'系統的テスト戦略（methodical test strategy）','wrong':'CASE（CASE）,ベータテスト（beta testing）,機能適合性（functional suitability）','explain':'系統的テスト戦略（methodical test strategy） : テスト戦略の一つ。テストチームは事前定義した一連のテスト条件（特定のドメイン、アプリケーション、またはテストの種類に関連する可能性のある品質標準、チェックリスト、汎用化された論理テスト条件のコレクション）を使用する。'},
{'id':534,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠定義したタスクを公式に終了するための基準となる条件のセット。','correct':'終了基準（exit criteria）','wrong':'プロセスモデル（process model）,プロセスアセスメント（process assessment）,データ難読化（data obfuscation）','explain':'終了基準（exit criteria） : 定義したタスクを公式に終了するための基準となる条件のセット。'},
{'id':535,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロセスを終了させることを意図した実行可能なステートメント、若しくはポイントとして定義したプロセスステップ。','correct':'終了点（exit point）','wrong':'テストアプローチ（test approach）,ファシリテーター（facilitator）,総括的評価（summative evaluation）','explain':'終了点（exit point） : プロセスを終了させることを意図した実行可能なステートメント、若しくはポイントとして定義したプロセスステップ。'},
{'id':536,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ブラックボックステスト設計技法の一つ。複数のパラメータの値を特定の組み合わせで実行するためのテストケースを設計する。','correct':'組み合わせテスト（combinatorial testing）','wrong':'ペアテスト（pair testing）,バランスドスコアカード（balanced scorecard）,アセッサー（assessor）','explain':'組み合わせテスト（combinatorial testing） : ブラックボックステスト設計技法の一つ。複数のパラメータの値を特定の組み合わせで実行するためのテストケースを設計する。'},
{'id':537,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト担当者の経験・知識・直感をベースに行なうテスト。','correct':'経験ベースのテスト（experience-based testing）','wrong':'インターフェーステスト（interface testing）,テスト実行（test execution）,境界値分析（boundary value analysis）','explain':'経験ベースのテスト（experience-based testing） : テスト担当者の経験・知識・直感をベースに行なうテスト。'},
{'id':538,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト担当者の経験・知識・直感をベースにテストケースを導き出したり選択したりする技法。','correct':'経験ベースのテスト技法（experience-based test technique）','wrong':'ロードプロファイル（load profile）,ユーザエクスペリエンス（user experience）,ライフサイクルモデル（lifecycle model）','explain':'経験ベースのテスト技法（experience-based test technique） : テスト担当者の経験・知識・直感をベースにテストケースを導き出したり選択したりする技法。'},
{'id':539,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムを組み合わせ、さらに大きな集合体を作るプロセス。','correct':'統合（integration）','wrong':'CLIテスト（CLI testing）,アドホックレビュー（ad hoc review）,合目的性テスト（suitability testing）','explain':'統合（integration） : コンポーネントやシステムを組み合わせ、さらに大きな集合体を作るプロセス。'},
{'id':540,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠統合したコンポーネントやシステムのインターフェースや相互作用の欠陥を摘出するためのテスト。','correct':'統合テスト（integration testing）','wrong':'エクストリームプログラミング（Extreme Programming）,テストモデル（test model）,定義使用ペア（definition-use pair）','explain':'統合テスト（integration testing） : 統合したコンポーネントやシステムのインターフェースや相互作用の欠陥を摘出するためのテスト。'},
{'id':541,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠全てのメンバーが参加することを基本に、社会の利益と組織のメンバー全員の利益と顧客満足を通じた長期的な成功を目的とした品質中心の組織全体のマネジメントアプローチ。総合的品質管理は、計画、組織化、監督、コントロールと保証からなる。','correct':'総合的品質管理（Total Quality Management）','wrong':'テスト対象（test object）,フェーズ内阻止（phase containment）,運用プロファイリング（operational profiling）','explain':'総合的品質管理（Total Quality Management） : 全てのメンバーが参加することを基本に、社会の利益と組織のメンバー全員の利益と顧客満足を通じた長期的な成功を目的とした品質中心の組織全体のマネジメントアプローチ。総合的品質管理は、計画、組織化、監督、コントロールと保証からなる。'},
{'id':542,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠評価方法の一種。特にコンポーネントまたはシステムの設計が本質的に完了している場合に、それらの品質についての結論を収集するために設計および使用する。','correct':'総括的評価（summative evaluation）','wrong':'構造カバレッジ（structural coverage）,プロジェクト（project）,攻撃ベクトル（attack vector）','explain':'総括的評価（summative evaluation） : 評価方法の一種。特にコンポーネントまたはシステムの設計が本質的に完了している場合に、それらの品質についての結論を収集するために設計および使用する。'},
{'id':543,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスクリプト内に制御構造を含まない単純なスクリプト技法。','correct':'線形スクリプティング（linear scripting）','wrong':'テスト見積り（test estimation）,可用性（availability）,ハードウェア－ソフトウェア統合テスト（hardware-software integration testing）','explain':'線形スクリプティング（linear scripting） : テストスクリプト内に制御構造を含まない単純なスクリプト技法。'},
{'id':544,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠同じ環境で、同じ目的のために、他の指定されたソフトウェア製品から置き換えて使用することができるソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用','correct':'置換性（replaceability）','wrong':'インシデントレポート（incident report）,クリティカルテストプロセス（Critical Testing Processes）,テストセッション（test session）','explain':'置換性（replaceability） : 同じ環境で、同じ目的のために、他の指定されたソフトウェア製品から置き換えて使用することができるソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用'},
{'id':545,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアの適用を利用者が習得できるソフトウェア製品の能力。','correct':'習得性（learnability）','wrong':'リグレッション（regression）,段階表現（staged representation）,構造カバレッジ（structural coverage）','explain':'習得性（learnability） : ソフトウェアの適用を利用者が習得できるソフトウェア製品の能力。'},
{'id':546,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠効率的にプロダクトを開発・保守するためのプロセスの重要要素を記述したフレームワーク。プロダクトの開発・保守における計画、エンジニアリング、マネジメントでのベストプラクティスをカバーする。','correct':'能力成熟度モデル統合 (CMMI)（Capability Maturity Model Integration (CMMI)）','wrong':'テスト使命（test mission）,アクセシビリティテスト（accessibility testing）,プローブ効果（probe effect）','explain':'能力成熟度モデル統合 (CMMI)（Capability Maturity Model Integration (CMMI)） : 効率的にプロダクトを開発・保守するためのプロセスの重要要素を記述したフレームワーク。プロダクトの開発・保守における計画、エンジニアリング、マネジメントでのベストプラクティスをカバーする。'},
{'id':547,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠静的アナライザの一つ。コードに潜在する特定のセキュリティ脆弱性を検出する。','correct':'脆弱性検査ツール（vulnerability scanner）','wrong':'欠陥ベースのテスト設計技法（defect-based test design technique）,複合条件カバレッジ（multiple condition coverage）,測定値（measure）','explain':'脆弱性検査ツール（vulnerability scanner） : 静的アナライザの一つ。コードに潜在する特定のセキュリティ脆弱性を検出する。'},
{'id':548,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テスト自動化コードのコンポーネントの欠陥密度。','correct':'自動化コード欠陥密度（automation code defect density）','wrong':'パス〔合格〕（pass）,判定結果（decision outcome）,テストサマリーレポート（test summary report）','explain':'自動化コード欠陥密度（automation code defect density） : テスト自動化コードのコンポーネントの欠陥密度。'},
{'id':549,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠IDEALモデルの1フェーズであり、改善を展開し、実践し、組織全体に導入する。行動フェーズでは、解決策の創造、試行/試験的導入、改良、実行の活動によって構成される。JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。','correct':'行動 (IDEAL)（acting (IDEAL)）','wrong':'テストモニタリング（test monitoring）,運用プロファイリング（operational profiling）,静的コード解析（static code analysis）','explain':'行動 (IDEAL)（acting (IDEAL)） : IDEALモデルの1フェーズであり、改善を展開し、実践し、組織全体に導入する。行動フェーズでは、解決策の創造、試行/試験的導入、改良、実行の活動によって構成される。JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。'},
{'id':550,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠論理演算子（AND、OR、またはXOR）によって二つまたはそれ以上の単一条件が結合されたもの。たとえば、「A>B AND C>1000」。','correct':'複合条件（compound condition）','wrong':'ソフトウェア開発ライフサイクル（software development lifecycle）,データプライバシ（data privacy）,アクセシビリティ（accessibility）','explain':'複合条件（compound condition） : 論理演算子（AND、OR、またはXOR）によって二つまたはそれ以上の単一条件が結合されたもの。たとえば、「A>B AND C>1000」。'},
{'id':551,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストスイートが遂行した一つのステートメントの中にある全ての単一条件結果の組み合わせのパーセンテージ。100%の複合条件カバレッジは、100%の改良条件判定カバレッジを意味する。','correct':'複合条件カバレッジ（multiple condition coverage）','wrong':'デイリービルド（daily build）,述語（predicate）,ソフトウェア開発ライフサイクル（software development lifecycle）','explain':'複合条件カバレッジ（multiple condition coverage） : テストスイートが遂行した一つのステートメントの中にある全ての単一条件結果の組み合わせのパーセンテージ。100%の複合条件カバレッジは、100%の改良条件判定カバレッジを意味する。'},
{'id':552,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ホワイトボックステスト設計技法の一つ。（一つのステートメント中の）単一条件結果の組み合わせを実行するテストケースを設計する技法。','correct':'複合条件テスト（multiple condition testing）','wrong':'テストベース（test basis）,ソフトウェア使用性測定一覧表（Software Usability Measurement Inventory）,モデルベースドテスト（model-based testing）','explain':'複合条件テスト（multiple condition testing） : ホワイトボックステスト設計技法の一つ。（一つのステートメント中の）単一条件結果の組み合わせを実行するテストケースを設計する技法。'},
{'id':553,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムの設計・内部構造において、理解、保守、検証することが難しい度合。','correct':'複雑度（complexity）','wrong':'テスト担当者（tester）,テストプロセス改善マニフェスト（test process improvement manifesto）,静的テスト（static testing）','explain':'複雑度（complexity） : コンポーネントやシステムの設計・内部構造において、理解、保守、検証することが難しい度合。'},
{'id':554,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠公式な文書内の表現であり、その表現の中には達成すべき事項を含む。','correct':'要件（requirement）','wrong':'データ定義（data definition）,ペアテスト（pair testing）,レビュー計画（review plan）','explain':'要件（requirement） : 公式な文書内の表現であり、その表現の中には達成すべき事項を含む。'},
{'id':555,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠テストのアプローチの一つ。要件から導き出したテスト目的とテスト条件を基にしてテストケースを設計する。たとえば、特定の機能を遂行するテスト、または、信頼性や使用性のような非機能属性を調べるテストで使用する。','correct':'要件ベースドテスト（requirements-based testing）','wrong':'テスト分析（test analysis）,コンポーネント（component）,データ難読化（data obfuscation）','explain':'要件ベースドテスト（requirements-based testing） : テストのアプローチの一つ。要件から導き出したテスト目的とテスト条件を基にしてテストケースを設計する。たとえば、特定の機能を遂行するテスト、または、信頼性や使用性のような非機能属性を調べるテストで使用する。'},
{'id':556,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠要件、要件属性（たとえば、優先順位、信頼できる情報元）、注釈を記録し、要件の階層をたどる追跡や、要件変更管理を支援するツール。要件マネジメントツールの中には、あらかじめ定義した要件規約を基に、整合性や違反をチェックするような、静的解析をするものもある。','correct':'要件マネジメントツール（requirements management tool）','wrong':'セキュリティ監査（security audit）,欠陥ベースのテスト設計技法（defect-based test design technique）,変更性（changeability）','explain':'要件マネジメントツール（requirements management tool） : 要件、要件属性（たとえば、優先順位、信頼できる情報元）、注釈を記録し、要件の階層をたどる追跡や、要件変更管理を支援するツール。要件マネジメントツールの中には、あらかじめ定義した要件規約を基に、整合性や違反をチェックするような、静的解析をするものもある。'},
{'id':557,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠受け入れテストの種類の1つ。関連する法律、ポリシー、および規制にシステムが準拠していることを確認する。','correct':'規制による受け入れテスト（regulatory acceptance testing）','wrong':'標準準拠テスト戦略（standard-compliant test strategy）,テストハーネス（test harness）,テストプロセス改善担当（test process improver）','explain':'規制による受け入れテスト（regulatory acceptance testing） : 受け入れテストの種類の1つ。関連する法律、ポリシー、および規制にシステムが準拠していることを確認する。'},
{'id':558,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠指定された環境に設置するためのソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用','correct':'設置性（installability）','wrong':'キャプチャ/プレイバックツール（capture/playback tool）,学習 （IDEAL)（learning (IDEAL)）,フェーズ内阻止（phase containment）','explain':'設置性（installability） : 指定された環境に設置するためのソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用'},
{'id':559,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠IDEALモデルの1フェーズであり、現在の状態と改善後の状態を明らかにする。診断フェーズは、現在の状態と望ましい状態を明らかにしたり、改善すべき点を明らかにする活動で構成される。 JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。','correct':'診断 （IDEAL)（diagnosing (IDEAL)）','wrong':'N スイッチカバレッジ（N-switch coverage）,PRISMA（PRISMA）,テスト入力（test input）','explain':'診断 （IDEAL)（diagnosing (IDEAL)） : IDEALモデルの1フェーズであり、現在の状態と改善後の状態を明らかにする。診断フェーズは、現在の状態と望ましい状態を明らかにしたり、改善すべき点を明らかにする活動で構成される。 JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。'},
{'id':560,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムのテストを効果的かつ効率的に設計および実行できる度合い。','correct':'試験性（testability）','wrong':'テスト実行自動化（test execution automation）,品質マネジメント（quality management）,有限状態機械（finite state machine）','explain':'試験性（testability） : コンポーネントやシステムのテストを効果的かつ効率的に設計および実行できる度合い。'},
{'id':561,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネント、システム、人が、適格要件に従っていることを確認するプロセス。たとえば、試験に合格するなど。','correct':'認定（certification）','wrong':'N スイッチカバレッジ（N-switch coverage）,確立（IDEAL）（establishing (IDEAL)）,テストラン（test run）','explain':'認定（certification） : コンポーネント、システム、人が、適格要件に従っていることを確認するプロセス。たとえば、試験に合格するなど。'},
{'id':562,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠人またはプロセスが、実際に、それが名乗っている人またはプロセスであることを確認する手順。','correct':'認証（authentication）','wrong':'インストールウィザード（installation wizard）,境界値（boundary value）,テスト戦略（test strategy）','explain':'認証（authentication） : 人またはプロセスが、実際に、それが名乗っている人またはプロセスであることを確認する手順。'},
{'id':563,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠性能テストの一種。さまざまな負荷でのコンポーネントやシステムの振る舞いを評価するために使用する。負荷については、予測される使用量の低、標準、ピークを一般的に使用する。','correct':'負荷テスト（load testing）','wrong':'テスト実行ツール（test execution tool）,シミュレータ（simulator）,セキュリティ監査（security audit）','explain':'負荷テスト（load testing） : 性能テストの一種。さまざまな負荷でのコンポーネントやシステムの振る舞いを評価するために使用する。負荷については、予測される使用量の低、標準、ピークを一般的に使用する。'},
{'id':564,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロジェクトの参加者への割り当てを示すマトリクス。割り当てられるものには、タスクを完了するためのさまざまな役割、あるいはプロジェクトまたはプロセスの成果物がある。役割と責任を明確にするのに特に役立つ。RACI は、ほとんどの場合に使用される 4 つの主要な役割であるResponsible（実行責任者）、Accountable（説明責任者）、Consulted（協業先）、およびInformed（報告先）からの頭字語である。','correct':'責任分担（RACI）マトリクス（RACI matrix）','wrong':'認定（certification）,テスト実行自動化（test execution automation）,アジャイルマニフェスト（agile manifesto）','explain':'責任分担（RACI）マトリクス（RACI matrix） : プロジェクトの参加者への割り当てを示すマトリクス。割り当てられるものには、タスクを完了するためのさまざまな役割、あるいはプロジェクトまたはプロセスの成果物がある。役割と責任を明確にするのに特に役立つ。RACI は、ほとんどの場合に使用される 4 つの主要な役割であるResponsible（実行責任者）、Accountable（説明責任者）、Consulted（協業先）、およびInformed（報告先）からの頭字語である。'},
{'id':565,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定の要件を満たした能力を明らかにするプロセス。注）有資格（qualified）という用語は相当する能力を有する場合に使われる。','correct':'資格認定（qualification）','wrong':'テストサイクル（test cycle）,インスペクション（inspection）,フィッシング（phishing）','explain':'資格認定（qualification） : 特定の要件を満たした能力を明らかにするプロセス。注）有資格（qualified）という用語は相当する能力を有する場合に使われる。'},
{'id':566,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠明示的な条件の下で、ソフトウェアの機能を実行する際の、資源の量および資源の種類を適切に使用するソフトウェア製品の能力。たとえば、プログラムが使うメインメモリとセカンダリメモリ量、必要な一時ファイルやオーバーフローファイルの大きさ。JSTQB訳注）JIS X 0129-1:2003より引用','correct':'資源効率性（resource utilization）','wrong':'到達不能コード（unreachable code）,根本原因分析（root cause analysis）,シーケンシャル開発モデル（sequential development model）','explain':'資源効率性（resource utilization） : 明示的な条件の下で、ソフトウェアの機能を実行する際の、資源の量および資源の種類を適切に使用するソフトウェア製品の能力。たとえば、プログラムが使うメインメモリとセカンダリメモリ量、必要な一時ファイルやオーバーフローファイルの大きさ。JSTQB訳注）JIS X 0129-1:2003より引用'},
{'id':567,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェア製品の資源効率性を判定するためのテストのプロセス。','correct':'資源効率性テスト（resource utilization testing）','wrong':'ソフトウェア使用性測定一覧表（Software Usability Measurement Inventory）,コードカバレッジ（code coverage）,交流分析（transactional analysis）','explain':'資源効率性テスト（resource utilization testing） : ソフトウェア製品の資源効率性を判定するためのテストのプロセス。'},
{'id':568,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠統合テストの形態の一つ。特定のノードに接続される全てのノードが、テストの基底となる。','correct':'近隣統合テスト（neighborhood integration testing）','wrong':'リグレッション（regression）,理解性（understandability）,判定条件テスト（decision condition testing）','explain':'近隣統合テスト（neighborhood integration testing） : 統合テストの形態の一つ。特定のノードに接続される全てのノードが、テストの基底となる。'},
{'id':569,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠真偽を評価できるステートメント。後続の判定ロジックの制御フローを決定する場合がある。','correct':'述語（predicate）','wrong':'マスターテスト計画書（master test plan）,受け入れテスト（acceptance testing）,欠陥（defect）','explain':'述語（predicate） : 真偽を評価できるステートメント。後続の判定ロジックの制御フローを決定する場合がある。'},
{'id':570,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠特定のプロセスエリア群内でのプロセス改善アプローチのための推奨順番として提供された、能力レベルをみる成熟度モデル構造。','correct':'連続表現（continuous representation）','wrong':'クリティカルテストプロセス（Critical Testing Processes）,トレーサビリティ（traceability）,認定（certification）','explain':'連続表現（continuous representation） : 特定のプロセスエリア群内でのプロセス改善アプローチのための推奨順番として提供された、能力レベルをみる成熟度モデル構造。'},
{'id':571,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠運用環境の中で、コンポーネントやシステムを評価するテスト。','correct':'運用テスト（operational testing）','wrong':'状態遷移テスト（state transition testing）,セキュリティの脆弱性（security vulnerability）,非機能要件（non-functional requirement）','explain':'運用テスト（operational testing） : 運用環境の中で、コンポーネントやシステムを評価するテスト。'},
{'id':572,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠運用プロファイルの開発および実装を行なうプロセス。','correct':'運用プロファイリング（operational profiling）','wrong':'メモリリーク（memory leak）,移植性（portability）,否定テスト（negative testing）','explain':'運用プロファイリング（operational profiling） : 運用プロファイルの開発および実装を行なうプロセス。'},
{'id':573,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠受け入れテストフェーズでの運用テスト。通常はオペレータやアドミニストレータスタッフが（シミュレートした）運用環境にて運用面に焦点を当てて行なう。この運用面とは、たとえば、回復性、リソースの振る舞い、設置性、技術的標準適合性などがある。','correct':'運用受け入れテスト（operational acceptance testing）','wrong':'データ難読化（data obfuscation）,機能要件（functional requirement）,回帰回避テスト（regression-averse testing）','explain':'運用受け入れテスト（operational acceptance testing） : 受け入れテストフェーズでの運用テスト。通常はオペレータやアドミニストレータスタッフが（シミュレートした）運用環境にて運用面に焦点を当てて行なう。この運用面とは、たとえば、回復性、リソースの振る舞い、設置性、技術的標準適合性などがある。'},
{'id':574,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠利用者がソフトウェアの運用および運用管理を行なうことができるソフトウェア製品の能力。','correct':'運用性（operability）','wrong':'品質リスク（quality risk）,セキュリティ手順（security procedure）,データ駆動テスト（data-driven testing）','explain':'運用性（operability） : 利用者がソフトウェアの運用および運用管理を行なうことができるソフトウェア製品の能力。'},
{'id':575,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ユーザや顧客のサイトにインストールしたハードウェアやソフトウェア製品。この環境で、テスト中のコンポーネントやシステムを動作させる。運用環境のソフトウェアには、オペレーティングシステム、データベースマネジメントシステム、その他のアプリケーションを含むこともある。','correct':'運用環境（operational environment）','wrong':'モニタリングツール（monitoring tool）,拡張性（scalability）,コールグラフ（call graph）','explain':'運用環境（operational environment） : ユーザや顧客のサイトにインストールしたハードウェアやソフトウェア製品。この環境で、テスト中のコンポーネントやシステムを動作させる。運用環境のソフトウェアには、オペレーティングシステム、データベースマネジメントシステム、その他のアプリケーションを含むこともある。'},
{'id':576,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムの開発、また運用に対し欠陥が与える影響の度合。','correct':'重要度（severity）','wrong':'ファンクションポイント法（Function Point Analysis）,テスト設計ツール（test design tool）,判定結果（decision outcome）','explain':'重要度（severity） : コンポーネントやシステムの開発、また運用に対し欠陥が与える影響の度合。'},
{'id':577,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠組織やプロジェクトが使命を全うするために必要な要素。成功を確実なものにするために不可欠な要因や活動。','correct':'重要成功要因（critical success factor）','wrong':'テクニカルレビュー（technical review）,ハッカー（hacker）,試験性（testability）','explain':'重要成功要因（critical success factor） : 組織やプロジェクトが使命を全うするために必要な要素。成功を確実なものにするために不可欠な要因や活動。'},
{'id':578,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠IDEALモデルの1フェーズであり、改善活動が成功するための基盤を具体化する。開始フェーズは、活動背景の確認、支援体制および活動体制の構築によって構成される。JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。','correct':'開始 （IDEAL)（initiating (IDEAL)）','wrong':'デイリービルド（daily build）,テスト実装（test implementation）,インバリッドテスト（invalid testing）','explain':'開始 （IDEAL)（initiating (IDEAL)） : IDEALモデルの1フェーズであり、改善活動が成功するための基盤を具体化する。開始フェーズは、活動背景の確認、支援体制および活動体制の構築によって構成される。JSTQB訳注）IDEALのフェーズ名称は「CMMI V1.2 モデル - 開発のための - 公式日本語翻訳版」の定義を使用。'},
{'id':579,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠定義したタスクを公的に開始するための基準となる条件のセット。','correct':'開始基準（entry criteria）','wrong':'パスワードクラック（password cracking）,運用プロファイリング（operational profiling）,不可分条件（atomic condition）','explain':'開始基準（entry criteria） : 定義したタスクを公的に開始するための基準となる条件のセット。'},
{'id':580,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠プロセスの開始を意図した実行ステートメント、若しくはポイントとして定義したプロセスステップ。','correct':'開始点（entry point）','wrong':'試験性（testability）,テスト生成レイヤー（test generation layer）,認定（certification）','explain':'開始点（entry point） : プロセスの開始を意図した実行ステートメント、若しくはポイントとして定義したプロセスステップ。'},
{'id':581,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアの障害部分を実行した場合、または仕様化されたインターフェース条件に違反が発生した場合に、指定された達成水準を維持するソフトウェア製品の能力。','correct':'障害許容性（fault tolerance）','wrong':'水平トレーサビリティ（horizontal traceability）,セーフティクリティカルシステム（safety critical system）,テストフック（test hook）','explain':'障害許容性（fault tolerance） : ソフトウェアの障害部分を実行した場合、または仕様化されたインターフェース条件に違反が発生した場合に、指定された達成水準を維持するソフトウェア製品の能力。'},
{'id':582,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠静的解析を行なうツール。','correct':'静的アナライザ（static analyzer）','wrong':'プロセス準拠性テスト戦略（process-compliant test strategy）,運用環境（operational environment）,コードカバレッジ（code coverage）','explain':'静的アナライザ（static analyzer） : 静的解析を行なうツール。'},
{'id':583,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠ソフトウェアを実行せずにソースコードを解析すること。','correct':'静的コード解析（static code analysis）','wrong':'侵入テスト（penetration testing）,ファンクションポイント法（Function Point Analysis）,収束メトリック（convergence metric）','explain':'静的コード解析（static code analysis） : ソフトウェアを実行せずにソースコードを解析すること。'},
{'id':584,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コードを実行することなく、作業成果物をテストすること。','correct':'静的テスト（static testing）','wrong':'構造化スクリプティング（structured scripting）,ファイアウォール（firewall）,システム（system）','explain':'静的テスト（static testing） : コードを実行することなく、作業成果物をテストすること。'},
{'id':585,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムを実行せずに、それらの形式、構造、内容、またはドキュメントを使用して評価するプロセス。','correct':'静的解析（static analysis）','wrong':'同値分割カバレッジ（equivalence partition coverage）,デバッグツール（debugging tool）,倫理的ハッカー（ethical hacker）','explain':'静的解析（static analysis） : コンポーネントやシステムを実行せずに、それらの形式、構造、内容、またはドキュメントを使用して評価するプロセス。'},
{'id':586,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠形式的な（文書化した）処理手続きに基づかないレビューの種類の1つ。','correct':'非形式的レビュー（informal review）','wrong':'テスト改善計画（test improvement plan）,性能テスト（performance testing）,状態遷移（state transition）','explain':'非形式的レビュー（informal review） : 形式的な（文書化した）処理手続きに基づかないレビューの種類の1つ。'},
{'id':587,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが非機能要件に適合していることを評価するために行われるテスト。','correct':'非機能テスト（non-functional testing）','wrong':'セキュリティテスト（security testing）,アカウントハーベスティング（account harvesting）,テスト見積り（test estimation）','explain':'非機能テスト（non-functional testing） : コンポーネントやシステムが非機能要件に適合していることを評価するために行われるテスト。'},
{'id':588,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠コンポーネントやシステムが、実現したいことに対してどのように動くかを記述している要件。','correct':'非機能要件（non-functional requirement）','wrong':'テスト比較ツール（test comparator）,故障率（failure rate）,拡張性（scalability）','explain':'非機能要件（non-functional requirement） : コンポーネントやシステムが、実現したいことに対してどのように動くかを記述している要件。'},
{'id':589,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠社内ネットワークなどの信頼できるネットワークの中間に置かれる物理的または論理的なサブネットワーク。インターネットなどの信頼されないネットワークへ外部向けサービスを含み、公開する。','correct':'非武装地帯（demilitarized zone）','wrong':'パレート分析（Pareto analysis）,設置性（installability）,TPI Next（TPI Next）','explain':'非武装地帯（demilitarized zone） : 社内ネットワークなどの信頼できるネットワークの中間に置かれる物理的または論理的なサブネットワーク。インターネットなどの信頼されないネットワークへ外部向けサービスを含み、公開する。'},
{'id':590,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠不正な入力や過負荷の環境条件の中でも、コンポーネントまたはシステムが正しく機能できる度合。','correct':'頑健性〔堅牢性〕（robustness）','wrong':'情動知能（emotional intelligence）,開始基準（entry criteria）,機能統合（functional integration）','explain':'頑健性〔堅牢性〕（robustness） : 不正な入力や過負荷の環境条件の中でも、コンポーネントまたはシステムが正しく機能できる度合。'},
{'id':591,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠具体的な入力値や期待結果を使わないテストケース。','correct':'高位レベルテストケース（high level test case）','wrong':'シナリオベースドレビュー（scenario-based reviewing）,実行可能パス（feasible path）,品質コントロール（quality control）','explain':'高位レベルテストケース（high level test case） : 具体的な入力値や期待結果を使わないテストケース。'},
{'id':592,'type':'4taku','genre':'基礎','question':'以下の説明文の用語はどれ？＠＠利用者にとって魅力的であるためのソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用','correct':'魅力性（attractiveness）','wrong':'静的解析（static analysis）,インストールウィザード（installation wizard）,性能効率性（performance efficiency）','explain':'魅力性（attractiveness） : 利用者にとって魅力的であるためのソフトウェア製品の能力。JSTQB訳注）JIS X 0129-1:2003より引用'},
];